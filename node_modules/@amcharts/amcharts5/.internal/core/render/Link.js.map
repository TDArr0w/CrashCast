{"version":3,"file":"Link.js","sourceRoot":"","sources":["../../../../../src/.internal/core/render/Link.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IPoint } from \"../util/IPoint\";\n\nimport { Container, IContainerSettings, IContainerPrivate } from \"./Container\";\nimport { Triangle } from \"./Triangle\";\nimport { OrthogonalLine } from \"./OrthogonalLine\";\n\nimport * as $math from \"../util/Math\";\n\nexport interface ILinkSettings extends IContainerSettings {\n\tpoints?: Array<IPoint>;\n\tcornerRadius?: number;\n}\n\nexport interface ILinkPrivate extends IContainerPrivate {\n}\n\n/** \n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Link extends Container {\n\n\tdeclare public _settings: ILinkSettings;\n\tdeclare public _privateSettings: ILinkPrivate;\n\n\tpublic static className: string = \"Link\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Link.className]);\n\n\tpublic line: OrthogonalLine = this.children.push(OrthogonalLine.new(this._root, { themeTags: [\"line\"] }));\n\tpublic hitLine: OrthogonalLine = this.children.push(OrthogonalLine.new(this._root, { themeTags: [\"hit\"] }));\n\n\tpublic startArrow: Triangle = this.children.push(Triangle.new(this._root, {\n\t\tthemeTags: [\"start\", \"arrow\"],\n\t}));\n\n\tpublic endArrow: Triangle = this.children.push(Triangle.new(this._root, {\n\t\tthemeTags: [\"end\", \"arrow\"],\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis.addTag(\"link\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"points\")) {\n\t\t\tlet points = OrthogonalLine.makeOrthogonal(this.get(\"points\", []));\n\n\t\t\tthis.line.set(\"points\", points);\n\t\t\tthis.hitLine.set(\"points\", points);\n\n\t\t\tconst startArrow = this.startArrow;\n\t\t\tconst endArrow = this.endArrow;\n\n\t\t\tconst len = points.length;\n\t\t\tif (len > 1) {\n\t\t\t\tconst [start, next] = points;\n\t\t\t\tstartArrow.setAll({\n\t\t\t\t\tx: start.x,\n\t\t\t\t\ty: start.y,\n\t\t\t\t\trotation: $math.getAngle(start, next) - 90\n\t\t\t\t});\n\n\t\t\t\tconst last = points[len - 1];\n\t\t\t\tconst prev = points[len - 2];\n\t\t\t\tendArrow.setAll({\n\t\t\t\t\tx: last.x,\n\t\t\t\t\ty: last.y,\n\t\t\t\t\trotation: $math.getAngle(prev, last) + 90\n\t\t\t\t});\n\t\t\t} else if (len === 1) {\n\t\t\t\tconst [pt] = points;\n\t\t\t\tstartArrow.setAll({ x: pt.x, y: pt.y, rotation: 0 });\n\t\t\t\tendArrow.setAll({ x: pt.x, y: pt.y, rotation: 0 });\n\t\t\t}\n\t\t}\n\t}\n}\n"]}