{"version":3,"file":"MonotoneXTension.js","sourceRoot":"","sources":["../../../../../src/.internal/core/render/MonotoneXTension.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n\tconstructor(context: CanvasRenderingContext2D, tension: number) {\n\t\tthis._context = context;\n\t\tthis._tension = tension;\n\t}\n\n\tpublic _line = 0;\n\tpublic _point = 0;\n\tpublic _context: any;\n\tpublic _x0 = 0;\n\tpublic _x1 = 0;\n\tpublic _y0 = 0;\n\tpublic _y1 = 0;\n\tpublic _t0 = 0;\n\n\tpublic _tension: number = 0;\n\n\tpublic areaStart() {\n\t\tthis._line = 0;\n\t}\n\n\tpublic areaEnd() {\n\t\tthis._line = NaN;\n\t}\n\n\tpublic lineStart() {\n\t\tthis._x0 = this._x1 =\n\t\t\tthis._y0 = this._y1 =\n\t\t\tthis._t0 = NaN;\n\t\tthis._point = 0;\n\t}\n\n\tpublic lineEnd() {\n\t\tswitch (this._point) {\n\t\t\tcase 2: this._context.lineTo(this._x1, this._y1); break;\n\t\t\tcase 3: point(this, this._t0, slope2(this, this._t0)); break;\n\t\t}\n\t\tif (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t\tthis._line = 1 - this._line;\n\t}\n\n\tpublic point(x: number, y: number) {\n\t\tlet t1 = NaN;\n\n\t\tx = +x, y = +y;\n\t\tif (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t\tswitch (this._point) {\n\t\t\tcase 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t\t\tcase 1: this._point = 2; break;\n\t\t\tcase 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t\t\tdefault: point(this, this._t0, t1 = slope3(this, x, y)); break;\n\t\t}\n\n\t\tthis._x0 = this._x1, this._x1 = x;\n\t\tthis._y0 = this._y1, this._y1 = y;\n\t\tthis._t0 = t1;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n\tfunction monotoneXTension(context: any) {\n\t\treturn new MonotoneXTension(context, tension);\n\t}\n\n\treturn monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n\treturn x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n\tlet h0 = (that._x1 - that._x0) as any;\n\tlet h1 = (x2 - that._x1) as any;\n\tlet s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n\tlet s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n\tlet p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\treturn (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n\tlet h = that._x1 - that._x0;\n\treturn h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n\tlet x0 = that._x0,\n\t\ty0 = that._y0,\n\t\tx1 = that._x1,\n\t\ty1 = that._y1,\n\t\tdx = (x1 - x0) / 1.5 * (1 - that._tension);\n\tthat._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}"]}