"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const is_empty_array_1 = __importDefault(require("./is-empty-array"));
const detect_1 = __importDefault(require("./detect"));
/**
 * Checks if a given array contains only elements of a specific type.
 *
 * This function uses the `detect` function to determine the type of each element in the array.
 * If all elements are of the specified type, the function returns true. Otherwise, it returns false.
 * An empty array will return false.
 *
 * @param {unknown[]} value - The array to check.
 * @param {string} type - The type to check against. This should be one of the types that the `detect` function can recognize.
 * @returns {boolean} True if all elements in the array are of the specified type, false otherwise.
 */
function isArrayOf(value, type) {
    if ((0, is_empty_array_1.default)(value))
        return false;
    return !value.some(item => (0, detect_1.default)(item) !== type);
}
exports.default = isArrayOf;
//# sourceMappingURL=is-array-of.js.map