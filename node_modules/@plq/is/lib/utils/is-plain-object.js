"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const is_object_1 = __importDefault(require("./is-object"));
const is_null_1 = __importDefault(require("./is-null"));
/**
 * Checks if a given value is a plain object.
 *
 * A plain object is an object created by either `{}`, `new Object()` or `Object.create(null)`.
 * This function checks if the value is not null, if it is an object, and if its prototype is either `null`,
 * `Object.prototype`, or an object with a null prototype. It also checks if the `Symbol.toStringTag` and
 * `Symbol.iterator` properties are not in the object.
 *
 * @param {unknown} obj - The value to check.
 * @returns {boolean} True if the value is a plain object, false otherwise.
 */
function isPlainObject(obj) {
    if ((0, is_null_1.default)(obj) || !(0, is_object_1.default)(obj)) {
        return false;
    }
    const prototype = Object.getPrototypeOf(obj);
    const nonEnumerableProperties = Object.getOwnPropertyNames(obj).filter((prop) => !Object.prototype.propertyIsEnumerable.call(obj, prop));
    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null)
        && !(Symbol.toStringTag in obj)
        && !(Symbol.iterator in obj)
        && nonEnumerableProperties.length === 0;
}
exports.default = isPlainObject;
//# sourceMappingURL=is-plain-object.js.map