"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const is_undefined_1 = __importDefault(require("./is-undefined"));
const is_null_1 = __importDefault(require("./is-null"));
const is_empty_string_1 = __importDefault(require("./is-empty-string"));
const is_empty_object_1 = __importDefault(require("./is-empty-object"));
const is_empty_array_1 = __importDefault(require("./is-empty-array"));
const is_nan_1 = __importDefault(require("./is-nan"));
/**
 * Checks if a given value is empty.
 *
 * A value is considered empty if it is:
 * - undefined
 * - null
 * - NaN
 * - an empty string
 * - an empty object (no enumerable properties)
 * - an empty array
 *
 * @param {unknown} value - The value to check.
 * @returns {boolean} True if the value is empty, false otherwise.
 */
function isEmpty(value) {
    return (0, is_undefined_1.default)(value)
        || (0, is_null_1.default)(value)
        || (0, is_nan_1.default)(value)
        || (0, is_empty_string_1.default)(value)
        || (0, is_empty_object_1.default)(value)
        || (0, is_empty_array_1.default)(value);
}
exports.default = isEmpty;
//# sourceMappingURL=is-empty.js.map