"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const get_tag_1 = __importDefault(require("./get-tag"));
const is_object_like_1 = __importDefault(require("./is-object-like"));
/**
 * Checks if a given value is an arguments object.
 *
 * An arguments object is an Array-like object accessible inside functions that contains the values of the arguments passed to that function.
 * This function checks if the value is an object-like and if its internal `[[Class]]` property is `[object Arguments]`.
 *
 * @param {unknown} value - The value to check.
 * @returns {boolean} True if the value is an arguments object, false otherwise.
 */
function isArguments(value) {
    return (0, is_object_like_1.default)(value) && (0, get_tag_1.default)(value) == '[object Arguments]';
}
exports.default = isArguments;
//# sourceMappingURL=is-arguments.js.map