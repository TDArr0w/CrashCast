"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const is_null_1 = __importDefault(require("./is-null"));
const is_function_1 = __importDefault(require("./is-function"));
/**
 * Checks if a given value is iterable.
 *
 * An iterable is an object which defines a sequence and potentially a return value upon its termination.
 * Specifically, an iterable must be an object which has a function with the semantic of 'returns an iterator object'
 * located via the Symbol.iterator key.
 *
 * @param {unknown} value - The value to check.
 * @returns {boolean} True if the value is iterable, false otherwise.
 */
function isIterable(value) {
    return !(0, is_null_1.default)(value) && (0, is_function_1.default)(value?.[Symbol.iterator]);
}
exports.default = isIterable;
//# sourceMappingURL=is-iterable.js.map