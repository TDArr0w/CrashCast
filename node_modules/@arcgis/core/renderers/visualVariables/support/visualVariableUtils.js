/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import n from"../../../Graphic.js";import{neverReached as i}from"../../../core/compilerUtils.js";import t from"../../../core/Logger.js";import{meterIn as a}from"../../support/lengthUtils.js";import{isValidNumber as r,isSizeVariable as l}from"./sizeVariableUtils.js";const s=()=>t.getLogger("esri.renderers.visualVariables.support.visualVariableUtils"),o=e=>s().warn(`The visualVariable should be an instance of esri.renderers.visualVariables.${e}`),c=()=>s().error("Use of arcade expressions requires an arcade context"),u=new n,f=Math.PI,p=/^\s*(return\s+)?\$view\.scale\s*(;)?\s*$/i;function d(n,i,t){const a="visualVariables"in n?n.visualVariables?.find(e=>"color"===e.type):n;if(!a)return;if("esri.renderers.visualVariables.ColorVariable"!==a.declaredClass)return void o("ColorVariable");const l="number"==typeof i,s=l?null:i,u=s?.attributes;let f=l?i:null;const p=a.field,{ipData:d,hasExpression:v}=a.cache;let m=a.cache.compiledFunc;if(!p&&!v){const e=a.stops;return e&&e[0]&&e[0].color}if("number"!=typeof f)if(v){if(null==t?.arcade)return void c();const e={viewingMode:t.viewingMode,scale:t.scale,spatialReference:t.spatialReference},n=t.arcade.arcadeUtils,i=n.getViewInfo(e),r=n.createExecContext(s,i,t.timeZone);if(!m){const e=n.createSyntaxTree(a.valueExpression);m=n.createFunction(e),a.cache.compiledFunc=m}f=n.executeFunction(m,r)}else u&&(f=u[p]);const h=a.normalizationField,b=null!=u&&null!=h?parseFloat(u[h]):void 0;if(null!=f&&(!h||l||!isNaN(b)&&0!==b)){r(b)&&!l&&(f/=b);const n=R(f,d);if(n){const i=n[0],r=n[1],l=i===r?a.stops[i].color:e.blendColors(a.stops[i].color,a.stops[r].color,n[2],null!=t?t.color:void 0);return new e(l)}}}function v(e,n,i){const t="visualVariables"in e?e.visualVariables?.find(e=>"opacity"===e.type):e;if(!t)return;if("esri.renderers.visualVariables.OpacityVariable"!==t.declaredClass)return void o("OpacityVariable");const a="number"==typeof n,l=a?null:n,s=l?.attributes;let u=a?n:null;const f=t.field,{ipData:p,hasExpression:d}=t.cache;let v=t.cache.compiledFunc;if(!f&&!d){const e=t.stops;return e&&e[0]&&e[0].opacity}if("number"!=typeof u)if(d){if(null==i?.arcade)return void c();const e={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},n=i.arcade.arcadeUtils,a=n.getViewInfo(e),r=n.createExecContext(l,a,i.timeZone);if(!v){const e=n.createSyntaxTree(t.valueExpression);v=n.createFunction(e),t.cache.compiledFunc=v}u=n.executeFunction(v,r)}else s&&(u=s[f]);const m=t.normalizationField,h=null!=s&&null!=m?parseFloat(s[m]):void 0;if(null!=u&&(!m||a||!isNaN(h)&&0!==h)){r(h)&&!a&&(u/=h);const e=R(u,p);if(e){const n=e[0],i=e[1];if(n===i)return t.stops[n].opacity;{const a=t.stops[n].opacity;return a+(t.stops[i].opacity-a)*e[2]}}}}function m(e,n,i){const t="visualVariables"in e?e.visualVariables?.find(e=>"rotation"===e.type):e;if(!t)return;if("esri.renderers.visualVariables.RotationVariable"!==t.declaredClass)return void o("RotationVariable");const a=t.axis||"heading",r="heading"===a&&"arithmetic"===t.rotationType?90:0,l="heading"===a&&"arithmetic"===t.rotationType?-1:1,s="number"==typeof n?null:n,u=s?.attributes,f=t.field,{hasExpression:p}=t.cache;let d=t.cache.compiledFunc,v=null;if(!f&&!p)return v;if(p){if(null==i?.arcade)return void c();const e={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},n=i.arcade.arcadeUtils,a=n.getViewInfo(e),r=n.createExecContext(s,a,i.timeZone);if(!d){const e=n.createSyntaxTree(t.valueExpression);d=n.createFunction(e),t.cache.compiledFunc=d}v=n.executeFunction(d,r)}else u&&(v=u[f]);return v="number"!=typeof v||isNaN(v)?null:r+l*v,v}function h(e,n,i){const t="number"==typeof n,a=t?null:n,l=a?.attributes;let s=t?n:null;const{isScaleDriven:o}=e.cache;let u=e.cache.compiledFunc;if(o){const n=null!=i?i.scale:void 0,t=null!=i?i.view:void 0;s=null==n||"3d"===t?b(e):n}else if(!t)switch(e.inputValueType){case"expression":{if(null==i?.arcade)return void c();const n={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},t=i.arcade.arcadeUtils,r=t.getViewInfo(n),l=t.createExecContext(a,r,i.timeZone);if(!u){const n=t.createSyntaxTree(e.valueExpression);u=t.createFunction(n),e.cache.compiledFunc=u}s=t.executeFunction(u,l);break}case"field":l&&(s=l[e.field]);break;case"unknown":s=null}if(!r(s))return null;if(t||!e.normalizationField)return s;const f=l?parseFloat(l[e.normalizationField]):null;return r(f)&&0!==f?s/f:null}function b(e){let n=null,i=null;const t=e.stops;return t?(n=t[0].value,i=t[t.length-1].value):(n=e.minDataValue||0,i=e.maxDataValue||0),(n+i)/2}function V(e,n,i){const t="visualVariables"in e?e.visualVariables?.find(e=>"size"===e.type):e;if(!t)return;if("esri.renderers.visualVariables.SizeVariable"!==t.declaredClass)return void o("SizeVariable");const a=k(h(t,n,i),t,n,i,t.cache.ipData);return null==a||isNaN(a)?void 0:a}function x(e,n,i){return null==e?null:l(e)?V(e,n,i):r(e)?e:null}function y(e,n,i){return r(i)&&e>i?i:r(n)&&e<n?n:e}function w(e,n,i,t){const a=x(n.minSize,i,t)||n.minDataValue;return null==e&&null==a?null:(e??0)+(a??0)}function g(e,n,i){const t=e.stops;let a=t?.length&&t[0].size;return null==a&&(a=e.minSize),x(a,n,i)}function z(e,n,i,t){const a=x(n.minSize,i,t);if(null==e)return a;const{minDataValue:r,maxDataValue:l}=n;if(null==r||null==l)return null;const s=(e-r)/(l-r),o=x(n.maxSize,i,t),c=null!=t?t.shape:void 0;if(e<=r)return a;if(e>=l)return o;if(null==a||null==o)return null;if("area"===n.scaleBy&&c){const e="circle"===c,n=e?f*(a/2)**2:a*a,i=n+s*((e?f*(o/2)**2:o*o)-n);return e?2*Math.sqrt(i/f):Math.sqrt(i)}return a+s*(o-a)}function F(e,n,i,t){const a=x(n.minSize,i,t);if(null==e||null==a)return a;const r=null!=t?t.shape:void 0,{minDataValue:l}=n;if(null==l)return null;const s=e/l,o=x(n.maxSize,i,t);let c=null;return c="circle"===r?2*Math.sqrt(s*(a/2)**2):"square"===r||"diamond"===r||"image"===r?Math.sqrt(s*a**2):s*a,y(c,a,o)}function S(e,n,i,t,a){if(null==e)return null;const[r,l,s]=R(e,a);if(r===l)return x(n.stops?.[r].size,i,t);{const e=x(n.stops?.[r].size,i,t),a=x(n.stops?.[l].size,i,t);return null==e||null==a?null:e+(a-e)*s}}function E(e,n,i,t){const r=(t?.resolution??1)*a[n.valueUnit],l=x(n.minSize,i,t),s=x(n.maxSize,i,t),{valueRepresentation:o}=n;if(null==e)return l;let c=null;return c="area"===o?2*Math.sqrt(e/f)/r:"radius"===o||"distance"===o?2*e/r:e/r,y(c,l,s)}function M(e){return e}function k(e,n,i,t,a){switch(n.transformationType){case"additive":return w(e,n,i,t);case"constant":return g(n,i,t);case"clamped-linear":return z(e,n,i,t);case"proportional":return F(e,n,i,t);case"stops":return S(e,n,i,t,a);case"real-world-size":return E(e,n,i,t);case"identity":return M(e);case"unknown":return null}}function C(e,n,i){const{isScaleDriven:t}=e.cache;if(!(t&&"3d"===i||n))return null;const a={scale:n,view:i};let r=x(e.minSize,u,a),l=x(e.maxSize,u,a);if(null!=r||null!=l){if(r>l){const e=l;l=r,r=e}return{minSize:r,maxSize:l}}}function D(e,n,i){if(!e.visualVariables)return;const t=[],a=[],r=[],l=[],s=[];for(const o of e.visualVariables)switch(o.type){case"color":a.push(o);break;case"opacity":r.push(o);break;case"rotation":s.push(o);break;case"size":l.push(o)}return a.forEach(e=>{const a=d(e,n,i);t.push({variable:e,value:a})}),r.forEach(e=>{const a=v(e,n,i);t.push({variable:e,value:a})}),s.forEach(e=>{const a=m(e,n,i);t.push({variable:e,value:a})}),l.forEach(e=>{const a=V(e,n,i);t.push({variable:e,value:a})}),t}function R(e,n){if(!n)return;let i=0,t=n.length-1;return n.some((n,a)=>e<n?(t=a,!0):(i=a,!1)),[i,t,(e-n[i])/(n[t]-n[i])]}function U(e,n,t){const a=["proportional","proportional","proportional"];for(const r of e){const e=r.useSymbolValue?"symbol-value":V(r,n,t)??"proportional";switch(r.axis){case"width":a[0]=e;break;case"depth":a[1]=e;break;case"height":a[2]=e;break;case"width-and-depth":a[0]=e,a[1]=e;break;case"all":case void 0:case null:a[0]=e,a[1]=e,a[2]=e;break;default:i(r.axis)}}return a}export{U as getAllSizes,d as getColor,v as getOpacity,m as getRotationAngle,V as getSize,k as getSizeForValue,x as getSizeFromNumberOrVariable,C as getSizeRangeAtScale,D as getVisualVariableValues,p as viewScaleRE};
