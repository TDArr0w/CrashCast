/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import t from"../Color.js";import{clone as o}from"../core/lang.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import{enumeration as i}from"../core/accessorSupport/decorators/enumeration.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import{collectArcadeFieldNames as n}from"../layers/support/fieldUtils.js";import l from"./Renderer.js";import{VisualVariablesMixin as a}from"./mixins/VisualVariablesMixin.js";import p from"./support/AttributeColorInfo.js";import u from"./support/DotDensityLegendOptions.js";import d from"../symbols/SimpleFillSymbol.js";import c from"../symbols/SimpleLineSymbol.js";var h;let m=h=class extends(a(l)){constructor(e){super(e),this.attributes=null,this.backgroundColor=new t([0,0,0,0]),this.dotBlendingEnabled=!0,this.dotShape="square",this.dotSize=1,this.legendOptions=null,this.outline=new c,this.dotValue=null,this.referenceScale=null,this.seed=1,this.type="dot-density"}set visualVariables(e){super.visualVariables=e}calculateDotValue(e){if(null==this.referenceScale)return this.dotValue;const t=e/this.referenceScale*this.dotValue;return t<1?1:t}getSymbol(){return new d({outline:this.outline})}async getSymbolAsync(){return this.getSymbol()}get symbols(){return[this.getSymbol()]}getAttributeHash(){return this.attributes?.reduce((e,t)=>e+t.getAttributeHash(),"")??""}getMeshHash(){return JSON.stringify(this.outline)}clone(){return new h({attributes:o(this.attributes),backgroundColor:o(this.backgroundColor),dotBlendingEnabled:o(this.dotBlendingEnabled),dotShape:o(this.dotShape),dotSize:o(this.dotSize),dotValue:o(this.dotValue),legendOptions:o(this.legendOptions),outline:o(this.outline),referenceScale:o(this.referenceScale),seed:o(this.seed),visualVariables:o(this.visualVariables),authoringInfo:o(this.authoringInfo)})}getControllerHash(){const e=this.attributes?.map(e=>e.field||e.valueExpression||"");return`${e}-${this.outline&&JSON.stringify(this.outline.toJSON())||""}`}async collectRequiredFields(e,t){await this.collectVVRequiredFields(e,t);for(const o of this.attributes??[])o.valueExpression&&await n(e,t,null,o.valueExpression),o.field&&e.add(o.field)}};e([r({type:[p],json:{write:!0}})],m.prototype,"attributes",void 0),e([r({type:t,json:{write:!0}})],m.prototype,"backgroundColor",void 0),e([r({type:Boolean,json:{write:!0}})],m.prototype,"dotBlendingEnabled",void 0),e([r({type:String,json:{write:!1}})],m.prototype,"dotShape",void 0),e([r({type:Number,json:{write:!0}})],m.prototype,"dotSize",void 0),e([r({type:u,json:{write:!0}})],m.prototype,"legendOptions",void 0),e([r({type:c,json:{default:null,write:!0}})],m.prototype,"outline",void 0),e([r({type:Number,json:{write:!0}})],m.prototype,"dotValue",void 0),e([r({type:Number,json:{write:!0}})],m.prototype,"referenceScale",void 0),e([r({type:Number,json:{write:!0}})],m.prototype,"seed",void 0),e([i({dotDensity:"dot-density"})],m.prototype,"type",void 0),m=h=e([s("esri.renderers.DotDensityRenderer")],m);export{m as default};
