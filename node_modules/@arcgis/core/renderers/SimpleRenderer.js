/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{clone as r}from"../core/lang.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import{enumeration as t}from"../core/accessorSupport/decorators/enumeration.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import i from"./Renderer.js";import{VisualVariablesMixin as l}from"./mixins/VisualVariablesMixin.js";import{requiredRendererSymbolProperty as a}from"./support/commonProperties.js";var m;let p=m=class extends(l(i)){constructor(e){super(e),this.description=null,this.label=null,this.symbol=null,this.type="simple"}async collectRequiredFields(e,r){await Promise.all([this.collectSymbolFields(e,r),this.collectVVRequiredFields(e,r)])}async collectSymbolFields(e,r){await Promise.all(this.symbols.map(s=>s.collectRequiredFields(e,r)))}getSymbol(e,r){return this.symbol}async getSymbolAsync(e,r){return this.symbol}get symbols(){return this.symbol?[this.symbol]:[]}getAttributeHash(){return this.visualVariables?.reduce((e,r)=>e+r.getAttributeHash(),"")??""}getMeshHash(){return this.symbols.reduce((e,r)=>e+JSON.stringify(r),"")}get arcadeRequired(){return this.arcadeRequiredForVisualVariables}clone(){return new m({description:this.description,label:this.label,symbol:r(this.symbol),visualVariables:r(this.visualVariables),authoringInfo:r(this.authoringInfo)})}};e([s({type:String,json:{write:!0}})],p.prototype,"description",void 0),e([s({type:String,json:{write:!0}})],p.prototype,"label",void 0),e([s(a)],p.prototype,"symbol",void 0),e([t({simple:"simple"})],p.prototype,"type",void 0),p=m=e([o("esri.renderers.SimpleRenderer")],p);export{p as default};
