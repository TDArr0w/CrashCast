/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as s}from"tslib";import t from"../../../core/Accessor.js";import o from"../../../core/Collection.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{LineSnapper as r}from"./LineSnapper.js";import{ParallelLineSnapper as n}from"./ParallelLineSnapper.js";import{RightAngleSnapper as p}from"./RightAngleSnapper.js";import{RightAngleTriangleSnapper as a}from"./RightAngleTriangleSnapper.js";import{sortCandidatesInPlace as c}from"./snappingUtils.js";let m=class extends t{constructor(s){super(s),this.updating=!1,this._snappers=new o,this._domain=2}initialize(){this._snappers.push(new n(this.view,this.options),new r(this.view,this.options,this.geodesicLengthMeasurementUtils),new p(this.view,this.options,this.geodesicLengthMeasurementUtils),new a(this.view,this.options))}set options(s){this._set("options",s);for(const t of this._snappers)t.options=s}async fetchCandidates(s,t,o){if(!(t&this._domain&&this.options.effectiveSelfEnabled))return[];const e=[];for(const i of this._snappers.items)for(const t of i.snap(s,o))e.push(t);return c(s,e),e}};s([e({readOnly:!0})],m.prototype,"updating",void 0),s([e({constructOnly:!0})],m.prototype,"view",void 0),s([e({constructOnly:!0})],m.prototype,"geodesicLengthMeasurementUtils",void 0),s([e()],m.prototype,"options",null),m=s([i("esri.views.interactive.snapping.SelfSnappingEngine")],m);export{m as SelfSnappingEngine};
