/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import r from"../core/Accessor.js";import s from"../core/Collection.js";import{removeMaybe as o}from"../core/maybe.js";import{watch as t,initial as i}from"../core/reactiveUtils.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";let p=class extends r{constructor(e){super(e),this.view=null,this.baseLayerViews=new s,this.groundLayerViews=new s,this.referenceLayerViews=new s,this._loadingHandle=t(()=>this.view?.map?.basemap,e=>{e&&e.load().catch(()=>{})},i)}destroy(){this._set("view",null),this._loadingHandle=o(this._loadingHandle),this.baseLayerViews.destroyAll(),this.groundLayerViews.destroyAll(),this.referenceLayerViews.destroyAll()}get suspended(){return this.view?.suspended??!0}get updating(){if(this.view?.suspended)return!1;const e=this.view?.map?.basemap;return!!e?.loaded&&(this.baseLayerViews.some(e=>e.updating)||this.groundLayerViews.some(e=>e.updating)||this.referenceLayerViews.some(e=>e.updating))}};e([a({constructOnly:!0})],p.prototype,"view",void 0),e([a({readOnly:!0})],p.prototype,"baseLayerViews",void 0),e([a({readOnly:!0})],p.prototype,"groundLayerViews",void 0),e([a({readOnly:!0})],p.prototype,"referenceLayerViews",void 0),e([a({readOnly:!0})],p.prototype,"suspended",null),e([a({type:Boolean,readOnly:!0})],p.prototype,"updating",null),p=e([n("esri.views.BasemapView")],p);const d=p;export{d as default};
