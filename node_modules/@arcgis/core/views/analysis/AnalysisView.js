/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{EventedAccessor as t}from"../../core/Evented.js";import{makeHandle as r}from"../../core/handleUtils.js";import{EsriPromiseMixin as o}from"../../core/Promise.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";let n=class extends(o(t)){constructor(){super(...arguments),this.parent=null,this._userInteractive=!1,this._interactiveViewModelCount=0}get interactive(){return this._interactiveViewModelCount>0||this._userInteractive}set interactive(e){this._userInteractive=e}get updating(){return!1}get visible(){return(this.parent?.visible&&!this.parent.suspended)??!0}set visible(e){this._overrideIfSome("visible",e)}forceInteractive(){return this._interactiveViewModelCount++,r(()=>this._interactiveViewModelCount--)}};e([i({constructOnly:!0})],n.prototype,"parent",void 0),e([i({constructOnly:!0})],n.prototype,"view",void 0),e([i({type:Boolean})],n.prototype,"interactive",null),e([i()],n.prototype,"_userInteractive",void 0),e([i({readOnly:!0})],n.prototype,"updating",null),e([i()],n.prototype,"visible",null),e([i()],n.prototype,"_interactiveViewModelCount",void 0),n=e([s("esri.views.analysis.AnalysisView")],n);export{n as AnalysisView};
