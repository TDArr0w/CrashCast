/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import{multiplyOpacity as i}from"../../../core/colorUtils.js";import"../../../core/has.js";import{destroyHandle as n}from"../../../core/handleUtils.js";import{l as t}from"../../../chunks/vec32.js";import{create as o}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{projectVectorToVector as r}from"../../../geometry/projection/projectVectorToVector.js";import{onTheGroundElevationInfo as l,absoluteHeightElevationInfo as a}from"../../../support/elevationInfoUtils.js";import{vectorToRender as s}from"./support/viewUtils.js";import{ExtendedLineVisualElement as c}from"./visualElements/ExtendedLineVisualElement.js";import{ParallelLineVisualElement as p}from"./visualElements/ParallelLineVisualElement.js";import{PointVisualElement as d}from"./visualElements/PointVisualElement.js";import{RightAngleQuadVisualElement as u}from"./visualElements/RightAngleQuadVisualElement.js";import{toDehydratedPoint as m,isTarget as f,withSelfSnappingZ as g}from"../../interactive/sketch/normalizedPoint.js";import{defaults as v}from"../../interactive/snapping/Settings.js";import{SnappingVisualizer as h}from"../../interactive/snapping/SnappingVisualizer.js";import{LineSnappingHint as C}from"../../interactive/snapping/hints/LineSnappingHint.js";class w extends h{sortUniqueHints(e){return e.sort((e,i)=>(i instanceof C?i.length:0)-(e instanceof C?e.length:0))}visualizeIntersectionPoint(e,i){const{spatialReference:t,view:o}=i,r=j(i);return n(new d({view:o,primitive:"circle",geometry:m(e.intersectionPoint,t),elevationInfo:e.isDraped?l:a,size:20,outlineSize:2,color:r.intersectionPointColor,outlineColor:r.intersectionPointOutlineColor,pixelSnappingEnabled:!1,isDecoration:!0,attached:!0}))}visualizePoint(e,i){const{view:t,spatialReference:o}=i,r=j(i),l=E(e.point,e.domain,i);return n(new d({view:t,primitive:"circle",geometry:m(l,o),elevationInfo:x(e),size:20,outlineSize:2,color:r.pointColor,outlineColor:r.pointOutlineColor,pixelSnappingEnabled:!1,isDecoration:!0,attached:!0}))}visualizeLine(e,i){const{view:t,spatialReference:o}=i,r=j(i),l=E(e.lineStart,e.domain,i),a=E(e.lineEnd,e.domain,i);return n(D(e.type,l,a,o,x(e),t,r,e.isDraped,e.fadeLeft,e.fadeRight))}visualizeParallelSign(e,i){const{view:o,spatialReference:r}=i,l=j(i),{isDraped:a}=e,s=x(e),c=E(e.lineStart,e.domain,i),d=E(e.lineEnd,e.domain,i),u=S(c,r,s,o,a),m=S(d,r,s,o,a),f=t(m,u,m,.5),g=new p({view:o,attached:!1,offset:v.parallelLineHintOffset,length:v.parallelLineHintLength,width:v.parallelLineHintWidth,color:l.parallelSignColor,location:f,renderOccluded:a?4:16,isDraped:a,renderGroup:3,isDecoration:!0});return g.setDirectionFromPoints(u,f),g.attached=!0,n(g)}visualizeRightAngleQuad(e,i){const{view:t,spatialReference:o}=i,r=j(i),l=x(e),{isDraped:a}=e,s=E(e.previousVertex,e.domain,i),c=E(e.centerVertex,e.domain,i),p=E(e.nextVertex,e.domain,i),d=S(s,o,l,t,a),m=S(c,o,l,t,a),f=S(p,o,l,t,a);return n(new u({view:t,attached:!0,color:a?r.rightAngleColorDraped:r.rightAngleColor,renderOccluded:a?4:2,outlineRenderOccluded:a?4:16,outlineColor:r.rightAngleOutlineColor,outlineSize:v.rightAngleHintOutlineSize,size:v.rightAngleHintSize,isDraped:a,geometry:{previous:d,center:m,next:f},renderGroup:3,isDecoration:!0}))}}function j(n){const{effectiveTheme:t}=n.view,o=e.toUnitRGBA(t.accentColor),r=[0,0,0,0];return{intersectionPointColor:r,intersectionPointOutlineColor:o,pointColor:r,pointOutlineColor:o,lineColor:o,lineOutlineColor:void 0,parallelSignColor:o,rightAngleColor:o,rightAngleColorDraped:e.toUnitRGBA(i(t.accentColor,.5)),rightAngleOutlineColor:o}}function E(e,i,{selfSnappingZ:n,view:t,spatialReference:o}){return 2&i&&f(e)&&null!=n?g(e,n,t,o):e}function x(e){return e.isDraped?l:a}function D(e,i,n,t,o,r,l,a=!1,s=!0,p=!0){const d=S(i,t,o,r,a),u=S(n,t,o,r,a),m=new c({view:r,extensionType:3,start:d,end:u,isDraped:a,color:l.lineColor,renderOccluded:a?4:16,renderGroup:3,isDecoration:!0});switch(e){case 0:m.width=v.lineHintWidthTarget,m.fadedExtensions={start:0,end:v.lineHintFadedExtensions};break;case 2:m.width=v.lineHintWidthReference,m.fadedExtensions={start:0,end:0};break;case 1:m.width=v.lineHintWidthReference,m.fadedExtensions={start:s?v.lineHintFadedExtensions:0,end:p?v.lineHintFadedExtensions:0}}return m.attached=!0,m}function S(e,i,n,t,l){const a=o();if(l){const n=t.overlayManager.spatialReference;r(e,i,a,n)}else s(e,i,n,t,a);return a}export{w as SnappingVisualizer3D};
