/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{EventedMixin as r}from"../../core/Evented.js";import{when as t}from"../../core/reactiveUtils.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import a from"../GroundView.js";let s=class extends(r(a)){constructor(e){super(e)}initialize(){super.initialize(),this.addHandles(t(()=>this._terrainSurface,e=>e.on("elevation-change",e=>this._elevationChange(e)))),this.addHandles(t(()=>this._integratedMeshGroundLayerView,e=>{this.removeHandles(o),e&&this.addHandles(e.elevationProvider.on("elevation-change",e=>this._elevationChange(e)),o)}))}_elevationChange(e){this.emit("elevation-change",e)}get _integratedMeshGroundLayerView(){const e=this.ground?.integratedMeshGround;if(e)return this.view.basemapView?.groundLayerViews.find(r=>r.layer===e)}get _terrainSurface(){return this.view.basemapTerrain}get _usingTerrain(){return this._terrainSurface?.enabled??!1}get _usingIntegratedMesh(){return this._integratedMeshGroundLayerView?.visible??!1}get spatialReference(){return this._terrainSurface?.spatialReference}intersect(e,r,t,n){this._source?.intersect(e,r,t,n)}get updating(){return!this.suspended&&((this._source?.updating??!1)||this.layerViews.some(({updating:e})=>e))}get elevationQueryCache(){return this._usingTerrain?this._terrainSurface?.elevationQueryCache:null}get extentAABR(){return this._terrainSurface?.extent}get suspended(){return this._source?.suspended??!1}get ready(){return this._source?.ready??!0}updateOverlayParameters(){this._terrainSurface?.updateOverlayParameters()}get _source(){return this._usingTerrain?this._terrainSurface:this._usingIntegratedMesh?this._integratedMeshGroundLayerView:null}requestRender(e){this.view.stage.renderView?.requestRender(e)}};e([n({readOnly:!0})],s.prototype,"_integratedMeshGroundLayerView",null),e([n({readOnly:!0})],s.prototype,"_terrainSurface",null),e([n({readOnly:!0})],s.prototype,"_usingTerrain",null),e([n({readOnly:!0})],s.prototype,"_usingIntegratedMesh",null),e([n({readOnly:!0})],s.prototype,"spatialReference",null),e([n({type:Boolean,readOnly:!0})],s.prototype,"updating",null),e([n({readOnly:!0})],s.prototype,"elevationQueryCache",null),e([n({readOnly:!0})],s.prototype,"extentAABR",null),e([n({readOnly:!0})],s.prototype,"suspended",null),e([n({readOnly:!0})],s.prototype,"ready",null),s=e([i("esri.views.3d.GroundView3D")],s);const o=Symbol("integratedMeshHandleKey");export{s as GroundView3D};
