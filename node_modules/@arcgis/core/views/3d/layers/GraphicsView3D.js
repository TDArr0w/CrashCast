/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as r}from"tslib";import{EventedAccessor as e}from"../../../core/Evented.js";import{IdentifiableMixin as o}from"../../../core/Identifiable.js";import{destroyMaybe as t}from"../../../core/maybe.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import p from"./GraphicsView3DDummyLayer.js";import{GraphicsProcessor as c}from"./graphics/GraphicsProcessor.js";import{getHighlightName as a}from"../../support/highlightOptionsUtils.js";let h=class extends(o(e)){constructor(r){super(r),this.drapeSourcePriorityOffset=0,this.processor=null,this.slicePlaneEnabled=!1,this.layer=new p,this.suspended=!1}initialize(){this._set("processor",new c({owner:this,drapeSourcePriorityOffset:this.drapeSourcePriorityOffset}))}destroy(){this._set("processor",t(this.processor))}get loadedGraphics(){return this.getGraphics()}get updating(){return!!this.processor?.updating}get symbolUpdateType(){return this.processor.graphicsCore.symbolUpdateType}getHit(r,e){return this.processor.getHit(r,null)}whenGraphicBounds(r,e){return this.processor.whenGraphicBounds(r,e)}graphicChanged(r){this.processor.graphicsCore.graphicUpdateHandler(r)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}async queryGraphics(){return this.loadedGraphics}highlight(r,e){return this.processor.highlight(r,a(e))}maskOccludee(r){return this.processor.maskOccludee(r)}notifyContentGeometryUpdate(){this.emit("visible-geometry-changed")}get test(){return{graphics3DProcessor:this.processor}}};r([s({constructOnly:!0})],h.prototype,"view",void 0),r([s({constructOnly:!0})],h.prototype,"getGraphics",void 0),r([s()],h.prototype,"loadedGraphics",null),r([s()],h.prototype,"drapeSourcePriorityOffset",void 0),r([s({readOnly:!0})],h.prototype,"updating",null),r([s()],h.prototype,"processor",void 0),r([s({type:Boolean})],h.prototype,"slicePlaneEnabled",void 0),r([s()],h.prototype,"layer",void 0),r([s()],h.prototype,"suspended",void 0),h=r([i("esri.views.3d.layers.GraphicsView3D")],h);const n=h;export{n as default};
