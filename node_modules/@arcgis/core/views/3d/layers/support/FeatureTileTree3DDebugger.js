/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{initial as e}from"../../../../core/reactiveUtils.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import{UpdatingHandles as i}from"../../../../core/support/UpdatingHandles.js";import s from"../../../../geometry/Polygon.js";import{TileTreeDebugger as a}from"../../../support/TileTreeDebugger.js";let p=class extends a{get updating(){return this._watchUpdatingTracking?.updating??!1}constructor(t){super(t),this._watchUpdatingTracking=new i}initialize(){this.addHandles(this.view.enableFeatureTiles()),this._watchUpdatingTracking.addOnCollectionChange(()=>this.view.featureTiles?.tiles,()=>this.update(),e)}destroy(){this._watchUpdatingTracking.destroy()}getTiles(){const t=this.view.featureTiles;if(!t)return[];const e=e=>{const[r,o,i]=e.lij;return s.fromExtent(t.tilingScheme.getExtentGeometry(r,o,i))};return t.tiles.toArray().sort((t,e)=>t.loadPriority-e.loadPriority).map(t=>({...t,level:t.level,geometry:e(t)}))}};t([r()],p.prototype,"_watchUpdatingTracking",void 0),t([r()],p.prototype,"updating",null),t([r()],p.prototype,"view",void 0),p=t([o("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],p);export{p as FeatureTileTree3DDebugger};
