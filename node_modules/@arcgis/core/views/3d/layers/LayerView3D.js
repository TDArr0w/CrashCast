/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o}from"tslib";import{makeHandle as t}from"../../../core/handleUtils.js";import{throwIfAborted as e}from"../../../core/promiseUtils.js";import{whenOnce as r}from"../../../core/reactiveUtils.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{supportsHeightModelInfo as p,rejectLayerError as a}from"../../../geometry/support/heightModelInfoUtils.js";const l=l=>{const n=l;let c=class extends n{constructor(){super(...arguments),this.slicePlaneEnabled=!1,this.supportsHeightUnitConversion=!1}postscript(){super.postscript(),p(this.layer)&&this.addResolvingPromise(this._validateHeightModelInfo())}async _validateHeightModelInfo(){const o=new AbortController,s=o.signal;this.addHandles(t(()=>o.abort())),await r(()=>this.view.defaultsFromMap?.heightModelInfoReady,s),e(s);const i=a(this.layer,this.view.heightModelInfo,this.supportsHeightUnitConversion);if(i)throw i}};return o([s()],c.prototype,"view",void 0),o([s()],c.prototype,"slicePlaneEnabled",void 0),c=o([i("esri.views.3d.layers.LayerView3D")],c),c};export{l as LayerView3D};
