/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import t from"../../../../core/Accessor.js";import{indexOf as r,PositionHint as i}from"../../../../core/arrayUtils.js";import s from"../../../../core/Logger.js";import{clamp as o}from"../../../../core/mathUtils.js";import{unwrapUpdating as n,updating as a,isUpdating as l}from"../../../../core/maybeUpdating.js";import{whenOnce as c}from"../../../../core/reactiveUtils.js";import{getUnitString as p}from"../../../../core/unitUtils.js";import{property as u}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import{subclass as g}from"../../../../core/accessorSupport/decorators/subclass.js";import{o as m,g as d,j as f}from"../../../../chunks/vec32.js";import{fromValues as y}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import h from"../../../../core/sql/WhereClause.js";import{getReferenceEllipsoid as j}from"../../../../geometry/ellipsoidUtils.js";import{load as w,project as b}from"../../../../geometry/projectionUtils.js";import v from"../../../../geometry/SpatialReference.js";import{projectBoundingSphere as R}from"../../../../geometry/projection/projectBoundingSphere.js";import{projectVectorToVector as F}from"../../../../geometry/projection/projectVectorToVector.js";import{create as S}from"../../../../geometry/support/aaBoundingBox.js";import{fromValues as _,expandWithNestedArray as k,expand as M}from"../../../../geometry/support/aaBoundingRect.js";import{doubleArrayFrom as E}from"../../../../geometry/support/DoubleArray.js";import{earth as I}from"../../../../geometry/support/Ellipsoid.js";import{isWGS84 as G,isWebMercator as x}from"../../../../geometry/support/spatialReferenceUtils.js";import{f as L}from"../../../../chunks/sphere.js";import{project as O}from"../../../../geometry/support/webMercatorUtils.js";import B from"../../../../layers/support/FeatureFilter.js";import{objectIdFilter as U,filterInPlace as T}from"./I3SUtil.js";let C=class extends t{constructor(e){super(e),this._projectionEngineLoaded=!1}initialize(){c(()=>this.viewFilter?.geometry||null!=this.layerFilter).then(()=>this.loadAsyncModule(import("../../../../geometry/geometryEngine.js").then(e=>{this.destroyed||(this._geometryEngine=e)})))}get sortedObjectIds(){if(null==this.viewFilter?.objectIds)return null;const e=E(this.viewFilter.objectIds);return e.sort(),e}get parsedWhereClause(){const e=this.viewFilter?.where;if(null==e||!e)return null;try{return h.create(e,{fieldsIndex:this.layerFieldsIndex})}catch(t){s.getLogger(this).error(`Failed to parse filter where clause: ${t}`)}return null}addFilters(e,t,r,i){const o=this.sortedObjectIds;null!=o&&e.push(e=>U(o,!0,e)),this.addSqlFilter(e,this.parsedWhereClause),this.addTimeFilter(e,this.viewFilter?.timeExtent);const a=n(this._layerMaskGeometries),l=this._geometryEngine,c=()=>s.getLogger(this);if(null!=a&&null!=this.layerFilter&&null!=l){const s=this.layerFilter.spatialRelationship;e.push((e,o)=>N(c,l,e,o,i,t,r,a,s))}const p=n(this._viewMaskGeometries);if(null!=p&&null!=this.viewFilter&&null!=l){const s=this.viewFilter.spatialRelationship;e.push((e,o)=>N(c,l,e,o,i,t,r,p,s))}}isMBSGeometryVisible(e,t,r){const i=n(this._layerMaskGeometries),o=this._geometryEngine;if(null!=i&&null!=this.layerFilter&&null!=o){const n=this.layerFilter.spatialRelationship,a=i[0].spatialReference||t;if(!R(e,r,$,a))return s.getLogger(this).warnOnce("SceneLayer.mask geometry is using unsupported SpatialReference, skipping geometry filter for MBS"),!0;return q(o,$,i,a,n)}const a=n(this._viewMaskGeometries);if(null!=a&&null!=this.viewFilter&&null!=o){const i=this.viewFilter.spatialRelationship,n=a[0].spatialReference||t;if(!R(e,r,$,n))return s.getLogger(this).warnOnce("SceneLayerView.filter.geometry is using unsupported SpatialReference, skipping geometry filter for MBS"),!0;return q(o,$,a,n,i)}return!0}get parsedGeometry(){const e=n(this._viewMaskGeometries),t=n(this._layerMaskGeometries);return null==e||null==t?e||t:t.concat(e)}get _layerMaskGeometries(){const e=this.layerFilter;return null==e?null:null==this._geometryEngine?a:"disjoint"===e.spatialRelationship?e.geometries.map(e=>({type:"polygon",rings:e.rings,spatialReference:e.spatialReference,cache:{}})):[e.geometries.reduce((e,t)=>(e.rings=[...e.rings,...t.rings],e),{type:"polygon",rings:[],spatialReference:e.geometries[0].spatialReference,cache:{}})]}get _viewMaskGeometries(){if(null==this.viewFilter)return null;const{geometry:e}=this.viewFilter;if(null==e)return null;if(null==this.viewFilter||null==this._geometryEngine)return a;const{distance:t,units:r}=this.viewFilter,i=this.viewFilter.spatialRelationship,o="mesh"===e.type?e.extent:e;if(null==t||0===t)return A(this._geometryEngine,o,i);const n=r||p(o.spatialReference);if(o.spatialReference.isWGS84){const e=this._geometryEngine.geodesicBuffer(o,t,n);return A(this._geometryEngine,e,i)}const l=O(o,v.WGS84);if(null!=l){const e=O(this._geometryEngine.geodesicBuffer(l,t,n),o.spatialReference);return A(this._geometryEngine,e,i)}if(!this._projectionEngineLoaded&&(this.loadAsyncModule(w().then(()=>this._projectionEngineLoaded=!0)),!this._projectionEngineLoaded))return null;let c=null;try{c=b(o,v.WGS84)}catch(u){}if(c)try{c=b(this._geometryEngine.geodesicBuffer(c,t,n),o.spatialReference)}catch(u){c=null}return c||s.getLogger(this).error(`Filter by geodesic buffer (distance) unsupported, failed to project input geometry (${o.spatialReference.wkid}) to WGS84.`),A(this._geometryEngine,c,i)}get updating(){return l(this._layerMaskGeometries)||l(this._viewMaskGeometries)}static checkSupport(e){return null!=e&&(!!W(e.spatialRelationship)||(s.getLogger(this.prototype).warn(`Filters with spatialRelationship other than ${V.join(", ")} are not supported for mesh scene layers`),!1))}};e([u()],C.prototype,"layerFilter",void 0),e([u({type:B})],C.prototype,"viewFilter",void 0),e([u()],C.prototype,"layerFieldsIndex",void 0),e([u()],C.prototype,"loadAsyncModule",void 0),e([u()],C.prototype,"addSqlFilter",void 0),e([u()],C.prototype,"addTimeFilter",void 0),e([u({readOnly:!0})],C.prototype,"sortedObjectIds",null),e([u({readOnly:!0})],C.prototype,"parsedWhereClause",null),e([u({readOnly:!0})],C.prototype,"parsedGeometry",null),e([u({readOnly:!0})],C.prototype,"_layerMaskGeometries",null),e([u({readOnly:!0})],C.prototype,"_viewMaskGeometries",null),e([u()],C.prototype,"updating",null),e([u()],C.prototype,"_projectionEngineLoaded",void 0),e([u()],C.prototype,"_geometryEngine",void 0),C=e([g("esri.views.3d.layers.i3s.I3SMeshViewFilter")],C);const V=(e=>e)(["contains","intersects","disjoint"]);function W(e){return null!=e&&V.includes(e)}function A(e,t,s){if(null==t)return null;if("disjoint"===s&&"polygon"===t.type){const s=t.rings.length,o=t.spatialReference,n=new Array(s);for(let e=0;e<s;++e){const r=_(1/0,1/0,-1/0,-1/0);k(r,t.rings[e]),n[e]={type:"polygon",rings:[t.rings[e]],spatialReference:o,cache:{},aabr:r}}n.sort((e,t)=>e.aabr[0]-t.aabr[0]);const a=new Set,l=new i;for(let t=0;t<n.length;++t){const i=n[t],s=i.aabr[0];a.forEach(t=>{if(s>=t.aabr[2])return void a.delete(t);if(i.aabr[1]>t.aabr[3]||i.aabr[3]<t.aabr[1]||!e.intersects(i,t))return;i.rings=i.rings.concat(t.rings),M(i.aabr,t.aabr,i.aabr),i.cache={},a.delete(t);const o=r(n,t,n.length,l);n.splice(o,1)}),a.add(i)}for(const e of n)e.aabr=void 0;return n}return[t]}function q(e,t,r,i,s){if(t[3]>=.5*(t[2]+j(i).radius))return!0;const o=D(e,t,i);return r.every(t=>1!==H(e,t,o,s))}function N(e,t,r,i,s,o,n,a,l){const c=a[0].spatialReference||o.spatialReference;if(!R(i.node.serviceMbsInIndexSR,n,$,c))return void e().warnOnce("SceneLayerView.filter.geometry is using unsupported SpatialReference, skipping geometry filter");const p=D(t,$,c),u=z(l,o,c,s,i.objectHandle),g="intersects"===l;let m=null;for(const d of a){if(0===r.length)return;switch(H(t,d,p,l)){case 1:return g&&(i.weaklyRemovedIds=i.weaklyRemovedIds?.concat(r)??r.slice()),void(r.length=0);case 0:continue}T(r,i.featureIds,e=>!!J(t,d,e,u)||(g&&(m||=[],m.push(i.featureIds[e])),!1))}m&&(i.weaklyRemovedIds=i.weaklyRemovedIds?.concat(m)??m)}const $=L(0,0,0,0);function z(e,t,r,i,s){const o=t.renderSpatialReference,n=new Map,a={type:"polygon",rings:[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],spatialReference:r};a.rings[0][3]=a.rings[0][0];const l={indices:null,data:null,stride:0,startIndex:0,endIndex:0};let c,p;switch(e){case"intersects":c=(e,t,r)=>e.intersects(t,r)?0:2,p=P;break;case"contains":c=(e,t,r)=>e.contains(t,r)?2:1,p=P;break;default:c=(e,t,r)=>e.disjoint(t,r)?2:1,p=Z}return{collection:i,object:s,type:e,maskSR:r,renderSR:o,aabbCache:n,triangle:a,positions:l,triangleTest:c,geometryTest:p}}function D(e,t,r){const i={type:"point",x:t[0],y:t[1],hasZ:!1,hasM:!1,spatialReference:r},s=!G(r)&&!x(r),n=Number.isNaN(t[3])?0:o(t[3],0,2*I.radius),a=s?e.buffer(i,n,1):e.geodesicBuffer(i,n,1);return a.type="polygon",a}function H(e,t,r,i){switch(i){case"intersects":case"contains":return P(e,t,r);case"disjoint":return Z(e,t,r)}}function P(e,t,r){return e.intersects(t,r)?e.contains(t,r)?0:2:1}function Z(e,t,r){return e.intersects(t,r)?e.contains(t,r)?1:2:0}function J(e,t,r,i){const{collection:s,object:o,renderSR:n,maskSR:a,geometryTest:l,aabbCache:c}=i;let p=c.get(r);if(!p){const e=s.getObjectTransform(o);s.getComponentAabb(o,r,K);const t=[y(K[0],K[1],0),y(K[0],K[4],0),y(K[3],K[4],0),y(K[3],K[1],0)];for(let r=0;r<4;++r)m(t[r],t[r],e.rotationScale),d(t[r],t[r],e.position),F(t[r],n,t[r],a);p={type:"polygon",rings:[t],spatialReference:a,cache:{}},p.rings[0][4]=p.rings[0][0],c.set(r,p)}switch(l(e,t,p)){case 1:return!1;case 0:return!0}const{triangle:u,triangleTest:g,positions:h}=i,j=u.rings[0][0],w=u.rings[0][1],b=u.rings[0][2],v=s.getObjectTransform(o);s.getComponentPositions(o,r,h);const{indices:R,data:S,stride:_,startIndex:k,endIndex:M}=h;for(let y=k;y<M;y+=3){const r=_*R[y],i=_*R[y+1],s=_*R[y+2];switch(f(j,S[r],S[r+1],S[r+2]),f(w,S[i],S[i+1],S[i+2]),f(b,S[s],S[s+1],S[s+2]),m(j,j,v.rotationScale),m(w,w,v.rotationScale),m(b,b,v.rotationScale),d(j,j,v.position),d(w,w,v.position),d(b,b,v.position),F(j,n,j,a),F(w,n,w,a),F(b,n,b,a),g(e,t,u)){case 1:return!1;case 0:return!0}}return"intersects"!==i.type}const K=S();export{C as I3SMeshViewFilter};
