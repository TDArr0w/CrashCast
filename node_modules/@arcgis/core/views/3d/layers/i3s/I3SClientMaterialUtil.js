/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import o from"../../../../core/Error.js";import{loadImageAsync as t}from"../../../../support/requestUtils.js";import{EncodedMeshTexture as r}from"../../glTF/internal/resourceUtils.js";import{useSchematicPBR as a,schematicMRRFactors as s}from"../../webgl-engine/materials/pbrUtils.js";import{alphaCutoff as n}from"../../../../webscene/support/AlphaCutoff.js";async function u(o){const t=[],r=[];if(null==o){return{material:{alphaMode:"opaque",alphaCutoff:n,doubleSided:!0,cullFace:0,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[1,1,1,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6000000238418579},wrapTextures:!1,hasParametersFromSource:!0},requiredTextures:t,textureData:r}}const u=i(o);"auto"===o.alphaMode&&console.warn('alphaMode "auto" not supported by I3S PBRMaterial - defaulting to "blend".');const c=a({normalTexture:o.normalTexture,emissiveTexture:u?o.emissiveTexture:null,emissiveFactor:u?e.toUnitRGB(o.emissiveColor):null,occlusionTexture:u?o.occlusionTexture:null,metallicRoughnessTexture:u?o.metallicRoughnessTexture:null,metallicFactor:u?o.metallic:null,roughnessFactor:u?o.roughness:null}),d=c?s[0]:u?o.metallic:0,m=c?s[1]:u?o.roughness:0;return{material:{alphaMode:"auto"===o.alphaMode?"blend":o.alphaMode,alphaCutoff:o.alphaCutoff,doubleSided:o.doubleSided,cullFace:o.doubleSided?0:2,normalTextureId:await l(o.normalTexture,t,r,4),emissiveTextureId:u?await l(o.emissiveTexture,t,r,16):-1,occlusionTextureId:u?await l(o.occlusionTexture,t,r,8):-1,emissiveFactor:u&&null!=o.emissiveColor?e.toUnitRGB(o.emissiveColor):[0,0,0],metallicRoughness:{baseColorFactor:null!=o.color?e.toUnitRGBA(o.color):[1,1,1,1],baseColorTextureId:await l(o.colorTexture,t,r,1),metallicRoughnessTextureId:u?await l(o.metallicRoughnessTexture,t,r,2):-1,metallicFactor:d,roughnessFactor:m},wrapTextures:!0,hasParametersFromSource:c},requiredTextures:t,textureData:r}}async function l(e,a,s,n){if(null==e)return-1;const u=s.length,l=e.data,i=e.url;if(null!=l){if(l instanceof HTMLImageElement||l instanceof HTMLCanvasElement)return s.push({id:u,usage:n,data:l,encoding:8}),a.push({id:u,usage:n,encodings:[{name:void 0,encoding:8}]}),u;if(l instanceof HTMLVideoElement)return-1;if(l instanceof ImageData)throw new o("scenelayer","ImageData textures not supported yet for client side I3S nodes");if(l instanceof r)return s.push({id:u,usage:n,data:l.data.buffer,encoding:1}),a.push({id:u,usage:n,encodings:[{name:void 0,encoding:1}]}),u}else if(null!=i){const e=new Image;e.src=i;const o=await t(e,e.src,!1,void 0);return s.push({id:u,usage:n,data:o,encoding:8}),a.push({id:u,usage:n,encodings:[{name:void 0,encoding:8}]}),u}return-1}function i(e){return e.hasOwnProperty("metallicRoughnessTexture")}export{u as convertMeshMaterialToPBRMaterial};
