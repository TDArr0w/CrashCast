/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{loadLyr3DWorkerWASM as s}from"../../../libs/lyr3d/Lyr3DModule.js";let t,e;async function n(s){await o();const t={status:1,error:"",jobDescJson:"",data:new Uint8Array(0),missingInputUrls:[]};if(s.inputs.length<1)return{result:t,transferList:[]};const n={ptrs:[],sizes:[]};for(const o of s.inputs){const s=e._malloc(o.byteLength);new Uint8Array(e.HEAPU8.buffer,s,o.byteLength).set(new Uint8Array(o)),n.ptrs.push(s),n.sizes.push(o.byteLength)}const r=e.process(s.jobDescJson,s.id,n,s.isMissingResourceCase);t.status=r.status,t.missingInputUrls=r.missingInputUrls.slice();const i=0===r.status&&r.data,a=2===t.status&&t.missingInputUrls.length>0;t.jobDescJson=r.jobDescJson.slice(),t.error=r.error.slice(),i?t.data=r.data.slice():a&&(t.originalInputs=s.inputs.slice());for(let o=0;o<n.ptrs.length;++o)e._free(n.ptrs[o]);const u=[];if(i)u.push(t.data.buffer);else if(a)for(const e of s.inputs)u.push(e);return{result:t,transferList:u}}async function r(s){await o(),e.add_spatial_reference_info(s.sr,s.isGCS,s.toMetersXY,s.toMetersZ)}function i(){e&&(e.uninitialize_lyr3d_worker_wasm(),e=null)}function o(){return e?Promise.resolve():(t||(t=s().then(s=>{e=s,e.initialize_lyr3d_worker_wasm(),t=null})),t)}export{r as addSpatialReferenceInfo,i as destroyWasm,o as initialize,n as process};
