/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import e from"../../../../core/Accessor.js";import i from"../../../../core/Logger.js";import{toUnit as o}from"../../../../core/quantityUtils.js";import{watch as n,syncAndInitial as r}from"../../../../core/reactiveUtils.js";import{adaptiveLengthUnit as s,adaptiveVerticalLengthUnit as a}from"../../../../core/unitUtils.js";import{property as l}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/RandomLCG.js";import{subclass as c}from"../../../../core/accessorSupport/decorators/subclass.js";import{applyProjectionAndElevationAlignment as u,logFailedGeometryProjectionError as p}from"../support/projectionUtils.js";import{euclideanDistanceBetweenPoints as d}from"../../../support/euclideanLengthMeasurementUtils.js";let m=class extends e{constructor(t){super(t)}initialize(){this.addHandles([n(()=>({viewData:this.viewData,startPoint:this.analysis.startPoint}),({viewData:t,startPoint:e})=>{t.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(e)},r),n(()=>({viewData:this.viewData,endPoint:this.analysis.endPoint}),({viewData:t,endPoint:e})=>{t.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(e)},r),n(()=>({result:this._computedResult,viewData:this.viewData}),({result:t,viewData:e})=>{e.result=t},r)])}_applyProjectionAndElevationAlignment(t){if(null==t)return t;const{spatialReference:e,elevationProvider:o}=this.view,n=u(t,e,o);return n??(p(this.analysis,t.spatialReference,i.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e,measurementMode:i,unit:n}=this.viewData;if(null==t||null==e)return null;const r=d(t,e),l=this.geodesicLengthMeasurementUtils.geodesicDistanceBetweenPoints(t,e);if(null==r)return null;let c,u;switch(i){case 0:u=null!=l?"geodesic":"euclidean",c=l??r.horizontal;break;case 2:if(null==l)return null;u="geodesic",c=l;break;case 1:u="euclidean",c=r.horizontal}let p=r.direct,m=r.vertical;const v=s(p.value,p.unit,n),h=s(c.value,c.unit,n),g=a(m.value,m.unit,n);return p=o(p,v),c=o(c,h),m=o(m,g),{mode:u,directDistance:p,horizontalDistance:c,verticalDistance:m}}};t([l({constructOnly:!0})],m.prototype,"view",void 0),t([l({constructOnly:!0})],m.prototype,"analysis",void 0),t([l({constructOnly:!0})],m.prototype,"viewData",void 0),t([l({constructOnly:!0})],m.prototype,"geodesicLengthMeasurementUtils",void 0),t([l()],m.prototype,"_computedResult",null),m=t([c("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],m);export{m as DirectLineMeasurementController};
