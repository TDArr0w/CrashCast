/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{clamp as i}from"../../../../core/mathUtils.js";import{Milliseconds as e}from"../../../../core/time.js";import"../../../../core/Logger.js";import"../../../../core/has.js";import"../../../../core/RandomLCG.js";import"../../../../core/Error.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import{d as r,e as o,n as a,b as m,g as n,h as c,l as h}from"../../../../chunks/vec32.js";import{create as p,fromValues as _}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{applyAll as l}from"../../camera/constraintUtils.js";import{ConstraintOptions as C}from"../../camera/constraintUtils/ConstraintOptions.js";import{getVoxelWasm as g}from"../../layers/VoxelWasm.js";import{PointToPointAnimationController as f}from"./PointToPointAnimationController.js";import{excludeTerrain as y,zoomStepDistanceClamp as b,getTiltScaleFactor as j,maxZoomStepDistanceModifier as w,distanceComparisonTolerance as u}from"../utils/navigationUtils.js";import v from"../../webgl/RenderCamera.js";import{Intersector as d}from"../../webgl-engine/lib/Intersector.js";import{outExpo as L}from"../../../animation/easing.js";const z=.6,R=4,D=60;let F=class extends f{constructor(){super(...arguments),this._zoomLocation=p(),this._tmpCamera=new v,this._tmpRayDir=p(),this._tmpCenter=p(),this._beginCamera=new v,this._constraintOptions=new C(15,1,null,this._beginCamera)}step(t,e){if(!this.running)return;const s=this.view.state;this.animation.finished?this._beginCamera.copyFrom(s.camera):this.animation.cameraAt(1,this._beginCamera),this._tmpCamera.copyFrom(s.camera);const h=new d(this.view.state.viewingMode);let _=!1;t>0?(_=this._intersectionHelper.intersectScreenFreePointFallback(e,this._zoomLocation,this.view.basemapTerrain.invisible?y:{}),this._intersectionHelper.intersectRay(this._tmpCamera.ray,h,this._tmpCenter)&&(this._tmpCamera.center=this._tmpCenter)):this._intersectionHelper.intersectRay(this._tmpCamera.ray,h,this._zoomLocation)?this._tmpCamera.center=this._zoomLocation:r(this._zoomLocation,this._tmpCamera.center);const l=z**t;let C=this.view.stage.renderView.getMinimalDepthForArea(g(this.view),e[0],e[1],this.view.state.camera,D);o(S,this._tmpCamera.eye,this._zoomLocation),a(S,S);const f=Math.abs(this.view.camera.position.z),u=i(j(M,S,w)*f,b[0],b[1]);C=null!=C?C:u;const v=p();o(v,this._zoomLocation,this._tmpCamera.eye),(C<m(v)||!_)&&(a(v,v),n(this._zoomLocation,this._tmpCamera.eye,c(v,v,C))),this._updateCamera(this._tmpCamera,l,this._zoomLocation),this.begin(this._tmpCamera)}animationSettings(){return{duration:e(600),easing:L}}_updateCamera(t,i,e){o(this._tmpRayDir,e,t.eye);const s=m(this._tmpRayDir);let r=s*i;const a=i<=1,n=Math.max(R,1.01*t.nearFar[0]);0!==r&&(a&&r<n&&(r=n,i=r/s),Math.abs(s-r)<u||(c(this._tmpRayDir,this._tmpRayDir,i),t.eye=o(x,e,this._tmpRayDir),t.center=h(x,t.center,e,1-i),l(this.view,t,this._constraintOptions)))}};F=t([s("esri.views.3d.state.controllers.ZoomStepControllerLocal")],F);const x=p(),M=_(0,0,1),S=p();export{F as ZoomStepControllerLocal};
