/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{clamp as i}from"../../../../core/mathUtils.js";import{Milliseconds as e}from"../../../../core/time.js";import"../../../../core/Logger.js";import"../../../../core/has.js";import"../../../../core/RandomLCG.js";import"../../../../core/Error.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import{d as s,n as o,h as a,b as n,e as m,g as h,s as c}from"../../../../chunks/vec32.js";import{create as p}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{create as _}from"../../../../geometry/support/ray.js";import{c as l}from"../../../../chunks/sphere.js";import{applyAll as y}from"../../camera/constraintUtils.js";import{ConstraintOptions as w}from"../../camera/constraintUtils/ConstraintOptions.js";import{applySurfaceCollisionConstraint as d}from"../../camera/constraintUtils/surfaceCollision.js";import{PointToPointAnimationController as g}from"./PointToPointAnimationController.js";import{excludeTerrain as f,inferNavigationMode as D,zoomStepDistanceClamp as C,getTiltScaleFactor as u,distanceComparisonTolerance as j,panToPosition as R,maxZoomStepDistanceModifier as v}from"../utils/navigationUtils.js";import{fromScreenAtEye as b}from"../../support/geometryUtils/ray.js";import{intersectScreen as M}from"../../support/geometryUtils/sphere.js";import O from"../../webgl/RenderCamera.js";import{Intersector as V}from"../../webgl-engine/lib/Intersector.js";import{outExpo as z}from"../../../animation/easing.js";const L=.6,S=4,U=60;let x=class extends g{constructor(){super(...arguments),this._zoomLocation=p(),this._tmpCamera=new O,this._tmpViewDir=p(),this._tmpRayDir=_(),this._targetOnSphere=p(),this._tmpCenter=p(),this._beginCamera=new O,this._constraintOptions=new w(7,1,null,this._beginCamera),this._sphere=l()}initialize(){this._intersector=new V(this.view.state.viewingMode)}step(t,i){if(!this.running)return;const e=this.view.state;this.animation.finished?this._beginCamera.copyFrom(e.camera):this.animation.cameraAt(1,this._beginCamera);let r=!1,o=!1;this._intersectionHelper.intersectScreen(i,this._zoomLocation,0===this.view.map.ground.opacity?f:{})&&(r=t>0,o=!0),this._tmpCamera.copyFrom(e.camera),r?this._intersectionHelper.intersectRay(this._tmpCamera.ray,this._intersector,this._tmpCenter)&&(this._tmpCamera.center=this._tmpCenter):this._intersectionHelper.intersectRay(this._tmpCamera.ray,this._intersector,this._zoomLocation)?this._tmpCamera.center=this._zoomLocation:s(this._zoomLocation,this._tmpCamera.center),this._updateCamera(this._tmpCamera,t,i,o),this.begin(this._tmpCamera)}animationSettings(){return{duration:e(600),easing:z}}_updateCamera(t,e,r,s){const p=D(t,r,this.view.renderCoordsHelper,this.view.viewingMode),_=Math.abs(this.view.camera.position.z),l=this._zoomLocation;o(H,t.eye),a(H,H,-1),b(t,r,this._tmpRayDir),o(this._tmpRayDir.direction,this._tmpRayDir.direction);const w=i(u(H,this._tmpRayDir.direction,v)*_,C[0],C[1]);if(1===p){let i=L**e;this._sphere[3]=n(l),m(this._tmpViewDir,t.center,t.eye);const s=Math.min(n(this._tmpViewDir),w);let o=s*i;if(i<=1&&o<S&&(o=S,i=o/s),Math.abs(s-o)<j)return;const p=n(t.center);if(this._sphere[3]!==p){const e=this._sphere[3]+i*(p-this._sphere[3]);t.center=a(F,t.center,e/p)}a(this._tmpViewDir,this._tmpViewDir,-i),t.eye=h(F,t.center,this._tmpViewDir),y(this.view,t,this._constraintOptions),c(l,t.center)>1e-12&&M(this._sphere,t,r,this._targetOnSphere)&&R(this._sphere,t,l,this._targetOnSphere,this.view.camera.heading,this.view.camera.tilt,!0)}else{let i=L**Math.abs(e);const c=e>0?1:-1;m(this._tmpViewDir,l,t.eye);const p=n(this._tmpViewDir),_=this.view.stage.renderView.getMinimalDepthForArea(null,r[0],r[1],this.view.state.camera,U);let d=null!=_?_:w;s&&e>0&&(d=Math.min(d,p)),a(this._tmpRayDir.direction,this._tmpRayDir.direction,d),h(l,this._tmpRayDir.origin,this._tmpRayDir.direction);let g=d*i;const f=Math.max(S,1.01*t.nearFar[0]);if(e>0&&g<f&&(g=f,i=g/d),Math.abs(d-g)<j)return;a(this._tmpRayDir.direction,this._tmpRayDir.direction,c*(1-i)),t.eye=h(F,t.eye,this._tmpRayDir.direction),t.center=h(F,t.center,this._tmpRayDir.direction),o(this._tmpRayDir.direction,this._tmpRayDir.direction),this._constraintOptions.interactionDirection=this._tmpRayDir.direction,y(this.view,t,this._constraintOptions),this._constraintOptions.interactionDirection=null}d(this.view,t)}};x=t([r("esri.views.3d.state.controllers.ZoomStepControllerGlobal")],x);const F=p(),H=p();export{x as ZoomStepControllerGlobal};
