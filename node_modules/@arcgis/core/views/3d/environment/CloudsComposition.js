/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{disposeMaybe as i}from"../../../core/maybe.js";import{watch as t,initial as r}from"../../../core/reactiveUtils.js";import"../../../core/Logger.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import"../../../core/Error.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{getReferenceEllipsoid as o}from"../../../geometry/ellipsoidUtils.js";import{InternalRenderCategory as n}from"../webgl.js";import{CloudsCompositionTechnique as m}from"./CloudsCompositionTechnique.js";import{OpaqueEnvironment as a}from"../webgl-engine/effects/OpaqueEnvironment.js";import{createQuadVAO as l}from"../webgl-engine/lib/glUtil3D.js";import{PrimitiveType as c}from"../../webgl/enums.js";let d=class extends a{constructor(e){super(e),this._planetRadius=o(e.view.spatialReference).radius}initialize(){this.techniques.precompile(m),this.addHandles([t(()=>null!=this.view.environment.weather&&this.view.environment.atmosphereEnabled,e=>e?this._enable():this._disable(),r)])}destroy(){this._vao=i(this._vao)}render(e){const i=e.find(({name:e})=>e===n.OPAQUE_ENVIRONMENT),t=this.bindParameters.clouds;if(!t.data)return i;const r=this.techniques.get(m);if(!r.compiled)return this.requestRender(1),i;const s=this.renderingContext;this._vao??=l(s);const o=s.bindTechnique(r,this.bindParameters);return s.bindVAO(this._vao),o.assertCompatibleVertexAttributeLocations(this._vao),s.drawArrays(c.TRIANGLE_STRIP,0,4),t.isFading&&this.requestRender(2),i}};d=e([s("esri.views.3d.environment.CloudsComposition")],d);export{d as CloudsComposition};
