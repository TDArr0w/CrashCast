/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{lerp as t}from"../../../core/mathUtils.js";import{disposeMaybe as r}from"../../../core/maybe.js";import{watch as s,syncAndInitial as i,sync as o}from"../../../core/reactiveUtils.js";import{secondsFromMilliseconds as n}from"../../../core/time.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as c}from"../../../core/accessorSupport/decorators/subclass.js";import{getReferenceEllipsoid as p}from"../../../geometry/ellipsoidUtils.js";import{getContinuousIndexArray as d}from"../../../geometry/support/Indices.js";import{InternalRenderCategory as m}from"../webgl.js";import{PrecipitationPassParameters as h,PrecipitationTechnique as f}from"./PrecipitationTechnique.js";import{PrecipitationTechniqueConfiguration as u}from"./PrecipitationTechniqueConfiguration.js";import{glLayout as l}from"../support/buffer/glUtil.js";import{newLayout as _}from"../support/buffer/InterleavedLayout.js";import{TransparentEnvironment as b}from"../webgl-engine/effects/TransparentEnvironment.js";import{VertexArrayObject as y}from"../webgl-engine/lib/VertexArrayObject.js";import{PrimitiveType as w}from"../../webgl/enums.js";import{bindVertexBufferLayout as g}from"../../webgl/Util.js";import{fromLayout as j}from"../../webgl/VertexAttributeLocations.js";import{VertexBuffer as v}from"../../webgl/VertexBuffer.js";let P=class extends b{constructor(e){super(e),this._hasSnowCover=!1,this._rainSpeed=.1,this._snowSpeed=.01,this._numParticles=0,this._passParameters=new h,this._configuration=new u;const{view:t,type:r}=e;this._configuration.type="rainy"===r?0:1,t.stage.renderView.techniques.precompile(f,this._configuration),this._passParameters.time=0,this._passParameters.radius=p(t.spatialReference).radius,this.addHandles([s(()=>t.environment.weather,e=>{e.type===r&&this.addHandles([s(()=>e.precipitation,e=>this._adjustParticles(e),i),s(()=>"snowy"===e.type&&"enabled"===e.snowCover,e=>this._hasSnowCover=e,i)])},i)]),this.addHandles(s(()=>t.stage?.renderer.renderContext.bind.clouds.fadeFactor??1,e=>{this._passParameters.opacity=e,1===e&&(this.removeHandles("opacity"),this.addHandles(s(()=>t.stage?.renderer.renderContext.bind.clouds.opacity??1,e=>this._passParameters.opacity=e,i),"opacity"))},o),"opacity")}initialize(){this.addHandles([s(()=>this.view.environment.atmosphereEnabled,e=>e?this._enable():this._disable(),i)])}_adjustParticles(e){const r=.35,s=e<.5?t(0,r,2*e):t(r,1,2*(e-.5));this._numParticles=A*s}destroy(){this._numParticles=0,this._vao=r(this._vao),this._instanceIdBuffer=r(this._instanceIdBuffer)}fadeOut(e){this.removeAllHandles(),this.addHandles(s(()=>this.renderContext?.bind.clouds.fadeFactor??1,t=>{this._passParameters.opacity=1-t,1===t&&(this.removeAllHandles(),e())}),"opacity")}get snowCover(){return this._hasSnowCover?this._passParameters.opacity:null}updateAnimation(e){const t=("rainy"===this.type?this._rainSpeed:this._snowSpeed)*n(e.time)%1e5;return this._passParameters.time!==t&&(this._passParameters.time=t,!0)}render(e){const t=this.renderingContext,r=Math.round(this._numParticles*this._passParameters.opacity),s=e.find(({name:e})=>e===m.TRANSPARENT_ENVIRONMENT);if(r<1)return s;const i=this.techniques.get(f,this._configuration);if(!i.compiled)return this.requestRender(1),s;const o=t.bindTechnique(i,this.bindParameters,this._passParameters);return this._vao??=I(t),t.bindVAO(this._vao),this._bindInstanceIdBuffer(o.locations),o.assertCompatibleVertexAttributeLocations(this._vao,j(x)),t.drawArraysInstanced(w.TRIANGLES,0,3,r),t.unbindBuffer(34962),s}_bindInstanceIdBuffer(e){const t=this.renderingContext;if(this._instanceIdBuffer)return void t.bindBuffer(this._instanceIdBuffer);const r=d(A);this._instanceIdBuffer=new v(t,x,new Float32Array(r)),g(t,e,this._instanceIdBuffer,0)}};function I(e){const t=new Float32Array([-1,0,1,1,0,-1,1,0,1]);return new y(e,new v(e,l(C),t))}e([a({constructOnly:!0})],P.prototype,"type",void 0),P=e([c("esri.views.3d.environment.Precipitation")],P);const A=25e4,C=_().vec3f("position").freeze(),x=l(_().f32("instanceFeatureAttribute"),1);export{P as Precipitation};
