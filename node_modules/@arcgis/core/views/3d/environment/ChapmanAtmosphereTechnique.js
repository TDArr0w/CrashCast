/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{create as e}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{ChapmanApproximationParameters as r}from"./ChapmanApproximation.glsl.js";import{C as t}from"../../../chunks/ChapmanAtmosphere.glsl.js";import{ReloadableShaderModule as o}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as i}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{Pos2TexF16 as s}from"../webgl-engine/lib/DefaultVertexBufferLayouts.js";import{makePipelineState as n,defaultColorWrite as a,copySource as l,simpleBlendingParams as m}from"../../webgl/renderState.js";import{fromLayout as c}from"../../webgl/VertexAttributeLocations.js";class p extends r{constructor(){super(...arguments),this.innerFadeDistance=0,this.altitudeFade=0,this.backgroundColor=e()}}class d extends i{constructor(e,r){super(e,r,new o(t,()=>import("./ChapmanAtmosphere.glsl.js")),c(s))}initializePipeline(e){return n({blending:e.reduced?l:m(770,771),depthTest:{func:e.reduced?519:515},colorWrite:a})}}export{p as ChapmanAtmospherePassParameters,d as ChapmanAtmosphereTechnique};
