/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{disposeMaybe as t}from"../../../core/maybe.js";import{watch as r,initial as s}from"../../../core/reactiveUtils.js";import"../../../core/Logger.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import"../../../core/Error.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{copy as o}from"../../../core/libs/gl-matrix-2/math/mat4.js";import{create as m}from"../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{InternalRenderCategory as n}from"../webgl.js";import{S as a}from"../../../chunks/SimpleAtmosphere.glsl.js";import{SimpleAtmosphereTechnique as p,layout as c}from"./SimpleAtmosphereTechnique.js";import{SimpleAtmosphereTechniqueConfiguration as h}from"./SimpleAtmosphereTechniqueConfiguration.js";import{earthAtmosphereTextureSimple as f}from"./resources/SimpleAtmosphereTexture.js";import{glLayout as l}from"../support/buffer/glUtil.js";import{OpaqueEnvironment as u}from"../webgl-engine/effects/OpaqueEnvironment.js";import{createPolySphereData as g}from"../webgl-engine/lib/GeometryUtil.js";import{VertexArrayObject as b}from"../webgl-engine/lib/VertexArrayObject.js";import{PrimitiveType as d}from"../../webgl/enums.js";import{Texture as _}from"../../webgl/Texture.js";import{TextureDescriptor as j}from"../../webgl/TextureDescriptor.js";import{VertexBuffer as v}from"../../webgl/VertexBuffer.js";let w=class extends u{constructor(){super(...arguments),this._configuration=new h,this._passParameters=new a,this._vao=null,this._vaoCount=0}initialize(){this._configuration.geometry=1,this.addHandles([r(()=>this.view.environment.atmosphereEnabled,e=>e?this._enable():this._disable(),s)])}destroy(){this._passParameters.texture=t(this._passParameters.texture),this._vao=t(this._vao)}precompile(){this.techniques.precompile(p,this._configuration)}render(e){const t=e.find(({name:e})=>e===n.OPAQUE_ENVIRONMENT),r=this.techniques.get(p,this._configuration);if(!r.compiled)return this.requestRender(1),t;const s=this.renderingContext;if(this._vao||(this._vao=x(s),this._vaoCount=this._vao.vertexCount("geometry")),!this._passParameters.texture){const e=new j(1,512);e.wrapMode=33071,e.flipped=!0,this._passParameters.texture=new _(s,e,f)}const i=s.bindTechnique(r,this.bindParameters,this._passParameters);return A(P,this.bindParameters.camera.viewMatrix),i.setUniformMatrix4fv("view",P),s.bindVAO(this._vao),i.assertCompatibleVertexAttributeLocations(this._vao),s.drawArrays(d.TRIANGLES,0,this._vaoCount),t}};function x(e){const t=g(1,2,!1),{data:r,indices:s}=t[0][1],i=c.createBuffer(s.length),o=i.position;for(let m=0;m<s.length;++m){const e=3*s[m%3==0?m+2:m%3==2?m-2:m];o.set(m,0,r[e]),o.set(m,1,r[e+1]),o.set(m,2,r[e+2])}return new b(e,new v(e,l(c),i.buffer))}function A(e,t){o(e,t),e[12]=0,e[13]=0,e[14]=0,e[15]=1}w=e([i("esri.views.3d.environment.LocalAtmosphere")],w);const P=m();export{w as LocalAtmosphere};
