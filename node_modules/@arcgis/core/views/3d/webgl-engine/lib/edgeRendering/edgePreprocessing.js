/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{acosClamped as e,deg2rad as t}from"../../../../../core/mathUtils.js";import n from"../../../../../core/PooledArray.js";import{k as o,j as s,d as a,f as r,e as c,i as l,n as i,E as u}from"../../../../../chunks/vec32.js";import{create as h}from"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{Edge as g}from"./Edge.js";const p=-1;function d(e,t,n){const c=e.vertices.position,l=e.vertices.componentIndex,i=I.position0,u=I.position1,h=I.faceNormal0,g=I.faceNormal1,{edges:d,normals:v}=w(e),x=d.length/4,j=t.allocate(x);let y=0;const N=x,E=n?.allocate(N);let b=0,k=0,D=0;V.length=0;for(let s=0;s<x;++s){const e=4*s;c.getVec(d.data[e],i),c.getVec(d.data[e+1],u);const t=V.pushNew();t.index=4*s,t.length=o(i,u)}V.sort((e,t)=>t.length-e.length);const L=new Array,U=new Array;V.forAll(({length:e,index:o})=>{const w=d.data[o],x=d.data[o+1],V=d.data[o+2],N=d.data[o+3],q=N===p;if(c.getVec(w,i),c.getVec(x,u),q){const e=3*V;s(h,v.data[e],v.data[e+1],v.data[e+2]),a(g,h),I.componentIndex=l.get(w),I.cosAngle=r(h,g)}else{let e=3*V;if(s(h,v.data[e],v.data[e+1],v.data[e+2]),e=3*N,s(g,v.data[e],v.data[e+1],v.data[e+2]),I.componentIndex=l.get(w),I.cosAngle=r(h,g),m(I,M))return;I.cosAngle<-.9999&&a(g,h)}k+=e,D++,q||f(I,P)?(t.write(j,y++,I),L.push(e)):A(I,F)&&(E&&n&&n.write(E,b++,I),U.push(e))});const q=new Float32Array(L.reverse()),z=new Float32Array(U.reverse()),B=E&&n?{instancesData:E.slice(0,b),lodInfo:{lengths:z}}:void 0;return{regular:{instancesData:j.slice(0,y),lodInfo:{lengths:q}},silhouette:B,averageEdgeLength:k/D}}function f(e,t){return e.cosAngle<t}function m(e,t){return e.cosAngle>t}function A(t,n){const o=e(t.cosAngle);u(E,t.position1,t.position0);return o*(r(l(N,t.faceNormal0,t.faceNormal1),E)>0?-1:1)>n}function w(e){const t=e.faces.length/3,n=e.faces,o=e.neighbors,s=e.vertices.position;j.length=y.length=0;for(let a=0;a<t;a++){const e=3*a,t=o[e],r=o[e+1],u=o[e+2],h=n[e],g=n[e+1],d=n[e+2];s.getVec(h,b),s.getVec(g,k),s.getVec(d,D),c(k,k,b),c(D,D,b),l(b,k,D),i(b,b),y.pushArray(b),(t===p||h<g)&&(j.push(h),j.push(g),j.push(a),j.push(t)),(r===p||g<d)&&(j.push(g),j.push(d),j.push(a),j.push(r)),(u===p||d<h)&&(j.push(d),j.push(h),j.push(a),j.push(u))}return{edges:j,normals:y}}class v{constructor(){this.index=0,this.length=0}}function x(){V.prune(),j.prune(),y.prune()}const V=new n({allocator:e=>e||new v,deallocator:null}),j=new n({deallocator:null}),y=new n({deallocator:null}),I=new g,N=h(),E=h(),b=h(),k=h(),D=h(),F=t(4),M=Math.cos(F),L=t(35),P=Math.cos(L);export{x as cleanupEdgeProcessing,d as extractEdges};
