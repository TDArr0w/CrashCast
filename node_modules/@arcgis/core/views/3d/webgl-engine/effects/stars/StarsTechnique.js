/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{create as e}from"../../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{newLayout as r}from"../../../support/buffer/InterleavedLayout.js";import{ReloadableShaderModule as o}from"../../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as s}from"../../core/shaderTechnique/ShaderTechnique.js";import{S as t}from"../../../../../chunks/Stars.glsl.js";import{NoParameters as i}from"../../../../webgl/NoParameters.js";import{makePipelineState as a,defaultColorWrite as c,unpremultipliedAlphaToPremultipliedAlpha as l}from"../../../../webgl/renderState.js";class n extends i{constructor(){super(...arguments),this.modelMatrix=e()}}class m extends s{constructor(e,r){super(e,r,new o(t,()=>import("./Stars.glsl.js")),p.locations)}initializePipeline(){return a({blending:l,depthTest:{func:515},colorWrite:c})}}const p=r().vec3f("position").vec4u8("color").f32("size").freeze();export{n as StarPassParameters,m as StarsTechnique,p as layout};
