/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{clamp as r}from"../../../../../core/mathUtils.js";import{disposeMaybe as t}from"../../../../../core/maybe.js";import{watch as s}from"../../../../../core/reactiveUtils.js";import{Milliseconds as i}from"../../../../../core/time.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as a}from"../../../../../core/accessorSupport/decorators/subclass.js";import{set as m}from"../../../../../core/libs/gl-matrix-2/math/vec2.js";import{InternalRenderCategory as n}from"../../../webgl.js";import p from"../../../webgl/RenderNode.js";import{distanceFadeEnd as c,distanceFadeStart as h}from"../../core/shaderLibrary/shading/ScreenSpaceConstants.js";import{SSAOBlurTechnique as u}from"./SSAOBlurTechnique.js";import{noiseData as l}from"./SSAONoiseData.js";import{SSAOPassParameters as d,BlurDrawParameters as f}from"./SSAOParameters.js";import{SSAOTechnique as b}from"./SSAOTechnique.js";import{g as w}from"../../../../../chunks/SSAO.glsl.js";import{DepthStencilAttachment as S}from"../../../../webgl/enums.js";import{Texture as T}from"../../../../webgl/Texture.js";import{TextureDescriptor as _}from"../../../../webgl/TextureDescriptor.js";const g=2;let j=class extends p{constructor(e){super(e),this.consumes={required:["normals"]},this.produces=n.SSAO,this.isEnabled=()=>!1,this._enableTime=i(0),this._passParameters=new d,this._drawParameters=new f}initialize(){const e=Uint8Array.from(atob(l),e=>e.charCodeAt(0)),r=new _(32);r.wrapMode=33071,r.pixelFormat=6407,r.wrapMode=10497,r.hasMipmap=!0,this._passParameters.noiseTexture=new T(this.renderingContext,r,e),this.techniques.precompile(b),this.techniques.precompile(u),this.addHandles(s(()=>this.isEnabled(),()=>this._enableTime=i(0)))}destroy(){this._passParameters.noiseTexture=t(this._passParameters.noiseTexture)}render(e){const t=e.find(({name:e})=>"normals"===e),s=t?.getTexture(),o=t?.getTexture(S);if(!s||!o)return;const a=this.techniques.get(b),p=this.techniques.get(u);if(!a.compiled||!p.compiled)return this._enableTime=i(performance.now()),void this.requestRender(1);0===this._enableTime&&(this._enableTime=i(performance.now()));const l=this.renderingContext,d=this.view.qualitySettings.fadeDuration,f=this.bindParameters,T=f.camera,_=T.relativeElevation,j=r((c-_)/(c-h),0,1),x=d>0?Math.min(d,performance.now()-this._enableTime)/d:1,q=x*j;this._passParameters.normalTexture=s,this._passParameters.depthTexture=o,this._passParameters.projScale=1/T.computeScreenPixelSizeAtDist(1),this._passParameters.intensity=4*P/w(T)**6*q;const v=T.fullViewport[2],y=T.fullViewport[3],A=this.fboCache.acquire(v,y,"ssao input",2);l.bindFramebuffer(A.fbo),l.setViewport(0,0,v,y),l.bindTechnique(a,f,this._passParameters,this._drawParameters),l.screen.draw();const C=Math.round(v/g),O=Math.round(y/g),V=this.fboCache.acquire(C,O,"ssao blur",0);l.bindFramebuffer(V.fbo),this._drawParameters.colorTexture=A.getTexture(),m(this._drawParameters.blurSize,0,g/y),l.bindTechnique(p,f,this._passParameters,this._drawParameters),l.setViewport(0,0,C,O),l.screen.draw(),A.release();const M=this.fboCache.acquire(C,O,n.SSAO,0);return l.bindFramebuffer(M.fbo),l.setViewport(0,0,v,y),l.setClearColor(1,1,1,0),l.clear(16384),this._drawParameters.colorTexture=V.getTexture(),m(this._drawParameters.blurSize,g/v,0),l.bindTechnique(p,f,this._passParameters,this._drawParameters),l.setViewport(0,0,C,O),l.screen.draw(),l.setViewport4fv(T.fullViewport),V.release(),x<1&&this.requestRender(2),M}};e([o()],j.prototype,"consumes",void 0),e([o()],j.prototype,"produces",void 0),e([o({constructOnly:!0})],j.prototype,"isEnabled",void 0),j=e([a("esri.views.3d.webgl-engine.effects.ssao.SSAO")],j);const P=.5;export{j as SSAO,g as blurSizePixels};
