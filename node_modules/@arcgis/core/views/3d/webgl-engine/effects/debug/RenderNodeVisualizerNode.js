/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{property as r}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as t}from"../../../../../core/accessorSupport/decorators/subclass.js";import{ZEROS as o}from"../../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{RenderCategory as n}from"../../../webgl.js";import i from"../../../webgl/RenderNode.js";import{glsl as s,If as c}from"../../core/shaderModules/glsl.js";import{Pos2Locations as a}from"../../lib/DefaultVertexBufferLayouts.js";import{checkWebGLError as l}from"../../../../webgl/checkWebGLError.js";import{ColorAttachment0 as u,ColorAttachment2 as p,ColorAttachment1 as h,DataType as f,SizedPixelFormat as d}from"../../../../webgl/enums.js";import{alphaCutoff as m}from"../../../../../webscene/support/AlphaCutoff.js";let v=class extends i{constructor(e){super(e),this.destroyedCB=null,this.produces=n.FINAL,this.consumes={required:[n.FINAL]},this.clearColor=o,this._focusedFBOType=0,this._program=new Map}destroy(){this._program.forEach(e=>e.dispose()),this._program.clear(),this.destroyedCB()}render(e){const r=e.find(({name:e})=>e===n.FINAL);if(!this._focusedFBO)return r;const t=this.renderingContext;t.bindFramebuffer(r.fbo),t.setClearColor(0,0,0,0),t.clear(16384);const o=this._focusedFBO.getTexture(),i=[x(o)],s=this._ensureProgram(t,!1,i);return t.useProgram(s),t.bindTexture(o,0),s.setUniform1i("colorTex0",0),s.setUniform1i("inputType",this._focusedFBOType),3===this._focusedFBOType&&s.setUniform2fv("nearFar",this.camera.nearFar),t.screen.draw(),r}getDownscaledFBO(e,r,t,o,n){0===r&&(o=e.width,n=e.height);const i=e.colorAttachments.length,c=[],a=new Array(i);for(let s=0;s<i;++s){const r=e.getColorTexture(u+s);if(r){const e=x(r);c.push(e);const{descriptor:t}=r;"float"!==e||t.hasMipmap||t.isImmutable||(r.generateMipmap(),a[s]=!0)}}const p=this.renderingContext,{depthStencilTexture:h}=e,f=this._ensureProgram(p,null!=h,c),m=this.fboCache.acquire(o,n,"fbo visualizer");p.useProgram(f),p.bindFramebuffer(m.fbo);const v=[];for(let l=0;l<i;++l){const r=u+l,t=`colorTex${s.int(l)}`;p.bindTexture(e.getColorTexture(r),l),f.setUniform1i(t,l),l>0&&m.acquireColor(r,5),v.push(r)}const g=h?.descriptor.linearFilterDepth??!1;if(h){const e=i;h.setShadowFiltering(!1),p.bindTexture(h,e),f.setUniform1i("depthTex",e);const r=u+e;r>u&&m.acquireColor(r,5,"fbo visualizer"),v.push(r)}p.gl.drawBuffers(v),l(p.gl);const T=p.getViewport();p.setViewport(0,0,o,n),p.setClearColor(0,0,0,0),p.clear(16384),p.setBlendingEnabled(!0),p.setBlendFunction(1,771);const F="linear depth"===t||t.includes("shadow"),b="overlay highlight"===t||"highlights"===t||"highlight mix"===t,R="highlight coverage"===t,B=e.colorTexture?.descriptor,C=B?.internalFormat,y=F?3:b?5:R?6:C===d.R16F||C===d.R32F||C===d.R8?1:C===d.RG8?2:C===d.RGBA16F?4:C===d.RG8UI?7:0;f.setUniform1i("inputType",y),f.setUniform2fv("nearFar",this.camera.nearFar),p.screen.draw(),l(p.gl),p.bindFramebuffer(null),p.setViewport(T.x,T.y,T.width,T.height),0===r&&(this._focusedFBO=m,this._focusedFBOType=y);for(let s=0;s<i;++s)if(a[s]){const r=e.getColorTexture(u+s);r?.clearMipmap()}return h&&h.setShadowFiltering(g),m}clearFocusedFBO(){this._focusedFBO=null}getPreviewContent(e,r,t,o,n){if(!t)return null;const i=this.renderingContext,s=n.includes("#depth"),c=this.fboCache.acquire(e,r,"fbo visualizer");i.bindFramebuffer(c?.fbo),i.setClearColor(this.clearColor[0],this.clearColor[1],this.clearColor[2],this.clearColor[3]),i.clear(16384),i.setBlendingEnabled(!0),i.setBlendFunction(1,771);const a=t.getColorTexture(o);i.setViewport(0,0,e,r);const u=this._ensureProgram(i,!1,[x(a)]);i.useProgram(u),i.bindTexture(a,0),u.setUniform1i("colorTex0",0),u.setUniform1i("inputType",s||o!==p&&o!==h?0:4),i.screen.draw();const d=new ImageData(new Uint8ClampedArray(e*r*4),e,r);return i.gl.readPixels(0,0,e,r,6408,f.UNSIGNED_BYTE,new Uint8Array(d.data.buffer)),l(i.gl),i.bindFramebuffer(null),c?.release(),d}_ensureProgram(e,r,t){const o=T({hasDepthAttachment:r,colorAttachmentTypes:t}),n=this._program.get(o);if(n)return n;const i="#version 300 es\n      in vec2 position;\n      out vec2 uv;\n\n      void main() {\n        gl_Position = vec4(position, 0.0, 1.0);\n        uv = position * 0.5 + vec2(0.5);\n      }",l=e=>{let r="";for(let t=0;t<e.length;++t){const o=e[t];r+=`layout(location = ${s.int(t)}) out vec4 fragColor${s.int(t)};\n                uniform ${g(o)} colorTex${s.int(t)};`}return r},u=e=>{let r="";for(let t=1;t<e.length;++t){const o=e[t],n=`texture(colorTex${s.int(t)}, uv)`,i="float"===o?n:`vec4( vec2(${n}), 0.0, 1.0)`;r+=`fragColor${s.int(t)} = ${i};`}return r},p=t.length,h=`#version 300 es\n      precision highp float;\n      precision highp usampler2D;\n\n      in vec2 uv;\n      ${l(t)}\n      ${c(r,`layout(location = ${s.int(p)}) out vec4 fragDepth;\n         uniform sampler2D depthTex;`)}\n\n      uniform int inputType;\n      uniform vec2 nearFar;\n\n      // Factors to convert rgba back to float\n      const vec4 RGBA_2_FLOAT_FACTORS = vec4(\n        255.0 / (256.0),\n        255.0 / (256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n      );\n\n\n      float rgbaTofloat(vec4 rgba) {\n        // Convert components from 0->1 back to 0->255 and then add the components together with their corresponding\n        // fixed point factors, i.e. (256^1, 256^2, 256^3, 256^4)\n        return dot(rgba, RGBA_2_FLOAT_FACTORS);\n      }\n\n      float linearDepthFromFloat(float depth) {\n        depth = pow(depth, 0.2);\n        return -(depth * (nearFar[1] - nearFar[0]) + nearFar[0]);\n      }\n\n      float linearDepthFromRGBA(vec4 depth) {\n        return linearDepthFromFloat(rgbaTofloat(depth));\n      }\n\n      ${"float"===t[0]?"float linearDepthFromTexture(sampler2D depthTex, vec2 uv) {\n          ivec2 iuv = ivec2(uv * vec2(textureSize(depthTex, 0)));\n          return linearDepthFromRGBA(texelFetch(depthTex, iuv, 0));\n        }":"float linearDepthFromTexture(usampler2D depthTex, vec2 uv) {\n        ivec2 iuv = ivec2(uv * vec2(textureSize(depthTex, 0)));\n        return linearDepthFromRGBA(vec4(texelFetch(depthTex, iuv, 0)) * 255.0);\n      }"}\n\n      void main() {\n        ${c(t.length>0,s`
        vec4 color;
        if (inputType == 1) {
          color = vec4(vec3(texture(colorTex0, uv).r), 1.0);
        } else if (inputType == 2) {
          color = vec4(texture(colorTex0, uv).rg, 0.0, 1.0);
        } else if (inputType == 3) {
          float depth = 1.0 - ((-linearDepthFromTexture(colorTex0, uv) - nearFar[0]) / (nearFar[1] - nearFar[0]));
          color = vec4(vec3(depth), depth >= 0.999 ? 0.0 : 1.0);
        } else if (inputType == 4) {
          color = vec4(texture(colorTex0, uv).rgb, 1.0);
        } else if (inputType == 5) {
          color = vec4(texture(colorTex0, uv)) * 255.0;
          color = vec4(color.rgb / color.a, color.a);
        } else if(inputType == 6) {
          vec2 texDim =  vec2(textureSize(colorTex0, 0));
          ivec2 iuv = ivec2(uv*texDim);
          uvec2 hh = uvec2(texelFetch(colorTex0,iuv,0).rg);
          color = vec4(
             ((hh & uvec2(0x55u)) != uvec2(0u)) ? 1.0 : 0.0,
             ((hh & uvec2(0xaau)) != uvec2(0u)) ? 1.0 : 0.0,
             0.0,
             1.0);
        } else {
          color = vec4(texture(colorTex0, uv));
        }
        
        if(color.a < ${s.float(m)}) {
          discard;
        }

        fragColor0 = color;
        ${c(t.length>1,u(t))}
        `)}\n\n        ${c(r,"float depth = 1.0 - pow(texture(depthTex, uv).r, 10.0);\n            fragDepth = vec4(vec3(depth), depth < 0.000001 ? 0.0 : 1.0);")}\n      }`,f=e.programCache.acquire(i,h,a);return this._program.set(o,f),f}};function g(e){switch(e){case"float":return"sampler2D";case"uint":return"usampler2D";case"int":return"isampler2D"}}function x(e){if(!e)return"float";const{internalFormat:r}=e.descriptor;switch(r){case d.R8I:case d.R16I:case d.R32I:case d.RG8I:case d.RG16I:case d.RG32I:case d.RGB8I:case d.RGB16I:case d.RGB32I:case d.RGBA8I:case d.RGBA16I:case d.RGBA32I:return"int";case d.R8UI:case d.R16UI:case d.R32UI:case d.RG8UI:case d.RG16UI:case d.RG32UI:case d.RGB8UI:case d.RGB16UI:case d.RGB32UI:case d.RGBA8UI:case d.RGBA16UI:case d.RGBA32UI:return"uint";default:return"float"}}function T(e){const{hasDepthAttachment:r,colorAttachmentTypes:t}=e;return`${r?"Depth":""}${t.reduceRight((e,r)=>e+`|C${r}`,"")}`}e([r()],v.prototype,"destroyedCB",void 0),e([r()],v.prototype,"produces",void 0),e([r()],v.prototype,"consumes",void 0),e([r()],v.prototype,"clearColor",void 0),v=e([t("esri.views.3d.webgl-engine.effects.debug.RenderNodeVisualizerNode")],v);export{v as RenderNodeVisualizerNode};
