/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import{ReloadableShaderModule as e}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r}from"../core/shaderTechnique/ShaderTechnique.js";import{Pos2Locations as o}from"../lib/DefaultVertexBufferLayouts.js";import{getDrawBuffers as s}from"../lib/OrderIndependentTransparency.js";import{a as i}from"../../../../chunks/Compositing.glsl.js";import{makePipelineState as t,defaultColorWrite as n,premultipliedAlpha as a,unpremultipliedAlphaToPremultipliedAlpha as l}from"../../../webgl/renderState.js";class c extends r{constructor(r,s){super(r,s,new e(i,()=>import("./Compositing.glsl.js")),o)}initializePipeline(e){const{blitMode:r,blitEmissiveMode:o}=e,i=o?1:0;switch(r){case 0:case 3:return t({colorWrite:n,drawBuffers:s(0,i)});case 1:return t({blending:l,colorWrite:n,drawBuffers:s(0,i)});default:return t({blending:a,colorWrite:n,drawBuffers:s(0,i)})}}}export{c as CompositingTechnique};
