/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{ReloadableShaderModule as e}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r,depthOnlyOutputBuffersOr as t}from"../core/shaderTechnique/ShaderTechnique.js";import{stencilBaseAllZerosParams as o,stencilWriteMaskOn as s}from"../lib/StencilUtils.js";import{b as i}from"../../../../chunks/PointRenderer.glsl.js";import{DataType as n}from"../../../webgl/enums.js";import{makePipelineState as l,defaultColorWrite as c,defaultDepthWrite as m}from"../../../webgl/renderState.js";import{fromLayout as u}from"../../../webgl/VertexAttributeLocations.js";import{VertexElementDescriptor as p}from"../../../webgl/VertexElementDescriptor.js";class a extends r{constructor(r,t){super(r,t,new e(i,()=>import("./PointRenderer.glsl.js")),u(f))}initializePipeline(e){return l({depthTest:{func:513},depthWrite:m,colorWrite:c,stencilWrite:e.hasOccludees?s:null,stencilTest:e.hasOccludees?o:null,drawBuffers:t(e.output)})}}const d=[new p("position",3,n.FLOAT,0,12)],h=[new p("color",3,n.UNSIGNED_BYTE,0,3,!0)],f=d.concat(h);export{a as PointRendererTechnique,h as colorsLayout,d as positionsLayout};
