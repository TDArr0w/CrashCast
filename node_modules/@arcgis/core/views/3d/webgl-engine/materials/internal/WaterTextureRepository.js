/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as r}from"tslib";import{getAssetUrl as s}from"../../../../../assets.js";import e from"../../../../../core/Accessor.js";import{createTask as t}from"../../../../../core/asyncUtils.js";import a from"../../../../../core/Logger.js";import{abortMaybe as o,disposeMaybe as i}from"../../../../../core/maybe.js";import{throwIfAborted as m}from"../../../../../core/promiseUtils.js";import{property as p}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/RandomLCG.js";import{subclass as c}from"../../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as l}from"../../../../../support/requestImageUtils.js";import{NoParameters as n}from"../../../../webgl/NoParameters.js";import{Texture as u}from"../../../../webgl/Texture.js";import{TextureDescriptor as h}from"../../../../webgl/TextureDescriptor.js";let g=class extends e{constructor(){super(...arguments),this._passParameters=new d,this._resourcesTask=null}get passParameters(){return this._passParameters}destroy(){this._resourcesTask=o(this._resourcesTask),this._passParameters.waveNormal=i(this._passParameters.waveNormal),this._passParameters.wavePerturbation=i(this._passParameters.wavePerturbation)}get updating(){return!!this._resourcesTask&&!this._resourcesTask.finished}ensureResources(r){return this._resourcesTask||(this._resourcesTask=t(async e=>{await Promise.allSettled([this._loadImageResource(r,s("esri/images/materials/water/normals.jpg"),r=>this._passParameters.waveNormal=r,e),this._loadImageResource(r,s("esri/images/materials/water/perturbation.jpg"),r=>this._passParameters.wavePerturbation=r,e)])})),this._resourcesTask.finished?2:1}async _loadImageResource(r,s,e,t){try{const a=await l(s,{signal:t});m(t);const o=new h(a.width,a.height);o.pixelFormat=6407,o.samplingMode=9987,o.hasMipmap=!0,o.maxAnisotropy=8,e(new u(r,o,a))}catch(o){a.getLogger(this).error("Failed to load water material normal texture.",o)}}};r([p()],g.prototype,"_resourcesTask",void 0),r([p({type:Boolean,readOnly:!0})],g.prototype,"updating",null),g=r([c("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")],g);class d extends n{}export{d as WaterTexturePassParameters,g as WaterTextureRepository};
