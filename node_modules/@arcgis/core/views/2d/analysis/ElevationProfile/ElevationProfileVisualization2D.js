/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as i}from"tslib";import o from"../../../../core/Accessor.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import{ElevationProfileInputVisualization2D as a}from"./ElevationProfileInputVisualization2D.js";import{ElevationProfileLineVisualization2D as e}from"./ElevationProfileLineVisualization2D.js";import{ElevationProfileHoveredPointsVisualization as r}from"../../../analysis/ElevationProfile/ElevationProfileHoveredPointsVisualization.js";let n=class extends o{constructor(i){super(i)}initialize(){const{view:i,analysisViewData:o}=this;this._hoveredPointsVisualization=new r({view:i,analysisViewData:o}),this._inputVisualization=new a({view:i,analysisViewData:o}),this._lineVisualization=new e({view:i,analysisViewData:o})}destroy(){this._inputVisualization.destroy(),this._hoveredPointsVisualization.destroy(),this._lineVisualization.destroy()}get updating(){return this._hoveredPointsVisualization.updating||this._inputVisualization.updating||this._lineVisualization.updating}};i([t()],n.prototype,"view",void 0),i([t()],n.prototype,"analysisViewData",void 0),i([t()],n.prototype,"updating",null),n=i([s("esri.views.2d.analysis.ElevationProfile.ElevationProfileVisualization2D")],n);export{n as ElevationProfileVisualization2D};
