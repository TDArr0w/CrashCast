/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{ASourceChunk as e}from"./ASourceChunk.js";import{FeatureSetReaderIndirect as t}from"../../../support/FeatureSetReaderIndirect.js";import{FeatureSetReaderJSON as r}from"../../../support/FeatureSetReaderJSON.js";class i extends e{constructor(e,t,r,i,s){super(),this._metadata=e,this._reader=t,this._tile=r,this._page=i,this._end=s,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get reader(){return this._reader??r.empty(this._metadata)}get first(){return 0===this._page}get end(){return this._end}get tile(){return this._tile}get queryInfo(){return{type:"parquet",chunkId:this.chunkId,queryJSON:null,page:this._page,size:this.size(),tileId:this._tile.id,end:this.end}}get isTiled(){return!0}getTileReader(e){if(this._tile.key.id===e.key.id){const r=[];for(let e=0;e<this.reader.getSize();e++)r.push(e);const i=t.from(this.reader,r);return i.setTransformForDisplay(e.transform),i}return null}}export{i as ParquetSourceChunk};
