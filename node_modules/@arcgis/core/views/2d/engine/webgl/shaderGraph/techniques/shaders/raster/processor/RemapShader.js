/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{maxMapSizeGpu as e}from"../../../../../../../../../layers/support/rasterFunctions/pixelUtils.js";import{uniform as o,define as r,UniformGroup as a}from"../../../../GraphShaderModule.js";import{mix as p,clamp as s,max as i,Vec4 as m,Vec3 as n,step as l,sign as c,dot as u,FixedArray as d,Float as h,Vec2 as y}from"../../../../graph/glsl.js";import{oneMinus as f}from"../../utils.js";import{BaseRasterProcessorShader as g}from"./BaseRasterProcessorShader.js";import{computeMapValue as v}from"./math.js";class j extends a{}t([o(d.ofType(h,3*e))],j.prototype,"rangeMaps",void 0),t([o(d.ofType(h,2*e))],j.prototype,"noDataRanges",void 0),t([o(h)],j.prototype,"unmatchMask",void 0),t([o(h)],j.prototype,"replacementValue",void 0),t([o(y)],j.prototype,"clampRange",void 0);class x extends g{constructor(){super(...arguments),this.type="RemapShader"}_process(t){const o=this._getPixel(t),{rangeMaps:r,unmatchMask:a,clampRange:n,replacementValue:l}=this.remapConfig,{mapValue:c,includeMask:u}=v(o.r,r,e),d=this.replaceUnmatched?l:a.multiply(o.r),h=p(d,c,u),y=s(h,n.x,n.y),f=this._computeNoDataFactor(o.rrr).multiply(i(a,u));return new m(y,y,y,o.a).multiply(f)}_computeNoDataFactor(t){const{noDataRanges:o}=this.remapConfig;let r=new n(0,0,0);for(let a=0;a<e/3;a++){const e=6*a,p=new n(o[e],o[e+2],o[e+4]),s=new n(o[e+1],o[e+3],o[e+5]);r=r.add(l(p,t).multiply(l(t,s)))}return f(c(u(r,new n(1,1,1))))}}t([o(j)],x.prototype,"remapConfig",void 0),t([r],x.prototype,"replaceUnmatched",void 0);export{x as RemapShader};
