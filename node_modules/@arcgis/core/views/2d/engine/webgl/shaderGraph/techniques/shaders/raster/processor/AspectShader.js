/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{uniform as t,UniformGroup as i}from"../../../../GraphShaderModule.js";import{Vec2 as r,negate as s,sign as l,abs as o,Float as p,step as m,mod as d,atan as a,mix as c,Vec4 as n}from"../../../../graph/glsl.js";import{getSurfaceValues as u,computeDeltaZ as y}from"../surface.js";import{BaseRasterProcessorShader as f}from"./BaseRasterProcessorShader.js";class h extends i{}e([t(r)],h.prototype,"cellSize",void 0);class g extends f{constructor(){super(...arguments),this.type="AspectShader"}_process(e){const{texture:t}=this.config,i=u(t,e,this.config.srcImageSize),f=new r(1).divide(this.aspectConfig.cellSize.multiply(8)),{x:h,y:g}=y(i,f),w=s(g),S=i[9].multiply(l(o(h).add(o(w)))),x=o(l(h)),j=new p(3.14159265359),v=new p(0),z=m(v,w).multiply(.5).multiply(j).add(m(w,v).multiply(1.5).multiply(j)),C=d(new p(2.5).multiply(j).add(a(w,s(h))),new p(2).multiply(j)),b=c(z,C,x).multiply(180).divide(j);return new n(b,b,b,S)}}e([t(h)],g.prototype,"aspectConfig",void 0);export{g as AspectShader};
