/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o,__param as t}from"tslib";import{GraphShaderModule as e,FragmentOutput as r,location as s,uniform as i,input as p,VertexInput as n,UniformGroup as l,FragmentInput as m}from"../../../../GraphShaderModule.js";import{Vec4 as a,Vec2 as g,Sampler2D as u}from"../../../../graph/glsl.js";import{uvToClip as c}from"../../utils.js";import{getPixelLocation as d,getPixel as f}from"../projection.js";class x extends n{}o([s(0,g)],x.prototype,"position",void 0);class v extends m{}class y extends l{}o([i(u)],y.prototype,"texture",void 0),o([i(g)],y.prototype,"srcImageSize",void 0);class h extends e{vertex(o){return{uv:o.position,glPosition:new a(c(o.position),0,1)}}fragment(o){const t=new r,e=d(o.uv),s=this._process(e);return t.fragColor=new a(s.rgb,1).multiply(s.a),t}_getPixel(o){return f(o,this.config)}}o([i(y)],h.prototype,"config",void 0),o([t(0,p(x))],h.prototype,"vertex",null),o([t(0,p(v))],h.prototype,"fragment",null);export{h as BaseRasterProcessorShader};
