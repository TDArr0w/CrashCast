/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o,__param as t}from"tslib";import{GraphShaderModule as e,FragmentOutput as r,location as p,uniform as i,input as s,VertexInput as n,UniformGroup as c,FragmentInput as d}from"../../GraphShaderModule.js";import{Vec4 as l,texture2D as a,Vec2 as x,Float as y,Sampler2D as u}from"../../graph/glsl.js";class f extends n{}o([p(0,x)],f.prototype,"position",void 0),o([p(1,x)],f.prototype,"texcoord",void 0),o([p(2,y)],f.prototype,"w",void 0);class g extends d{}class m extends c{}o([i(u)],m.prototype,"texture",void 0),o([i(y)],m.prototype,"opacity",void 0);class v extends e{constructor(){super(...arguments),this.type="VideoScreenShader"}vertex(o){const{position:t,texcoord:e,w:r}=o;return{glPosition:new l(t,0,r),texcoord:e}}fragment(o){const t=new r;return t.fragColor=a(this.config.texture,o.texcoord).multiply(this.config.opacity),t}}o([i(m)],v.prototype,"config",void 0),o([t(0,s(f))],v.prototype,"vertex",null),o([t(0,s(g))],v.prototype,"fragment",null);export{v as VideoScreenShader};
