/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{maxMapSizeGpu as i}from"../../../../../../../../layers/support/rasterFunctions/pixelUtils.js";import{uniform as o,define as r,UniformGroup as s}from"../../../GraphShaderModule.js";import{sign as e,mix as h,Vec4 as g,texture2D as p,FixedArray as a,Float as l,Mat3 as n}from"../../../graph/glsl.js";import{BaseRasterColorizerShader as m}from"./BaseRasterColorizerShader.js";import{computeSingleBandRangeFactor as d}from"./processor/math.js";class c extends s{}t([o(a.ofType(l,2*i))],c.prototype,"ranges",void 0),t([o(n)],c.prototype,"bandSwap",void 0),t([o(g)],c.prototype,"color",void 0);class f extends m{constructor(){super(...arguments),this.type="RasterRangeHighlightShader",this.hasExistingHighlights=!1}_colorize(t,i){const o=this._getPixel(t),{ranges:r,color:s,bandSwap:a}=this.rangeHighlightConfig,l=a.multiply(o.rgb).x,n=d(l,r).multiply(e(o.a)),m=h(new g(0),s,n);if(this.hasExistingHighlights){const{highlightTexture:t}=this.highlightConfig,o=p(t,i);return h(o,m,n)}return m}}t([r],f.prototype,"hasExistingHighlights",void 0),t([o(c)],f.prototype,"rangeHighlightConfig",void 0);export{c as RangeHighlightConfig,f as RasterRangeHighlightShader};
