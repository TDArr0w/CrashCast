/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as r}from"tslib";import e from"./Color.js";import o from"./core/Collection.js";import t from"./core/CollectionFlattener.js";import{referenceSetter as s}from"./core/collectionUtils.js";import{typeCast as a}from"./core/compilerUtils.js";import i from"./core/Error.js";import{JSONSupportMixin as n}from"./core/JSONSupport.js";import{clone as l}from"./core/lang.js";import{Loadable as p}from"./core/Loadable.js";import{loadAll as c}from"./core/loadAll.js";import y from"./core/Logger.js";import{destroyMaybe as u}from"./core/maybe.js";import{isAbortError as d,throwIfAborted as m}from"./core/promiseUtils.js";import{property as h}from"./core/accessorSupport/decorators/property.js";import{Integer as f}from"./core/accessorSupport/ensureType.js";import{subclass as g}from"./core/accessorSupport/decorators/subclass.js";import{writer as v}from"./core/accessorSupport/decorators/writer.js";import{NavigationConstraint as j}from"./ground/NavigationConstraint.js";import{GroundSymbol as w}from"./support/groundInstanceUtils.js";import{transparencyToOpacity as C,opacityToTransparency as L}from"./webdoc/support/opacityUtils.js";var S,I;let b=I=class extends(n(p)){static{S=w}constructor(r){super(r),this[S]=!0,this.parent=null,this.opacity=1,this.surfaceColor=null,this.navigationConstraint=null,this.layers=new o;const e=r=>{const{parent:e}=r;e&&e!==this&&"remove"in e&&e.remove?.(r),r.parent=this,"elevation"!==r.type&&"base-elevation"!==r.type&&y.getLogger(this).error(`Layer '${r.title}, id:${r.id}' of type '${r.type}' is not supported as a ground layer and will therefore be ignored. Only layers of type 'elevation' are supported.`)},s=r=>{r.parent=null};this.addHandles([this.layers.on("after-add",r=>e(r.item)),this.layers.on("after-remove",r=>s(r.item))]),this.allLayers=new t({getCollections:()=>[this.layers,this.parent?.basemap?.groundLayers]})}removeChildLayer(r){this.layers.remove(r)}initialize(){this.when().catch(r=>{d(r)||y.getLogger(this).error("#load()","Failed to load ground",r)}),this.resourceInfo&&this.read(this.resourceInfo.data,this.resourceInfo.context)}get integratedMeshGround(){const r=this.parent?.basemap?.groundLayers.at(0);return r?.replacesTerrain?r:null}destroy(){const r=this.layers.removeAll();for(const e of r)u(e);this.layers.destroy()}normalizeCtorArgs(r){return r&&"resourceInfo"in r&&(this._set("resourceInfo",r.resourceInfo),delete(r={...r}).resourceInfo),r}get loaded(){return super.loaded}get layers(){return this._get("layers")}set layers(r){this._set("layers",s(r,this._get("layers")))}writeLayers(r,e,o,t){const s=[];r?(t={...t,layerContainerType:"ground"},r.forEach(r=>{if("write"in r){const e={};a(r)().write(e,t)&&s.push(e)}else t?.messages&&t.messages.push(new i("layer:unsupported",`Layers (${r.title}, ${r.id}) of type '${r.declaredClass}' cannot be persisted in the ground`,{layer:r}))}),e.layers=s):e.layers=s}load(r){return this.addResolvingPromise(this._loadFromSource(r)),Promise.resolve(this)}loadAll(){return c(this,r=>{r(this.layers)})}async queryElevation(r,e){await this.load({signal:e?.signal});const{queryAll:o}=await import("./layers/support/ElevationQuery.js");m(e);return o(this.layers.filter(A).toArray(),r,e)}async createElevationSampler(r,e){await this.load({signal:e?.signal});const{createSampler:o}=await import("./layers/support/ElevationQuery.js");m(e);return o(this.layers.filter(A).toArray(),r,e)}clone(){const r={opacity:this.opacity,surfaceColor:l(this.surfaceColor),navigationConstraint:l(this.navigationConstraint),layers:this.layers.slice()};return this.loaded&&(r.loadStatus="loaded"),new I({resourceInfo:this.resourceInfo}).set(r)}read(r,e){this.resourceInfo||this._set("resourceInfo",{data:r,context:e}),super.read(r,e)}_loadFromSource(r){const e=this.resourceInfo;return e?this._loadLayersFromJSON(e.data,e.context,r):Promise.resolve()}async _loadLayersFromJSON(r,e,o){const t=e?.origin||"web-scene",s=e?.portal||null,a=e?.url||null,{populateOperationalLayers:i}=await import("./layers/support/layersCreator.js");m(o);const n=[];if(r.layers&&Array.isArray(r.layers)){const e={context:{origin:t,url:a,portal:s,layerContainerType:"ground"},defaultLayerType:"ArcGISTiledElevationServiceLayer"};n.push(i(this.layers,r.layers,e))}await Promise.allSettled(n)}};function A(r){return r&&"createElevationSampler"in r}r([h()],b.prototype,"parent",void 0),r([h()],b.prototype,"integratedMeshGround",null),r([h({json:{read:!1,write:{isRequired:!0}}})],b.prototype,"layers",null),r([h()],b.prototype,"allLayers",void 0),r([v("layers")],b.prototype,"writeLayers",null),r([h({readOnly:!0})],b.prototype,"resourceInfo",void 0),r([h({type:Number,nonNullable:!0,range:{min:0,max:1},json:{type:f,read:{reader:C,source:"transparency"},write:{writer:(r,e)=>{e.transparency=L(r)},target:"transparency"}}})],b.prototype,"opacity",void 0),r([h({type:e,json:{type:[f],write:(r,e)=>{e.surfaceColor=r.toJSON().slice(0,3)}}})],b.prototype,"surfaceColor",void 0),r([h({type:j,json:{write:!0}})],b.prototype,"navigationConstraint",void 0),b=I=r([g("esri.Ground")],b);const _=b;export{_ as default};
