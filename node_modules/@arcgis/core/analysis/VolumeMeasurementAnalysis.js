/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import t from"./Analysis.js";import{volumeMeasurementConfiguration as s}from"./VolumeMeasurement/volumeMeasurementConfiguration.js";import r from"./VolumeMeasurement/VolumeMeasurementCutFillOptions.js";import o from"./VolumeMeasurement/VolumeMeasurementDisplayUnits.js";import i from"./VolumeMeasurement/VolumeMeasurementInputUnits.js";import{volumeMeasureType as n}from"./VolumeMeasurement/volumeMeasurementUtils.js";import{equals as l}from"../core/arrayUtils.js";import{clamp as m}from"../core/mathUtils.js";import{equalsMaybe as a}from"../core/maybe.js";import{watch as u,syncAndInitial as p}from"../core/reactiveUtils.js";import{convertUnit as c}from"../core/unitUtils.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import g from"../geometry/Polygon.js";import{i as f}from"../chunks/simplifyOperator.js";let v=class extends t{constructor(e){super(e),this.type="volume-measurement",this.measureType="cut-fill",this.cutFillOptions=new r,this.displayUnits=new o,this.inputUnits=new i,this._constrainTargetElevation=e=>{if(this.cutFillOptions.constrainTargetElevation!==this._constrainTargetElevation)return e;const t=c(e,this.inputUnits.elevation??"meters","meters"),{minTargetElevation:r,maxTargetElevation:o}=s;if(t<r||t>o){const e=m(t,r,o);return c(e,"meters",this.inputUnits.elevation??"meters")}return e}}initialize(){this.addHandles(u(()=>this.cutFillOptions,e=>e.constrainTargetElevation=this._constrainTargetElevation,p))}set geometry(e){null!=e?this._set("geometry",e.clone()):this._set("geometry",null)}get valid(){const{geometry:e}=this;if(1!==e?.rings.length)return!1;const t=e.rings[0],s=3+(t.length>0&&l(t[0],t[t.length-1])?1:0);if(t.length<s)return!1;if(!e.isClockwise(t)){const t=e.clone();return t.rings[0].reverse(),f(t)}return f(e)}clear(){this.geometry=null}equals(e){return this===e||super.equals(e)&&this.measureType===e.measureType&&a(this.geometry,e.geometry)&&this.displayUnits.equals(e.displayUnits)&&this.inputUnits.equals(e.inputUnits)&&this.cutFillOptions.equals(e.cutFillOptions)}};e([y({type:["volume-measurement"]})],v.prototype,"type",void 0),e([y({type:n,nonNullable:!0})],v.prototype,"measureType",void 0),e([y({type:g,value:null})],v.prototype,"geometry",null),e([y({type:r,nonNullable:!0})],v.prototype,"cutFillOptions",void 0),e([y({type:o,nonNullable:!0})],v.prototype,"displayUnits",void 0),e([y({type:i,nonNullable:!0})],v.prototype,"inputUnits",void 0),e([y({readOnly:!0})],v.prototype,"valid",null),v=e([h("esri.analysis.VolumeMeasurementAnalysis")],v);const d=v;export{d as default};
