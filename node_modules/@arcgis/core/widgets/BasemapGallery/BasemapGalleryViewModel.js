/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import t from"../../Basemap.js";import s from"../../core/Collection.js";import{Loadable as i,isLoadable as a}from"../../core/Loadable.js";import{watch as r,on as o,when as p}from"../../core/reactiveUtils.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import{cast as c}from"../../core/accessorSupport/decorators/cast.js";import"../../core/has.js";import"../../core/RandomLCG.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{canProjectWithoutEngine as l,isLoaded as u,load as d}from"../../geometry/projectionUtils.js";import{equals as h}from"../../geometry/support/spatialReferenceUtils.js";import{isLinkChartView as y}from"../../linkChart/utils.js";import{basemapEnsureType as f}from"../../support/basemapEnsureType.js";import{contentEquals as v}from"../../support/basemapUtils.js";import{default3DCompatibility as b,default2DCompatibility as w}from"./support/basemapCompatibilityUtils.js";import j from"./support/BasemapGalleryItem.js";import B from"./support/LocalBasemapsSource.js";import g from"./support/PortalBasemapsSource.js";const _=s.ofType(j);function I(e){return e&&"esri.portal.Portal"===e.declaredClass}function R(e){return e&&!(e instanceof g)&&(!!e.portal||!!e.query)}function E(e){return e&&"basemaps"in e&&"state"in e&&"refresh"in e}let S=class extends i{constructor(e){super(e),this._loadingProjectionEngine=!1,this.items=new _,this.source=new g,this.view=null}initialize(){const e=()=>this._recreateItems();this.addHandles([r(()=>"ready"===this.state?this.compatibilityFunction:null,()=>this._updateItems()),o(()=>this.source?.basemaps,"change",e,{onListenerAdd:e}),p(()=>this.view,()=>{this.source instanceof g&&(this.source.viewType=this.view?.type)},{once:!0})])}destroy(){const e=this.source.basemaps.find(e=>e===this.activeBasemap);e&&this.source.basemaps.remove(e),this.source?.destroy()}get activeBasemap(){return this.view?.map?.basemap??null}set activeBasemap(e){const t=this.view;if(!t?.map)return;if(!e||!t.ready)return t.map.basemap=e,void this._clearOverride("activeBasemap");const s=e.spatialReference||this.items?.find(t=>this.basemapEquals(e,t.basemap))?.spatialReference;if(s&&"spatialReferenceLocked"in t&&!t.spatialReferenceLocked){const i=t.spatialReference;if(null!=s&&!h(i,s)&&!l(t.spatialReference,s)&&!u())return this._override("activeBasemap",e),this._loadingProjectionEngine=!0,void d().then(()=>{this._get("activeBasemap")===e&&(t.map.basemap=e,t.spatialReference=s,this._clearOverride("activeBasemap"))},()=>{}).then(()=>{this._loadingProjectionEngine=!1});t.map.basemap=e,this._clearOverride("activeBasemap"),null==s||h(t.spatialReference,s)||(t.spatialReference=s)}else t.map.basemap=e,this._clearOverride("activeBasemap")}castActiveBasemap(e){return f(e)}get activeBasemapIndex(){const{state:e,activeBasemap:t}=this;return"ready"!==e?-1:this._findBasemapIndex(t)}get compatibilityFunction(){return"3d"===this.view?.type?b:w}set compatibilityFunction(e){this._overrideIfSome("compatibilityFunction",e)}castSource(e){return Array.isArray(e)||s.isCollection(e)?new B({basemaps:Array.isArray(e)?new s(e):e}):I(e)?new g({portal:e}):R(e)?new g(e):E(e)?e:null}get state(){return this.view?.ready&&this.source?y(this.view)&&!this.view.inGeographicLayout?"unsupported":this._loadingProjectionEngine?"loading":"ready":"disabled"}basemapEquals(e,t){return v(e,t)}refresh(){this._recreateItems()}load(){return this.loadSource()}loadSource(e){return this.addResolvingPromise(a(this.source)?this.source.load(e):null),Promise.resolve(this)}_findBasemapIndex(e){const{items:t}=this,s=t.findIndex(t=>t.basemap===e);return-1===s?t.findIndex(t=>this.basemapEquals(t.basemap,e)):s}_recreateItems(){const e=this.source?.basemaps??[],{view:t,compatibilityFunction:s}=this,i=new Map(this.items.map(e=>[e.basemap,e])),a=e.map(e=>{const a=i.get(e);return a?(i.delete(e),a):new j({basemap:e,compatibilityFunction:s,view:t})});this.items.removeAll(),this.items.addMany(a),i.forEach(e=>e.destroy())}_updateItems(){for(const e of this.items)e.compatibilityFunction=this.compatibilityFunction,e.view=this.view}};e([n()],S.prototype,"_loadingProjectionEngine",void 0),e([n({type:t})],S.prototype,"activeBasemap",null),e([c("activeBasemap")],S.prototype,"castActiveBasemap",null),e([n({readOnly:!0})],S.prototype,"activeBasemapIndex",null),e([n()],S.prototype,"compatibilityFunction",null),e([n({readOnly:!0,type:_})],S.prototype,"items",void 0),e([n()],S.prototype,"source",void 0),e([c("source")],S.prototype,"castSource",null),e([n({readOnly:!0})],S.prototype,"state",null),e([n()],S.prototype,"view",void 0),S=e([m("esri.widgets.BasemapGallery.BasemapGalleryViewModel")],S);const F=S;export{F as default};
