/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import r from"../../core/Accessor.js";import{createTask as o}from"../../core/asyncUtils.js";import t from"../../core/Error.js";import{on as s}from"../../core/events.js";import has from"../../core/has.js";import{throwIfAborted as i,createResolver as a}from"../../core/promiseUtils.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import p from"../../geometry/Point.js";import{projectWithZConversion as c}from"../../geometry/projectionUtils.js";import{equalsWithProjectionEngine as u}from"../../geometry/support/spatialReferenceUtils.js";import{uploadProgressWeights as f}from"../../layers/graphics/sources/support/uploadProgressWeights.js";import{getSupportedExtensions as d}from"../../layers/support/infoFor3D.js";import{makeProgressManager as m,estimatedTransferTime as h}from"../../support/progressUtils.js";let y=class extends r{constructor(){super(...arguments),this.files=[],this.progress=0,this._uploadTask=null,this._layer=null}destroy(){this.cancel(),this.files=[],this._layer=null,this._uploadTask=null}get state(){const e=this._uploadTask;return e&&0!==this.files.length?e.finished?e.error?"error":"success":"pending":"default"}get result(){return this._uploadTask?.value??null}get error(){return this._uploadTask?.error??null}uploadTo(e){this.cancel(),this.files=[],this._layer=e,this._uploadTask=o(async r=>{const o=await j(e);i(r),this.progress=0,this.files=o;const s=m(f.upload,e=>{this.progress=e},"Upload.uploadTo");if(0===o.length)return null;i(r);const a=await e.extractAndFilterFiles(o);i(r),a.length>0&&(this.files=a);const l=await e.convertMesh(a,{signal:r,onProgress:s.makeOnProgress("createFromFiles")});if(i(r),!l)throw new t("editor:upload","could not upload or convert model");const n=a.reduce((e,r)=>e+r.size,0),p=s.simulate("loadMesh",h(n));try{await l.load()}finally{p.remove()}if(!has("disable-feature:georeferenced-uploads")&&l.metadata.georeferenced){if(await u(e.spatialReference,l.origin?.spatialReference))return{type:"georeferenced",mesh:l};if(await w(l,e.spatialReference))return{type:"georeferenced-reprojected",mesh:l}}return l.spatialReference=e.spatialReference,l.vertexSpace.origin=[0,0,0],{type:"non-georeferenced",mesh:l}})}retry(){this._layer&&this.uploadTo(this._layer)}cancel(){this._uploadTask?.abort()}};e([l()],y.prototype,"files",void 0),e([l()],y.prototype,"progress",void 0),e([l()],y.prototype,"state",null),e([l()],y.prototype,"result",null),e([l()],y.prototype,"error",null),e([l()],y.prototype,"_uploadTask",void 0),e([l()],y.prototype,"_layer",void 0),y=e([n("esri.widgets.Editor.Upload")],y);let g=null;async function j(e){const{resolve:r,promise:o}=a(),t=document.createElement("input");t.type="file",t.multiple=!1,t.accept=[...d(e.infoFor3D),".zip"].join(","),t.style.display="none",document.body.appendChild(t);const i=s(t,"change",()=>r(t.files?Array.from(t.files):[]));return g?g(t):t.click(),o.finally(()=>{i.remove(),t.remove()})}function v(e,r){g=o=>{r?.(),Promise.resolve().then(()=>e).then(e=>{if(!g)return;const r=new DataTransfer;e.forEach(e=>r.items.add(e)),o.files=r.files,o.dispatchEvent(new Event("change"))})}}function _(){g=null}async function w(e,r){if(!e.vertexSpace.origin)return!1;const[o,t,s]=e.vertexSpace.origin,i=new p({x:o,y:t,z:s,spatialReference:e.spatialReference}),a=await c(i,r);return!!a&&(e.vertexSpace.origin=[a.x,a.y,a.z??0],e.spatialReference=r,!0)}export{y as Upload,_ as clearPromptForFilesStub,v as stubFilePickerToSelect};
