/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{deprecateWidget as t}from"../core/deprecate.js";import s from"../core/Logger.js";import{on as i,watch as r,initial as o}from"../core/reactiveUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import{cast as l}from"../core/accessorSupport/decorators/cast.js";import"../core/has.js";import"../core/RandomLCG.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import d from"./Widget.js";import p from"./Legend/LegendViewModel.js";import c from"./Legend/styles/card/CardView.js";import y from"./Legend/styles/classic/ClassicView.js";import{globalCss as h}from"./support/globalCss.js";import"./support/widgetUtils.js";import{messageBundle as g}from"./support/decorators/messageBundle.js";import{tsx as v}from"./support/jsxFactory.js";import"@arcgis/toolkit/dom";const u={base:"esri-legend"};let L=class extends d{constructor(e,i){super(e,i),this.headingLevel=3,this.messages=null,this.viewModel=new p,this.style=new y,t(s.getLogger(this),"Legend","arcgis-legend",{version:"4.34"})}initialize(){this.addHandles([i(()=>this.view,"resize",()=>this.scheduleRender()),i(()=>this.activeLayerInfos,"change",()=>this._refreshActiveLayerInfos(this.activeLayerInfos)),r(()=>this.headingLevel,e=>{const{style:t}=this;t&&(t.headingLevel=e)}),r(()=>this.style,(e,t)=>{t&&e!==t&&t.destroy(),e&&(e.activeLayerInfos=this.activeLayerInfos,"card"===e.type&&(e.view=this.view),e.headingLevel=this.headingLevel)},o)])}destroy(){this.style?.destroy()}get activeLayerInfos(){return this.viewModel.activeLayerInfos}set activeLayerInfos(e){this.viewModel.activeLayerInfos=e}get basemapLegendVisible(){return this.viewModel.basemapLegendVisible}set basemapLegendVisible(e){this.viewModel.basemapLegendVisible=e}get groundLegendVisible(){return this.viewModel.groundLegendVisible}set groundLegendVisible(e){this.viewModel.groundLegendVisible=e}get hideLayersNotInCurrentView(){return this.viewModel.hideLayersNotInCurrentView}set hideLayersNotInCurrentView(e){this.viewModel.hideLayersNotInCurrentView=e}get keepCacheOnDestroy(){return this.viewModel.keepCacheOnDestroy}set keepCacheOnDestroy(e){this.viewModel.keepCacheOnDestroy=e}get respectLayerDefinitionExpression(){return this.viewModel.respectLayerDefinitionExpression}set respectLayerDefinitionExpression(e){this.viewModel.respectLayerDefinitionExpression=e}get respectLayerVisibility(){return this.viewModel.respectLayerVisibility}set respectLayerVisibility(e){this.viewModel.respectLayerVisibility=e}get icon(){return"legend"}set icon(e){this._overrideIfSome("icon",e)}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get layerInfos(){return this.viewModel.layerInfos}set layerInfos(e){this.viewModel.layerInfos=e}set style(e){const t=this._get("style");e!==t&&t?.destroy(),this._set("style",e)}castStyle(e){if(e instanceof c||e instanceof y)return e;if("string"==typeof e)return"card"===e?new c:new y;if(e&&"string"==typeof e.type){const t={...e};return delete t.type,"card"===e.type?new c(t):new y(t)}return new y}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}render(){return v("div",{class:this.classes(u.base,h.widget,this.style instanceof y?h.panel:null)},this.style.render())}_refreshActiveLayerInfos(e){e.forEach(e=>{this.removeHandles(`version_${e.layer.uid}`),this._renderOnActiveLayerInfoChange(e)}),this.scheduleRender()}_renderOnActiveLayerInfoChange(e){const t=r(()=>e.version,()=>this.scheduleRender());this.addHandles(t,`version_${e.layer.uid}`);const s=i(()=>e.children,"change",()=>e.children.forEach(e=>this._renderOnActiveLayerInfoChange(e)),o);this.addHandles(s,`version_${e.layer.uid}`),e.children.forEach(e=>this._renderOnActiveLayerInfoChange(e))}};e([n()],L.prototype,"activeLayerInfos",null),e([n()],L.prototype,"basemapLegendVisible",null),e([n()],L.prototype,"groundLegendVisible",null),e([n()],L.prototype,"headingLevel",void 0),e([n()],L.prototype,"hideLayersNotInCurrentView",null),e([n()],L.prototype,"keepCacheOnDestroy",null),e([n()],L.prototype,"respectLayerDefinitionExpression",null),e([n()],L.prototype,"respectLayerVisibility",null),e([n()],L.prototype,"icon",null),e([n()],L.prototype,"label",null),e([n()],L.prototype,"layerInfos",null),e([n(),g("esri/widgets/Legend/t9n/Legend")],L.prototype,"messages",void 0),e([n()],L.prototype,"style",null),e([l("style")],L.prototype,"castStyle",null),e([n()],L.prototype,"view",null),e([n()],L.prototype,"viewModel",void 0),L=e([a("esri.widgets.Legend")],L);const f=L;export{f as default};
