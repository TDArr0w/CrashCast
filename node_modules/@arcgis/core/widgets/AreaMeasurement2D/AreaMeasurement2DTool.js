/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import t from"../../Graphic.js";import"../../intl.js";import{multiplyOpacity as r,getContrast as s}from"../../core/colorUtils.js";import{destroyMaybe as i}from"../../core/maybe.js";import{watch as a,initial as n}from"../../core/reactiveUtils.js";import{formatDecimal as o,formatImperialArea as m,formatMetricArea as l,formatImperialLength as p,formatMetricLength as c}from"../../core/unitFormatUtils.js";import{convertUnit as u}from"../../core/unitUtils.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as d}from"../../core/accessorSupport/decorators/subclass.js";import{UpdatingHandles as v}from"../../core/support/UpdatingHandles.js";import y from"../../geometry/Point.js";import f from"../../geometry/Polygon.js";import g from"../../geometry/Polyline.js";import{e as _}from"../../chunks/areaOperator.js";import{e as w,l as b}from"../../chunks/geodeticAreaOperator.js";import{e as j,l as L}from"../../chunks/geodeticDensifyOperator.js";import{e as S,l as A}from"../../chunks/geodeticLengthOperator.js";import{e as k}from"../../chunks/lengthOperator.js";import{e as G}from"../../chunks/simplifyOperator.js";import{polygonCentroidPoint as x}from"../../geometry/support/centroid.js";import{isSupported as M,geodesicDensify as q,geodesicLengths as O,geodesicAreas as C}from"../../geometry/support/geodesicUtils.js";import H from"../../layers/GraphicsLayer.js";import R from"../../symbols/Font.js";import U from"../../symbols/SimpleFillSymbol.js";import T from"../../symbols/SimpleLineSymbol.js";import z from"../../symbols/SimpleMarkerSymbol.js";import D from"../../symbols/TextSymbol.js";import{SnappingVisualizer2D as P}from"../../views/2d/interactive/SnappingVisualizer2D.js";import E from"../../views/draw/Draw.js";import{createCoordinateHelper as V}from"../../views/interactive/coordinateHelper.js";import{createManipulatorDragEventPipeline as F,screenToMap as W,dragManipulatedObject as I}from"../../views/interactive/dragEventPipeline.js";import{GraphicManipulator as B}from"../../views/interactive/GraphicManipulator.js";import{InteractiveToolBase as J}from"../../views/interactive/InteractiveToolBase.js";import{EditGeometry as N}from"../../views/interactive/editGeometry/EditGeometry.js";import{EditGeometryOperations as K}from"../../views/interactive/editGeometry/EditGeometryOperations.js";import{SnappingContext as Q}from"../../views/interactive/snapping/SnappingContext.js";import{createSnapDragEventPipelineStep as X}from"../../views/interactive/snapping/SnappingDragPipelineStep.js";import{setupSnappingToggleHandles as Y}from"../../views/interactive/snapping/snappingUtils.js";import{fetchMessageBundle as Z}from"../../intl/messages.js";import{onLocaleChange as $}from"../../intl/locale.js";const ee=1e5;let te=class extends J{constructor(e){super(e),this._measurementLayer=new H({internal:!0,listMode:"hide",visible:!1,title:"Area measurement layer"}),this._manipulatorLayer=new H({internal:!0,listMode:"hide",visible:!1,title:"Area measurement manipulator layer"}),this._snappingLayer=new H({internal:!0,listMode:"hide",visible:!1,title:"Area measurement snapping layer"}),this._updatingHandles=new v,this._vertices=[],this._drawActive=!1,this.measurement=null,this.measurementLabel=null}initialize(){Z("esri/core/t9n/Units").then(e=>{this.messages=e});const e=this.view;this._draw=new E({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this.addHandles([$(async()=>{this.messages=await Z("esri/core/t9n/Units")}),a(()=>[this.unit,this.messages],()=>{this._updateGraphics()},n),a(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const e=this._vertices.map(({coord:e})=>e);for(const{handle:t}of this._vertices)t.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)})]),Y(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=i(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=i(this._measurementLayer),this._manipulatorLayer=i(this._manipulatorLayer),this._snappingLayer=i(this._snappingLayer),this._updatingHandles=i(this._updatingHandles),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this.snappingManager.options}get updating(){return this._updatingHandles.updating||this.snappingManager.updating}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_getSnappingContext(e){return new Q({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new K(new N("point",V(!1,!1,this.view.spatialReference)),2),visualizer:new P(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const{snappingManager:e}=this;this._draw.create("polyline",{mode:"click",snappingManager:e}).on(["draw-complete","vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],e=>{this._updateSketch(e.vertices),"draw-complete"===e.type&&this._stopSketch()})}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let r=this._vertices.length;r<e.length;r++){const[s,i]=e[r],a=new y({x:s,y:i,spatialReference:t}),n=re(a,this.view,this._manipulatorLayer);this.manipulators.add(n);const o=K.fromGeometry(a,2);o.on("vertex-update",e=>{const t=e.vertices.at(0);t&&(this._vertices[r].coord=[t.pos[0],t.pos[1]],this._updateGraphics())});const m=F(n,(e,t,r,s)=>{const i=this._getSnappingContext(s),{snappingManager:a}=this,n=this._updatingHandles,{snappingStep:m}=X({snappingContext:i,snappingManager:a,updatingHandles:n});t.next(W(this.view)).next(t=>{if("start"===t.action){const r=new y(t.mapStart);e.graphic.geometry=r,o.trySetGeometry(r)}return t}).next(...m).next(I({operations:o})).next(()=>{e.graphic.geometry=o.data.geometry})});this._vertices.push({manipulator:n,coord:[s,i],handle:m})}if(this._vertices.length){const r=this._vertices.length-1,s=this._vertices[r],[i,a]=e[r];s.coord[0]===i&&s.coord[1]===a||(s.coord=[i,a],s.manipulator.graphic.geometry=new y({x:i,y:a,spatialReference:t}));const n=this._drawActive?this._vertices[r].manipulator:null;this.manipulators.forEach(({manipulator:e})=>{e.interactive=null==n||e!==n})}this._updateGraphics()}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=se(this._vertices.map(({coord:e})=>e),this.view.spatialReference);if(!e)return;const{measurement:i,fillGeometry:a,outlineGeometry:n}=e;this._set("measurement",i);const o=i?ne(this.messages,i,this.unit):null;if(this._set("measurementLabel",o),!a&&!n)return;let m,l,p;const{graphics:c}=this._measurementLayer,u=3===c.length,{effectiveTheme:h}=this.view;u?(m=c.at(0),l=c.at(1),p=c.at(2)):(m=new t({symbol:new U({color:r(h.accentColor,.3),outline:null})}),l=new t({symbol:new T({color:h.accentColor,width:2})}),p=new t({symbol:new D({color:h.textColor,font:new R({size:14,family:"sans-serif"}),haloColor:r(s(h.textColor,160),.5),haloSize:2})}),c.removeAll(),c.addMany([m,l,p])),m.geometry=a,l.geometry=n;const d=a?x(a):null,v=d?y.fromJSON(d):null;p.geometry=v,p.symbol.text=o?.area??""}};function re(e,s,i){const a=8,n={style:"circle",color:r(s.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},o=new z({...n,size:a}),m=new z({...n,size:1.5*a}),l=new t({geometry:e,symbol:o});return new B({view:s,layer:i,graphic:l,focusedSymbol:m})}function se(e,t){if(2===e.length){const r=new g({paths:[e],spatialReference:t});let s;return s=t.isGeographic?M(t)?q(r,ee):j(r,ee,{unit:"meters"}):t.isWebMercator?j(r,ee,{unit:"meters"}):r,{measurement:null,fillGeometry:null,outlineGeometry:s}}e.push(e[0]);const r=new g({paths:[e],spatialReference:t}),s=new f({rings:[e],spatialReference:t});let i,a,n=null,o=null;if(t.isGeographic)if(M(t)){if(n=q(r,ee),o=q(s,ee),o=G(o),!o)return null;i=O([r],"meters")[0],a=C([o],"square-meters")[0]}else{if(n=j(r,ee,{unit:"meters"}),o=j(s,ee,{unit:"meters"}),o=G(o),!o)return null;i=S(r,{unit:"meters"}),a=w(o,{unit:"square-meters"})}else if(t.isWebMercator){if(n=j(r,ee,{unit:"meters"}),o=j(s,ee,{unit:"meters"}),o=G(o),!o)return null;i=S(r,{unit:"meters"}),a=w(o,{unit:"square-meters"})}else{if(n=r,o=G(s),!o)return null;i=k(r,{unit:"meters"}),a=_(o,{unit:"square-meters"})}return{measurement:{geometry:o,area:a,perimeter:i},fillGeometry:o,outlineGeometry:n}}function ie(e){return null!=e}async function ae(e){(e?.isGeographic&&!M(e)||e?.isWebMercator)&&await Promise.all([b(),L(),A()])}function ne(e,t,r){if(!t||!e)return null;const s={area:null,perimeter:null},{area:i,perimeter:a}=t;switch(r){case"metric":s.area=l(e,i,"square-meters");break;case"imperial":s.area=m(e,i,"square-meters");break;default:{const t=u(i,"square-meters",r);s.area=o(e,t,r);break}}const n=oe(r);if(n)switch(n){case"metric":s.perimeter=c(e,a,"meters");break;case"imperial":s.perimeter=p(e,a,"meters");break;default:{const t=u(a,"meters",n);s.perimeter=o(e,t,n);break}}else s.perimeter="";return s}function oe(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-nautical-miles":return"nautical-miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}e([h()],te.prototype,"_drawActive",void 0),e([h({readOnly:!0})],te.prototype,"cursor",null),e([h({value:!0})],te.prototype,"editable",null),e([h({readOnly:!0})],te.prototype,"measurement",void 0),e([h({readOnly:!0})],te.prototype,"measurementLabel",void 0),e([h()],te.prototype,"messages",void 0),e([h({constructOnly:!0})],te.prototype,"snappingManager",void 0),e([h()],te.prototype,"unit",void 0),e([h()],te.prototype,"updating",null),e([h({constructOnly:!0})],te.prototype,"view",void 0),te=e([d("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],te);export{te as AreaMeasurement2DTool,se as createAreaMeasurementInfo2D,ne as createAreaMeasurementLabel,ie as isSupported,ae as loadGeometryOperators};
