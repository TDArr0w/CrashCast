/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{destroyMaybe as t}from"../../core/maybe.js";import{watch as i,initial as s,syncAndInitial as n,whenOnce as r}from"../../core/reactiveUtils.js";import{measurementAreaUnits as o}from"../../core/unitUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{defaultUnitPropertyMetadata as l}from"../../properties/defaultUnit.js";import{SnappingManager as u}from"../../views/interactive/snapping/SnappingManager.js";import m from"../../views/interactive/snapping/SnappingOptions.js";import{isSupported as g,loadGeometryOperators as d,AreaMeasurement2DTool as h}from"./AreaMeasurement2DTool.js";import{InteractiveToolViewModel as c}from"../support/InteractiveToolViewModel.js";let v=class extends c{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views.",this._snappingManager=null,this.snappingOptions=new m}initialize(){this.addHandles([i(()=>this.view?.spatialReference,()=>this.clear()),i(()=>this.unit,e=>{null!=this.tool&&(this.tool.unit=e)},s),i(()=>this.view,e=>{this._snappingManager=t(this._snappingManager),e&&(this._snappingManager=new u({view:e,options:this.snappingOptions}))},n),i(()=>this.snappingOptions,e=>{this._snappingManager&&e&&(this._snappingManager.options=e)})])}destroy(){this._snappingManager=t(this._snappingManager)}get measurement(){return this.tool?.measurement??null}get measurementLabel(){return this.tool?.measurementLabel??null}get state(){return this.disabled||null==this.view||!g(this.view.spatialReference)?"disabled":this.tool?.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return o}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}get view(){return super.view}set view(e){super.view=e}async start(){const{view:e}=this;e&&(await r(()=>e.ready),await d(e.spatialReference)),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new h({snappingManager:this._snappingManager,unit:this.unit,view:this.view,visible:this.visible})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return null!=e&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(null==e)return[];const t=e.filter(e=>o.includes(e));return 0===t.length?o.slice():t}};e([a()],v.prototype,"_snappingManager",void 0),e([a(l)],v.prototype,"defaultUnit",void 0),e([a({readOnly:!0})],v.prototype,"measurement",null),e([a({readOnly:!0})],v.prototype,"measurementLabel",null),e([a({type:m,nonNullable:!0})],v.prototype,"snappingOptions",void 0),e([a({readOnly:!0})],v.prototype,"state",null),e([a({type:String})],v.prototype,"unit",null),e([a({type:[String]})],v.prototype,"unitOptions",null),v=e([p("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],v);const w=v;export{w as default};
