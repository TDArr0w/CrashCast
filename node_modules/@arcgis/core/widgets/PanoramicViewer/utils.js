/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import t from"../../Graphic.js";import r from"../../core/Collection.js";import e from"../../core/Error.js";import{rad2deg as o,deg2rad as s}from"../../core/mathUtils.js";import{throwIfAborted as n}from"../../core/promiseUtils.js";import i from"../../geometry/Mesh.js";import a from"../../geometry/support/MeshMaterial.js";import m from"../../geometry/support/MeshTexture.js";import u from"../../symbols/FillSymbol3DLayer.js";import c from"../../symbols/MeshSymbol3D.js";import{defaultImageSphereCenter as p,defaultImageSphereSize as l}from"./constants.js";import{loadRasterFactory as f,loadPanoramicTilePyramid as w}from"./support/importUtils.js";function y(t,r=p,e=l){const o=r.clone();o.z=-l/2;const s=i.createSphere(o,{size:e,densificationFactor:2,vertexSpace:"georeferenced",material:new a({colorTexture:new m({data:t})})});if(s.components[0].trustSourceNormals=!0,s.vertexAttributes.uv){const t=s.vertexAttributes.uv.length??0;for(let r=0;r<t;r++)s.vertexAttributes.uv[2*r+0]=1-s.vertexAttributes.uv[2*r+0],s.vertexAttributes.uv[2*r+1]=s.vertexAttributes.uv[2*r+1]}return s.centerAt(o),s}function h(e){return new t({geometry:e,symbol:new c({symbolLayers:new r([new u])})})}function v(t,r){return 2*o(Math.atan(Math.tan(s(t/2))*Math.sqrt((1/r)**2+1)))}async function b(t,r){const e=await f(),o=await e.open({url:t,ioConfig:{skipExtensions:["jgw","aux.xml"],skipMapInfo:!0},...r});return n(r),j(o,{url:t})}const j=(t,r)=>{if(!t)throw new e("panoramic-viewer:missing-raster","Raster data could not be loaded",r);return t};async function x(t,r){const e=await w();return n(r),new e({raster:t})}async function g(t,r){return t?.length?await Promise.all(t.map(t=>t.loadMesh(r))):[]}export{y as createImageSphere,v as findDiagonalFOV,g as loadMeshes,x as loadPyramid,b as loadRaster,h as meshToGraphic};
