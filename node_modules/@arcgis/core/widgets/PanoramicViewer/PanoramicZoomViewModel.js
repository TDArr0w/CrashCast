/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o}from"tslib";import{clamp as i}from"../../core/mathUtils.js";import{watch as t,syncAndInitial as e,sync as r}from"../../core/reactiveUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import s from"./PanoramicZoomConditions.js";import{PanoramicZoomManager as m}from"./PanoramicZoomManager.js";import c from"../Zoom/ZoomViewModel.js";let p=class extends c{constructor(o){super(o),this.panoramicZoomConditions=new s,this.zoomIn=()=>{this._zoomManager.zoomIn()},this.zoomInFOV=()=>{if(!this.canZoomIn)return;const o=this.view.camera.fov-this.panoramicZoomConditions.zoomFactor;this.zoomTo(o)},this.zoomOut=()=>{this._zoomManager.zoomOut()},this.zoomOutFOV=()=>{if(!this.canZoomOut)return;const o=this.view.camera.fov+this.panoramicZoomConditions.zoomFactor;this.zoomTo(o)},this.zoomTo=o=>{this.view.camera.fov=this.constrainFOV(o),this.view.camera=this.view.camera.clone()},this._zoomManager=new m({viewModel:o.panoramicViewerViewModel,panoramicZoomViewModel:this})}initialize(){this.addHandles([t(()=>[this.view?.ready,this.panoramicZoomConditions],()=>{this.view?.ready&&(this.panoramicZoomConditions.view=this.view,this.zoomTo(this.view.camera.fov))},e),t(()=>[this.panoramicZoomConditions.maxFOV,this.panoramicZoomConditions.minFOV],([o,i])=>{null!=o&&null!=i&&this.zoomTo(this.view.camera.fov)},r)])}get canZoomIn(){return this.panoramicZoomConditions.canZoomIn}get canZoomOut(){return this.panoramicZoomConditions.canZoomOut}get state(){return this.view?.ready?"ready":"disabled"}set view(o){this._set("view",o)}set panoramicViewerViewModel(o){this._zoomManager.viewModel=o}get panoramicViewerViewModel(){return this._zoomManager.viewModel}constrainFOV(o){const{maxFOV:t,minFOV:e}=this.panoramicZoomConditions;return i(o,e,t)}};o([a()],p.prototype,"_zoomManager",void 0),o([a()],p.prototype,"canZoomIn",null),o([a()],p.prototype,"canZoomOut",null),o([a({type:s})],p.prototype,"panoramicZoomConditions",void 0),o([a()],p.prototype,"state",null),o([a()],p.prototype,"view",null),o([a()],p.prototype,"panoramicViewerViewModel",null),p=o([n("esri.widgets.PanoramicViewer.PanoramicZoomViewModel")],p);const h=p;export{h as default};
