/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o}from"tslib";import i from"../../core/Accessor.js";import{createTask as e}from"../../core/asyncUtils.js";import{throwIfAborted as s}from"../../core/promiseUtils.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import{meshToGraphic as a}from"./utils.js";let m=class extends i{constructor(o){super(o),this._zoomTask=null,this.panoramicZoomViewModel=null,this._updateGraphicsFromTiles=async(o,i,e,t,r)=>{const m=await Promise.all(o.map(async o=>{const i=await o.loadMesh(r);return a(i)}));s(r);const n=t.removeAll();i.splice(0),m.forEach((e,s)=>{const t=o[s].key;e.attributes={key:t},i.push(t)}),t.addMany(m),this.viewModel?.set({imagePyramidLevel:e}),this.viewModel?.addManyGraphics(m),this.viewModel?.removeManyGraphics(n)},this._zoomIn=async o=>{if(s(o),!this.viewModel)return this.panoramicZoomViewModel.zoomInFOV();const{imagePyramid:i,yaw:e,hfov:t,vfov:r,pitch:a,tileCache:m,currentGraphics:n,imageRenderer:{size:c},imagePyramidLevel:l}=this.viewModel;if(!i)return this.panoramicZoomViewModel.zoomInFOV();const h=t/c[0],p=i.getLevelWithPixelAngle(h);if(0===l||l===p)return this.panoramicZoomViewModel.zoomInFOV();const d=i.getTiles(p,e,a,t,r);return d?(await this._updateGraphicsFromTiles(d,m,p,n,{signal:o}),this.panoramicZoomViewModel.zoomInFOV()):this.panoramicZoomViewModel.zoomInFOV()},this._zoomOut=async o=>{if(s(o),!this.viewModel)return this.panoramicZoomViewModel.zoomOutFOV();const{imagePyramid:i,yaw:e,hfov:t,vfov:r,pitch:a,tileCache:m,currentGraphics:n,imagePyramidLevel:c,imageRenderer:{size:l}}=this.viewModel;if(!i)return this.panoramicZoomViewModel.zoomOutFOV();const h=i.maximumPyramidLevel,p=t/l[0],d=i.getLevelWithPixelAngle(p);if(h===c||d===c)return this.panoramicZoomViewModel.zoomOutFOV();const u=i.getTiles(d,e,a,t,r);return u?(await this._updateGraphicsFromTiles(u,m,d,n,{signal:o}),this.panoramicZoomViewModel.zoomOutFOV()):this.panoramicZoomViewModel.zoomOutFOV()},this.zoomIn=o=>{(null==this._zoomTask||this._zoomTask.finished)&&(this._zoomTask=e(this._zoomIn,o))},this.zoomOut=o=>{(null==this._zoomTask||this._zoomTask.finished)&&(this._zoomTask=e(this._zoomOut,o))}}};o([t()],m.prototype,"viewModel",void 0),o([t()],m.prototype,"panoramicZoomViewModel",void 0),m=o([r("esri.widgets.PanoramicViewer.PanoramicZoomManager")],m);export{m as PanoramicZoomManager};
