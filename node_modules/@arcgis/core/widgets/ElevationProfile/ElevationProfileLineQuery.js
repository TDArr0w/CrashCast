/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o}from"tslib";import e from"../../Color.js";import{handlesGroup as r}from"../../core/handleUtils.js";import{watch as t,sync as i}from"../../core/reactiveUtils.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import n from"./ElevationProfileLine.js";import{getQuerySourceMinDemResolution as a}from"./support/elevationQuerySourceUtils.js";let u=class extends n{constructor(o){super(o),this.type="query",this.color=new e("#db334a"),this.viewVisualizationEnabled=!0,this.source=null,this.numSamplesForPreview=50,this.numSamplesPerChunk=500}get minDemResolution(){return a(this.source)}get available(){const o=this.source;return!!o&&(null==o.visible||o.visible)&&(null==o.layers||o.layers.some(o=>o.visible))}queryElevation(o,e){if(!this.source)throw new Error("No source configured for the elevation profile line");return this.source.queryElevation(o,e)}attach(o){return r([super.attach(o),t(()=>this.source,()=>this._onChange(),i)])}};o([s({type:e,nonNullable:!0})],u.prototype,"color",void 0),o([s()],u.prototype,"viewVisualizationEnabled",void 0),o([s()],u.prototype,"source",void 0),o([s({readOnly:!0})],u.prototype,"minDemResolution",null),o([s()],u.prototype,"available",null),u=o([l("esri.widgets.ElevationProfile.ElevationProfileLineQuery")],u);const p=u;export{p as default};
