/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{EvaluateAmbientLighting as e}from"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl.js";import{Gamma as r}from"../views/3d/webgl-engine/core/shaderLibrary/shading/Gamma.glsl.js";import{PiUtils as i}from"../views/3d/webgl-engine/core/shaderLibrary/shading/PiUtils.glsl.js";import{CloudsParallaxShading as o}from"../views/3d/webgl-engine/core/shaderLibrary/util/CloudsParallaxShading.glsl.js";import{ColorConversion as l}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{Float3BindUniform as s}from"../views/3d/webgl-engine/core/shaderModules/Float3BindUniform.js";import{FloatBindUniform as n}from"../views/3d/webgl-engine/core/shaderModules/FloatBindUniform.js";import{glsl as d}from"../views/3d/webgl-engine/core/shaderModules/glsl.js";import{ScreenSpacePassAtmosphere as a}from"../views/3d/webgl-engine/shaders/ScreenSpacePassAtmosphere.glsl.js";import{ShaderBuilder as g}from"../views/webgl/ShaderBuilder.js";function c(){const c=new g,{fragment:t}=c;return c.include(a,{needUVs:!1,needEyeDirection:!1}),t.include(l),c.include(e,{pbrMode:0,lightingSphericalHarmonicsOrder:2}),t.include(i),t.include(r),c.include(o),t.uniforms.add(new s("cameraPosition",e=>e.camera.eye),new n("cloudsOpacity",e=>e.clouds.opacity)).main.add(d`vec4 cloudsColor = renderClouds(normalize(worldRay), cameraPosition);
fragColor = vec4(cloudsOpacity * cloudsColor.rgb, cloudsColor.a);`),c}const t=Object.freeze(Object.defineProperty({__proto__:null,build:c},Symbol.toStringTag,{value:"Module"}));export{t as C,c as b};
