/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{GeometryCursor as e}from"../../geometry/GeometryCursor.js";import{TileClipper as r}from"../../geometry/support/TileClipper.js";import{importLazily as t}from"./utils.js";const o=t(()=>import("../../geometry/operators/json/bufferOperator.js")),s=t(()=>import("../../geometry/operators/json/convexHullOperator.js")),m=t(()=>import("../../geometry/operators/json/lengthOperator.js")),i=t(()=>import("../../geometry/operators/json/generalizeOperator.js")),n=t(()=>import("../../geometry/operators/json/graphicBufferOperator.js")),p=t(()=>import("../../geometry/operators/json/offsetOperator.js")),f=t(()=>import("../../geometry/operators/json/simplifyOperator.js")),c=512;let a;function l(e){switch(e.type){case"CIMGeometricEffectDonut":case"CIMGeometricEffectBuffer":return o.getImportPromise();case"CIMGeometricEffectEnclosingPolygon":return s.getImportPromise();case"CIMGeometricEffectOffset":return Promise.all([p.getImportPromise(),n.getImportPromise()]);case"CIMGeometricEffectTaperedPolygon":return Promise.all([f.getImportPromise(),m.getImportPromise(),i.getImportPromise()]);default:return Promise.resolve()}}class g{constructor(e){this._geometry=e}next(){const e=this._geometry;return this._geometry=null,e}}function y(t,o,s){if(!t)return null;a||(a=new r(0,0,0,1));const m=s?-1:1,i="esriGeometryPolygon"===t.geometryType,n=i?3:2,p=i?3:2;let f,l;for(a.reset(n),a.setPixelMargin(o+1),a.setExtent(c);t.nextPath();)if(!(t.pathSize<p)){for(t.nextPoint(),f=t.x,l=m*t.y,a.moveTo(f,l);t.nextPoint();)f=t.x,l=m*t.y,a.lineTo(f,l);i&&a.close()}const g=a.result(!1);if(g){const r=e.createEmptyOptimizedCIM(t.geometryType);for(const e of g){r.startPath();for(const t of e)r.pushXY(t.x,m*t.y)}return r.reset(),r}return null}export{g as SimpleEffectCursor,y as clipCursorToTileExtent,o as lazyBufferOperator,s as lazyConvexHullOperator,i as lazyGeneralizeOperator,n as lazyGraphicBufferOperator,m as lazyLengthOperator,p as lazyOffsetOperator,f as lazySimplifyOperator,l as loadGeometryOperatorsForEffect};
