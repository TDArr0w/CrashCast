/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import o from"../request.js";import{Clonable as r}from"../core/Clonable.js";import{JSONSupportMixin as t}from"../core/JSONSupport.js";import{generateUUID as s}from"../core/uuid.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{reader as p}from"../core/accessorSupport/decorators/reader.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{persistable as a}from"../core/accessorSupport/decorators/persistable.js";import c from"./FocusAreaOutline.js";import l from"../layers/support/PolygonCollection.js";import{f as m}from"../chunks/persistableUrlUtils.js";let d=class extends(t(r)){constructor(e){super(e),this.id=`focusarea-${s()}`,this.title=null,this.enabled=!0,this.outline=null,this.geometries=new l}readGeometries(e,o,r){Array.isArray(e)?this.geometries=l.fromJSON(e,r):"web-scene"!==r.origin&&"portal-item"!==r.origin||r.hooks?.onAfterLoad?.(()=>this._loadGeometries(m(e,r),r))}async _loadGeometries(e,r){const t=await o(e,{responseType:"json"});this.geometries=l.fromJSON(t.data,r)}};e([i({type:String,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),i()],d.prototype,"id",void 0),e([i({type:String,json:{write:!0}})],d.prototype,"title",void 0),e([i({type:Boolean,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}})],d.prototype,"enabled",void 0),e([i({type:c,json:{write:!0}})],d.prototype,"outline",void 0),e([i({type:l,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}},clonable:e=>new l(e.items.map(e=>e.clone()))}),a({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],d.prototype,"geometries",void 0),e([p(["web-scene","portal-item","service"],"geometries")],d.prototype,"readGeometries",null),d=e([n("esri.effects.FocusArea")],d);const u=d;export{u as default};
