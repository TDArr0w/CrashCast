/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import e from"./Graphic.js";import{ArcadeDate as t}from"./arcade/ArcadeDate.js";import{toSymbolId as r}from"./arcade/arcadeEnvironment.js";import a from"./arcade/ImmutableArray.js";import"./core/has.js";import{deprecated as n}from"./core/deprecate.js";import o from"./core/Error.js";import{clone as c}from"./core/lang.js";import i from"./core/Logger.js";import{DateOnly as s}from"./core/sql/DateOnly.js";import{TimeOnly as p}from"./core/sql/TimeOnly.js";import l from"./layers/FeatureLayer.js";import u from"./portal/Portal.js";import m from"./rest/support/FeatureSet.js";import{loadArcade as y}from"./support/loadArcade.js";let f=null;function d(e,t,r,n={}){const o=t.elementType,c="value",i="array"===o.type?[{name:c,type:o.type,elementType:o.elementType}]:"dictionary"===o.type?[{name:c,type:o.type,properties:o.properties}]:[{name:c,type:o.type}];return new a(e.map(e=>{const t={};return S(t,i,{[c]:e},r,n),t[c]}))}function b(e,t,r={}){const a=e instanceof m?new l({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return t.constructFeatureSet(a,r.spatialReference,null,!0,r.lruCache,r.interceptor)}function v(e,t,r={}){const{spatialReference:a,interceptor:n,lruCache:o}=r;return"string"==typeof e?t.createFeatureSetCollectionFromService(e,a,o,n):t.createFeatureSetCollectionFromMap(e,a,o,n)}function g(e,t,r,a={}){const n=Object.create(null);return S(n,t.properties,e,r,a),new f.Dictionary(n)}function S(e,r,a,n,o={}){const c={};for(const t of Object.keys(a))c[t.toLowerCase()]=a[t];for(const i of r){const r=i.name.toLowerCase();if(o.variablesPreProcessed)e[r]=c[r];else switch(i.type){case"array":{const t=c[r];e[r]=null==t?null:d(t,i,n,o);break}case"feature":{const t=c[r];e[r]=null==t?null:f.Feature.createFromGraphic(t,o?.timeZone);break}case"featureSet":{const t=c[r];e[r]=null==t?null:n?b(t,n,o):null;break}case"featureSetCollection":{const t=c[r];e[r]=null==t?null:n?v(t,n,o):null;break}case"dictionary":{const t=c[r];e[r]=null==t?null:g(t,i,n,o);break}case"date":{const a=c[r];e[r]=a?a instanceof t?a:o?.timeZone?t.dateJSAndZoneToArcadeDate(a,o?.timeZone):t.dateJSToArcadeDate(a):null;break}case"dateOnly":{const t=c[r];e[r]=t?t instanceof s?t:s.fromReader(t):null;break}case"time":{const t=c[r];e[r]=t?t instanceof p?t:p.fromReader(t):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[r]=c[r];break;case"voxel":{const t=c[r];e[r]=null==t?null:new f.Voxel(t,o?.timeZone);break}case"pixel":{const t=c[r];e[r]=null==t?null:f.Pixel.fromImageryGraphic(t,o?.timeZone);break}}}}function w(e,t){for(const r of e)t.push(r),"dictionary"===r.type&&w(r.properties,t);return t}function h(e,t,r,a,n){const{spatialReference:o,interceptor:c,lruCache:i,console:s,abortSignal:p,timeZone:l,services:m={portal:u.getDefault()},track:y}=r,f={vars:{},spatialReference:o,interceptor:c,timeZone:l,lrucache:i,useAsync:n,services:m,console:s,abortSignal:p,track:y};return t?(S(f.vars,e.variables,t,a,r),f):f}function $(t,r){switch(r.getArcadeType(t)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return t;case"date":return t.toJSDate();case"time":case"dateOnly":return t.toString();case"feature":{const r=(t.type,t),a="geometry"in r?r.geometry():null,n="readAttributes"in r?r.readAttributes():r.attributes;return new e({geometry:a,attributes:n})}case"dictionary":{const e=t,a=e.attributes,n={};for(const t of Object.keys(a))n[t]=$(e.field(t),r);return n}case"array":return("toArray"in t?t.toArray():t).map(e=>$(e,r))}return t}const x={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},C={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},j={variables:[{name:"$voxel",type:"voxel"}]},A={variables:[{name:"$pixel",type:"pixel"},{name:"$imageCollectionItem",type:"feature"}]},k=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",x],["popup-element",x],["popup-feature-reduction",C],["popup-element-feature-reduction",C],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",j],["popup-element-voxel",j],["popup-imagery",A],["popup-element-imagery",A]]);function T(e){"feature-reduction-popup"===e?(n(i.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):"feature-reduction-popup-element"===e&&(n(i.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const t=k.get(e);if(!t){const t=Array.from(k.keys()).map(e=>`'${e}'`).join(", ");throw new o("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${t}`)}return c(t)}async function I(e,t,a={}){f||(f=await y());const{arcade:n,arcadeUtils:c,batchExec:{createBatchExecutor:i},aiServices:{BatchTranslationServiceFactory:s,PortalTranslationService:p}}=f,{loadScriptDependencies:l,referencesMember:m,scriptIsAsync:d}=n,b=w(t.variables,[]).filter(e=>"featureSet"===e.type||"featureSetCollection"===e.type).map(e=>r(e.name)),v=n.parseScript(e,b);if(!v)throw new o("arcade:invalid-script","Unable to create SyntaxTree");const g=c.extractFieldNames(v),S=n.scriptTouchesGeometry(v),x=t.variables.map(e=>r(e.name)).filter(e=>m(v,e)),C=d(v,b);await l(v,C,b);const j=n.compileScript(v,{vars:Object.fromEntries(x.map(e=>[e,!0])),useAsync:C}),{lruCache:A,services:k}=a,T=n.featureSetUtils(),I=(e,r={})=>{if(C)throw new o("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const a={...k,...r.services},n={lruCache:A,...r,services:a},i=j(h(t,e,n,T,C));return r.rawOutput?i:$(i,c)},F=async(e,r={})=>{const a={...k,...r.services},n={lruCache:A,...r,services:a},o=await j(h(t,e,n,T,C));return r.rawOutput?o:$(o,c)},O=async(e,r,a={})=>{const n=[],o=i(e,async(e,o)=>{const i=r(e);try{const e={...l,translation:m.create(o)},r={lruCache:A,...a,services:e},s=await j(h(t,i,r,T,C)),p=a.rawOutput?s:$(s,c);n.push({id:o.id,result:{status:"fulfilled",value:p}})}catch(s){throw n.push({id:o.id,result:{status:"rejected",reason:s}}),s}},a.maxConcurrency??64,a.abortSignal),l={...k,...a.services},m=new s(o,l.translation??new p(l.portal??u.getDefault(),a.console));return await o.run(),n.sort(({id:e},{id:t})=>e-t).map(({result:e})=>e)};return{execute:I,executeAsync:F,executeAsyncBatch:O,isAsync:C,variablesUsed:x,fieldsUsed:g,geometryUsed:S,syntaxTree:v}}export{I as createArcadeExecutor,T as createArcadeProfile};
