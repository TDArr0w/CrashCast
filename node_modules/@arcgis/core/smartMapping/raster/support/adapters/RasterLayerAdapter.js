/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{Loadable as r}from"../../../../core/Loadable.js";import{LRUCache as s}from"../../../../core/LRUCache.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as e}from"../../../../core/accessorSupport/decorators/subclass.js";let a=class extends r{constructor(){super(...arguments),this.type="raster-layer-adapter",this._statsCache=new s(20)}get serviceRasterInfo(){return this.rasterInfo}async updateRasterInfo(t){this.rasterInfo=await this.generateRasterInfo(t),this.rasterFunction=t?.rasterFunction}async updateRasterInfoWithEstimatedStats(t,r){const s=await this.estimateStatisticsHistograms(r);s?.statistics&&(t.statistics=s.statistics),s?.histograms&&(t.histograms=s.histograms)}};t([o()],a.prototype,"layer",void 0),t([o()],a.prototype,"serviceRasterInfo",null),t([o()],a.prototype,"rasterInfo",void 0),t([o()],a.prototype,"rasterFunction",void 0),t([o({readOnly:!0})],a.prototype,"type",void 0),t([o()],a.prototype,"version",void 0),a=t([e("esri.smartMapping.raster.support.adapters.RasterLayerAdapter")],a);const i=a;export{i as default};
