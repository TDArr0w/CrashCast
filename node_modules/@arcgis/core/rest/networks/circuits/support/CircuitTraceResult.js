/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as r}from"tslib";import{JSONSupport as t}from"../../../../core/JSONSupport.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{reader as e}from"../../../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import i from"../../../../geometry/Polyline.js";import c from"../../../../networks/support/Circuit.js";import p from"../../../../networks/support/CircuitPath.js";let u=class extends t{constructor(r){super(r),this.circuit=null,this.geometry=null,this.path=null}readCircuit(r,t){return c.fromJSON(t)}};r([o({type:c,json:{write:!0,read:{source:["name","globalId","isSectioned","sectionOrder","startLocation","stopLocation","sections","subcircuits","lastVerifiedTime","lastExportedTime","circuitType","status"]}}})],u.prototype,"circuit",void 0),r([e("circuit")],u.prototype,"readCircuit",null),r([o({type:i,json:{write:!0}})],u.prototype,"geometry",void 0),r([o({type:p,json:{write:!0}})],u.prototype,"path",void 0),u=r([s("esri.rest.networks.circuits.support.CircuitTraceResult")],u);const a=u;export{a as default};
