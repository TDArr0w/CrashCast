/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o}from"tslib";import{clone as r}from"../../core/lang.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import{reader as s}from"../../core/accessorSupport/decorators/reader.js";import{subclass as e}from"../../core/accessorSupport/decorators/subclass.js";import{writer as p}from"../../core/accessorSupport/decorators/writer.js";import i from"./AlgorithmicColorRamp.js";import a from"./ColorRamp.js";var c;let l=c=class extends a{constructor(o){super(o),this.colorRamps=null,this.type="multipart",this.weights=void 0}writeColorRamps(o,r,t,s){const e=o?.map(o=>o.toJSON(s)),{weights:p}=this;if(e&&p?.length&&e.length===p?.length){const o=100/p.reduce((o,r)=>o+r);let r=0;e.forEach((t,s)=>{t.start=r,r+=p[s]*o,t.stop=r})}r.colorRamps=e}readWeights(o,r){const t=r.colorRamps?.map(({start:o,stop:r})=>null==o||null==r?-1:r-o);if(!t?.some(o=>o<0))return t}clone(){return new c({colorRamps:r(this.colorRamps)})}};o([t({type:[i],json:{write:{isRequired:!0}}})],l.prototype,"colorRamps",void 0),o([p("colorRamps")],l.prototype,"writeColorRamps",null),o([t({type:["multipart"],json:{write:{isRequired:!0}}})],l.prototype,"type",void 0),o([t({type:[Number]})],l.prototype,"weights",void 0),o([s("weights",["colorRamps"])],l.prototype,"readWeights",null),l=c=o([e("esri.rest.support.MultipartColorRamp")],l);export{l as default};
