/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import e from"../../Graphic.js";import r from"../../PopupTemplate.js";import{ClonableMixin as s}from"../../core/Clonable.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as p}from"../../core/accessorSupport/decorators/reader.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{writer as l}from"../../core/accessorSupport/decorators/writer.js";import u from"../../geometry/Point.js";import{getPrefixedProperties as d,setPrefixedProperties as n,toKebabImpedanceAttributes as m,fromKebabImpedanceAttributes as c}from"../route/utils.js";import{statusJsonMap as y,fullEdgeJsonMap as b,curbApproachJsonMap as h,barrierTypeJsonMap as j,sideOfEdgeJsonMap as g}from"./networkEnums.js";import{symbolTypes as f}from"../../symbols/support/typeUtils.js";var S;let T=class extends(s(o)){static{S=this}constructor(t){super(t),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(t,e){return d(e.attributes,"Attr_")}writeCosts(t,e){n(t,e,"Attr_")}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}]}static fromGraphic(t){return new S({addedCost:t.attributes.AddedCost??null,barrierType:null!=t.attributes.BarrierType?j.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?m(JSON.parse(t.attributes.Costs)):null,curbApproach:null!=t.attributes.CurbApproach?h.fromJSON(t.attributes.CurbApproach):null,fullEdge:null!=t.attributes.FullEdge?b.fromJSON(t.attributes.FullEdge):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,status:null!=t.attributes.Status?y.fromJSON(t.attributes.Status):null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:this.barrierType?j.toJSON(this.barrierType):null,Costs:this.costs?JSON.stringify(c(this.costs)):null,CurbApproach:this.curbApproach?h.toJSON(this.curbApproach):null,FullEdge:this.fullEdge?b.toJSON(this.fullEdge):null,Name:this.name,Status:this.status?y.toJSON(this.status):null};return new e({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};t([i()],T.prototype,"addedCost",void 0),t([i({type:j.apiValues,json:{name:"attributes.BarrierType",read:{reader:j.read},write:{writer:j.write}}})],T.prototype,"barrierType",void 0),t([i()],T.prototype,"costs",void 0),t([p("costs",["attributes"])],T.prototype,"readCosts",null),t([l("costs")],T.prototype,"writeCosts",null),t([i({type:h.apiValues,json:{read:{source:"attributes.CurbApproach",reader:h.read}}})],T.prototype,"curbApproach",void 0),t([i({type:b.apiValues,json:{name:"attributes.FullEdge",read:{reader:b.read},write:{writer:b.write}}})],T.prototype,"fullEdge",void 0),t([i({type:u,json:{write:!0}})],T.prototype,"geometry",void 0),t([i({json:{name:"attributes.Name"}})],T.prototype,"name",void 0),t([i({json:{name:"attributes.ObjectID"}})],T.prototype,"objectId",void 0),t([i({type:r})],T.prototype,"popupTemplate",void 0),t([i({type:g.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:g.read}}})],T.prototype,"sideOfEdge",void 0),t([i({json:{read:{source:"attributes.SourceID"}}})],T.prototype,"sourceId",void 0),t([i({json:{read:{source:"attributes.SourceOID"}}})],T.prototype,"sourceOid",void 0),t([i({type:y.apiValues,json:{read:{source:"attributes.Status",reader:y.read}}})],T.prototype,"status",void 0),t([i({types:f})],T.prototype,"symbol",void 0),t([i({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),T=S=t([a("esri.rest.support.PointBarrier")],T);export{T as default};
