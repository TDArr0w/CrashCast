/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{JSONMap as e}from"../../core/jsonMap.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{clone as i}from"../../core/lang.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{ensureType as s}from"../../core/accessorSupport/ensureType.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{writer as p}from"../../core/accessorSupport/decorators/writer.js";import l from"../../geometry/SpatialReference.js";import{fromJSON as a}from"../../geometry/support/jsonUtils.js";import{geometryTypes as u}from"../../geometry/support/typeUtils.js";import{QueryMixin as d}from"./QueryMixin.js";import c from"./TopFilter.js";import m from"../../time/TimeExtent.js";var y;const h=new e({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),j=new e({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let S=class extends(d(r)){static{y=this}constructor(t){super(t),this.cacheHint=void 0,this.distance=void 0,this.geometry=null,this.geometryPrecision=void 0,this.maxAllowableOffset=void 0,this.num=void 0,this.objectIds=null,this.orderByFields=null,this.outFields=null,this.outSpatialReference=null,this.resultType=null,this.returnGeometry=!1,this.returnM=void 0,this.returnZ=void 0,this.start=void 0,this.spatialRelationship="intersects",this.timeExtent=null,this.topFilter=void 0,this.units=null,this.where="1=1"}writeStart(t,e){e.resultOffset=this.start,e.resultRecordCount=this.num||10}clone(){return new y(i({cacheHint:this.cacheHint,distance:this.distance,geometry:this.geometry,geometryPrecision:this.geometryPrecision,maxAllowableOffset:this.maxAllowableOffset,num:this.num,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,resultType:this.resultType,returnGeometry:this.returnGeometry,returnZ:this.returnZ,returnM:this.returnM,start:this.start,spatialRelationship:this.spatialRelationship,timeExtent:this.timeExtent,topFilter:this.topFilter,units:this.units,where:this.where}))}};t([o({type:Boolean,json:{write:!0}})],S.prototype,"cacheHint",void 0),t([o({type:Number,json:{write:{overridePolicy:t=>({enabled:t>0})}}})],S.prototype,"distance",void 0),t([o({types:u,json:{read:a,write:!0}})],S.prototype,"geometry",void 0),t([o({type:Number,json:{write:!0}})],S.prototype,"geometryPrecision",void 0),t([o({type:Number,json:{write:!0}})],S.prototype,"maxAllowableOffset",void 0),t([o({type:Number,json:{read:{source:"resultRecordCount"}}})],S.prototype,"num",void 0),t([o({json:{write:!0}})],S.prototype,"objectIds",void 0),t([o({type:[String],json:{write:!0}})],S.prototype,"orderByFields",void 0),t([o({type:[String],json:{write:!0}})],S.prototype,"outFields",void 0),t([o({type:l,json:{read:{source:"outSR"},write:{target:"outSR"}}})],S.prototype,"outSpatialReference",void 0),t([o({type:String,json:{write:!0}})],S.prototype,"resultType",void 0),t([o({json:{write:!0}})],S.prototype,"returnGeometry",void 0),t([o({type:Boolean,json:{write:{overridePolicy:t=>({enabled:t})}}})],S.prototype,"returnM",void 0),t([o({type:Boolean,json:{write:{overridePolicy:t=>({enabled:t})}}})],S.prototype,"returnZ",void 0),t([o({type:Number,json:{read:{source:"resultOffset"}}})],S.prototype,"start",void 0),t([p("start"),p("num")],S.prototype,"writeStart",null),t([o({type:String,json:{read:{source:"spatialRel",reader:h.read},write:{target:"spatialRel",writer:h.write}}})],S.prototype,"spatialRelationship",void 0),t([o({type:m,json:{write:!0}})],S.prototype,"timeExtent",void 0),t([o({type:c,json:{write:!0}})],S.prototype,"topFilter",void 0),t([o({type:String,json:{read:j.read,write:{writer:j.write,overridePolicy(t){return{enabled:null!=t&&null!=this.distance}}}}})],S.prototype,"units",void 0),t([o({type:String,json:{write:!0}})],S.prototype,"where",void 0),S=y=t([n("esri.rest.support.TopFeaturesQuery")],S),S.from=s(S);export{S as default};
