/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import e from"../core/Collection.js";import{referenceSetter as r}from"../core/collectionUtils.js";import o from"../core/Logger.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/RandomLCG.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";const a=new Set(["feature","subtype-group"]);function l(t,e,r){if(t)for(let o=0,s=t.length;o<s;o++){const s=t.at(o);if(s[e]===r)return s;if("group"===s?.type){const t=l(s.tables,e,r);if(t)return t}}}const n=n=>{const p=n;let c=class extends p{constructor(...t){super(...t),this.tables=new e,this.addHandles([this.tables.on("after-add",t=>{const e=t.item;e.parent&&e.parent!==this&&e.removeFromParent(),e.parent=this,a.has(e.type)||o.getLogger(this).error(`Layer 'title:${e.title}, id:${e.id}' of type '${e.type}' is not supported as a table and will therefore be ignored.`)}),this.tables.on("after-remove",t=>{t.item.parent=null})])}destroy(){const t=this.tables.toArray();for(const e of t)e.destroy();this.tables.destroy()}removeChildLayer(t){this.tables.remove(t),super.removeChildLayer?.(t)}set tables(t){this._set("tables",r(t,this._get("tables")))}findTableById(t){return l(this.tables,"id",t)}findTableByUid(t){return l(this.tables,"uid",t)}};return t([s()],c.prototype,"tables",null),c=t([i("esri.support.TablesMixin")],c),c};export{n as TablesMixin,a as allowedTableTypes};
