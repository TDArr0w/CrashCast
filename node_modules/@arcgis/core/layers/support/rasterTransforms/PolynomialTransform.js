/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{enumeration as o}from"../../../core/accessorSupport/decorators/enumeration.js";import{reader as t}from"../../../core/accessorSupport/decorators/reader.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as s}from"../../../core/accessorSupport/decorators/writer.js";import n from"../../../geometry/Extent.js";import f from"../../../geometry/Point.js";import l from"./BaseRasterTransform.js";var p;function a(e,r,o){const{x:t,y:i}=r;if(o<2){return{x:e[0]+t*e[2]+i*e[4],y:e[1]+t*e[3]+i*e[5]}}if(2===o){const r=t*t,o=i*i,s=t*i;return{x:e[0]+t*e[2]+i*e[4]+r*e[6]+s*e[8]+o*e[10],y:e[1]+t*e[3]+i*e[5]+r*e[7]+s*e[9]+o*e[11]}}const s=t*t,n=i*i,f=t*i,l=s*t,p=s*i,a=t*n,c=i*n;return{x:e[0]+t*e[2]+i*e[4]+s*e[6]+f*e[8]+n*e[10]+l*e[12]+p*e[14]+a*e[16]+c*e[18],y:e[1]+t*e[3]+i*e[5]+s*e[7]+f*e[9]+n*e[11]+l*e[13]+p*e[15]+a*e[17]+c*e[19]}}function c(e,r,o){const{xmin:t,ymin:i,xmax:s,ymax:f,spatialReference:l}=r;let p=[];if(o<2)p.push({x:t,y:f}),p.push({x:s,y:f}),p.push({x:t,y:i}),p.push({x:s,y:i});else{let e=10;for(let r=0;r<e;r++)p.push({x:t,y:i+(f-i)*r/(e-1)}),p.push({x:s,y:i+(f-i)*r/(e-1)});e=8;for(let r=1;r<=e;r++)p.push({x:t+(s-t)*r/e,y:i}),p.push({x:t+(s-t)*r/e,y:f})}p=p.map(r=>a(e,r,o));const c=p.map(e=>e.x),m=p.map(e=>e.y);return new n({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,m),ymax:Math.max.apply(null,m),spatialReference:l})}function m(e){const[r,o,t,i,s,n]=e,f=t*n-s*i,l=s*i-t*n;return[(s*o-r*n)/f,(t*o-r*i)/l,n/f,i/l,-s/f,-t/l]}let u=p=class extends l{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,r){const{coeffX:o,coeffY:t}=r;if(!o?.length||!t?.length||o.length!==t.length)return null;const i=[];for(let s=0;s<o.length;s++)i.push(o[s]),i.push(t[s]);return i}writeForwardCoefficients(e,r,o){const t=[],i=[];for(let s=0;s<e?.length;s++)s%2==0?t.push(e[s]):i.push(e[s]);r.coeffX=t,r.coeffY=i}get inverseCoefficients(){let e=this._get("inverseCoefficients");const r=this._get("forwardCoefficients");return!e&&r&&this.polynomialOrder<2&&(e=m(r)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,r){const{inverseCoeffX:o,inverseCoeffY:t}=r;if(!o?.length||!t?.length||o.length!==t.length)return null;const i=[];for(let s=0;s<o.length;s++)i.push(o[s]),i.push(t[s]);return i}writeInverseCoefficients(e,r,o){const t=[],i=[];for(let s=0;s<e?.length;s++)s%2==0?t.push(e[s]):i.push(e[s]);r.inverseCoeffX=t,r.inverseCoeffY=i}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const r=a(this.forwardCoefficients,e,this.polynomialOrder);return new f({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const r=a(this.inverseCoefficients,e,this.polynomialOrder);return new f({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new p({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};e([r({json:{write:!0}})],u.prototype,"polynomialOrder",void 0),e([r()],u.prototype,"forwardCoefficients",void 0),e([t("forwardCoefficients",["coeffX","coeffY"])],u.prototype,"readForwardCoefficients",null),e([s("forwardCoefficients")],u.prototype,"writeForwardCoefficients",null),e([r({json:{write:!0}})],u.prototype,"inverseCoefficients",null),e([t("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],u.prototype,"readInverseCoefficients",null),e([s("inverseCoefficients")],u.prototype,"writeInverseCoefficients",null),e([r()],u.prototype,"affectsPixelSize",null),e([o({PolynomialXform:"polynomial"})],u.prototype,"type",void 0),u=p=e([i("esri.layers.support.rasterTransforms.PolynomialTransform")],u);export{u as default};
