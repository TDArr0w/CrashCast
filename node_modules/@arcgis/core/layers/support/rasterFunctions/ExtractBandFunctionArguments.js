/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{enumeration as e}from"../../../core/accessorSupport/decorators/enumeration.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import r from"./BaseFunctionArguments.js";var n;let a=n=class extends r{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=0}clone(){return new n({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};t([o({json:{write:!0}})],a.prototype,"bandIds",void 0),t([o({json:{write:!0}})],a.prototype,"bandNames",void 0),t([o({json:{write:!0}})],a.prototype,"bandWavelengths",void 0),t([e({0:"name",1:"wavelength",2:"id"})],a.prototype,"method",void 0),t([o({json:{write:!0}})],a.prototype,"missingBandAction",void 0),t([o({json:{write:!0}})],a.prototype,"wavelengthMatchTolerance",void 0),a=n=t([s("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],a);const i=a;export{i as default};
