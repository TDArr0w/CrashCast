/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o}from"tslib";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{reader as e}from"../../../core/accessorSupport/decorators/reader.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import s from"./HillshadeFunctionArguments.js";import{colorRampDict as i,getColorRampJSON as p}from"../../../renderers/support/colorRampUtils.js";var a;let l=a=class extends s{readColorRamp(o){if("string"==typeof o){const r=i.jsonValues.find(r=>r.toLowerCase()===o.toLowerCase());return r?p(i.fromJSON(r)):null}return"toJSON"in o?o.toJSON():o}clone(){return new a({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};o([r({json:{write:!0}})],l.prototype,"colorRamp",void 0),o([e("colorRamp")],l.prototype,"readColorRamp",null),o([r({type:[[Number]],json:{write:!0}})],l.prototype,"colormap",void 0),l=a=o([t("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],l);const c=l;export{c as default};
