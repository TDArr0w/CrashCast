/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as r}from"tslib";import t from"../../request.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{LoadableMixin as s}from"../../core/Loadable.js";import e from"../../core/Logger.js";import{EsriPromiseMixin as i}from"../../core/Promise.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/RandomLCG.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import c from"./BuildingFieldStatistics.js";let p=class extends(s(i(o))){constructor(r){super(r),this.url=null,this.customParameters=null}get fields(){return this.loaded||"loading"===this.loadStatus?this._get("fields"):(e.getLogger(this).error("building summary statistics are not loaded"),null)}load(r){const t=null!=r?r.signal:null;return this.addResolvingPromise(this._fetchService(t)),Promise.resolve(this)}async _fetchService(r){const o=(await t(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r})).data;this.read(o,{origin:"service"})}};r([a({constructOnly:!0,type:String})],p.prototype,"url",void 0),r([a({constructOnly:!0})],p.prototype,"customParameters",void 0),r([a({constructOnly:!0})],p.prototype,"apiKey",void 0),r([a({readOnly:!0,type:[c],json:{read:{source:"summary"}}})],p.prototype,"fields",null),p=r([l("esri.layers.support.BuildingSummaryStatistics")],p);export{p as default};
