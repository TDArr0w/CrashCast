/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as r}from"tslib";import{JSONSupport as e}from"../../core/JSONSupport.js";import{clone as t}from"../../core/lang.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import s from"./BuildingFilterMode.js";import l from"./BuildingFilterModeSolid.js";import p from"./BuildingFilterModeWireFrame.js";import n from"./BuildingFilterModeXRay.js";var d;const a={nonNullable:!0,types:{key:"type",base:s,typeMap:{solid:l,"wire-frame":p,"x-ray":n}},json:{read:r=>{switch(r?.type){case"solid":return l.fromJSON(r);case"wireFrame":return p.fromJSON(r);case"x-ray":return n.fromJSON(r);default:return}},write:{enabled:!0,isRequired:!0}}};let m=d=class extends e{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new l,this.title=""}clone(){return new d({filterExpression:this.filterExpression,filterMode:t(this.filterMode),title:this.title})}};r([o({type:String,json:{write:{enabled:!0,isRequired:!0}}})],m.prototype,"filterExpression",void 0),r([o(a)],m.prototype,"filterMode",void 0),r([o({type:String,json:{write:{enabled:!0,isRequired:!0}}})],m.prototype,"title",void 0),m=d=r([i("esri.layers.support.BuildingFilterBlock")],m);const c=m;export{c as default};
