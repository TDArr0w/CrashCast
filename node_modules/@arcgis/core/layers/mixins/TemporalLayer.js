/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as o}from"../../core/accessorSupport/decorators/reader.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import{excludeTables as i}from"../../core/accessorSupport/layerContainerType.js";import{fixTimeInfoFields as s}from"../support/fieldUtils.js";import m from"../support/TimeInfo.js";import{timeUnitKebabDictionary as p}from"../../portal/timeUnitKebabDictionary.js";import n from"../../time/TimeExtent.js";import a from"../../time/TimeInterval.js";const f={type:Boolean,json:{read:{source:"timeAnimation"},write:{target:"timeAnimation",layerContainerTypes:i}}},l=i=>{const l=i;let c=class extends l{constructor(){super(...arguments),this.timeExtent=null,this.timeOffset=null,this.useViewTime=!0}readOffset(t,e){const o=e.timeInfo.exportOptions;if(!o)return null;const r=o.timeOffset,i=p.fromJSON(o.timeOffsetUnits);return r&&i?new a({value:r,unit:i}):null}set timeInfo(t){s(t,this.fieldsIndex),this._set("timeInfo",t)}};return t([e({type:n,json:{write:!1}})],c.prototype,"timeExtent",void 0),t([e({type:a})],c.prototype,"timeOffset",void 0),t([o("service","timeOffset",["timeInfo.exportOptions"])],c.prototype,"readOffset",null),t([e({value:null,type:m,json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],c.prototype,"timeInfo",null),t([e(f)],c.prototype,"useViewTime",void 0),c=t([r("esri.layers.mixins.TemporalLayer")],c),c};export{l as TemporalLayer,f as useViewTimeProperty};
