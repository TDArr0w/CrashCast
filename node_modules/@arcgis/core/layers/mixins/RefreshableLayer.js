/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as e}from"tslib";import"../../core/has.js";import r from"../../core/Logger.js";import{debounce as t,ignoreAbortErrors as s}from"../../core/promiseUtils.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{cast as a}from"../../core/accessorSupport/decorators/cast.js";import"../../core/RandomLCG.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{excludeTables as n}from"../../core/accessorSupport/layerContainerType.js";import{registerLayer as h,unregisterLayer as p}from"./refresh.js";function m(e){return null!=e&&"object"==typeof e&&"refreshTimestamp"in e&&"refresh"in e}const c=.1,f=m=>{const f=m;let l=class extends f{constructor(...e){super(...e),this.refreshInterval=0,this.refreshTimestamp=0,this._debounceHasDataChanged=t(()=>this.hasDataChanged()),this.when().then(()=>{this.destroyed||h(this)},()=>{})}destroy(){p(this)}castRefreshInterval(e){return e>=c?e:e<=0?0:c}get refreshParameters(){return{_ts:this.refreshTimestamp||null}}refresh(e=Date.now()){s(this._debounceHasDataChanged()).then(r=>{r&&this._set("refreshTimestamp",e),this.emit("refresh",{dataChanged:r})},e=>{r.getLogger(this).error(e),this.emit("refresh",{dataChanged:!1,error:e})})}async hasDataChanged(){return!0}get test(){}};return e([o({type:Number,json:{write:!0,origins:{"web-scene":{write:{enabled:!0,layerContainerTypes:n}}}}})],l.prototype,"refreshInterval",void 0),e([a("refreshInterval")],l.prototype,"castRefreshInterval",null),e([o({readOnly:!0})],l.prototype,"refreshTimestamp",void 0),e([o({readOnly:!0})],l.prototype,"refreshParameters",null),l=e([i("esri.layers.mixins.RefreshableLayer")],l),l};export{f as RefreshableLayer,m as isRefreshableLayer};
