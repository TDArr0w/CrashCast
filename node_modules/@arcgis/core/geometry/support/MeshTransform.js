/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as t}from"tslib";import{ClonableMixin as o}from"../../core/Clonable.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{fromRotationTranslationScale as i,invert as a,exactEquals as l}from"../../core/libs/gl-matrix-2/math/mat4.js";import{create as n}from"../../core/libs/gl-matrix-2/factories/mat4f64.js";import{setAxisAngle as p}from"../../core/libs/gl-matrix-2/math/quat.js";import{create as m}from"../../core/libs/gl-matrix-2/factories/quatf64.js";import{create as c,fromArray as u,fromValues as f,clone as h}from"../../core/libs/gl-matrix-2/factories/vec3f64.js";import{fromAxisAndAngle as x,angle as g,angleRad as j,axis as b,up as y}from"./axisAngleDegrees.js";let d=class extends(o(r)){constructor(t){super(t),this.translation=c(),this.rotationAxis=u(y),this.rotationAngle=0,this.scale=f(1,1,1)}get rotation(){return x(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=h(b(t)),this.rotationAngle=g(t)}get localMatrix(){const t=n();return p(A,b(this.rotation),j(this.rotation)),i(t,A,this.translation,this.scale),t}get localMatrixInverse(){return a(n(),this.localMatrix)}equals(t){return this===t||null!=t&&l(this.localMatrix,t.localMatrix)}};t([e({type:[Number],nonNullable:!0,json:{write:!0}})],d.prototype,"translation",void 0),t([e({type:[Number],nonNullable:!0,json:{write:!0}})],d.prototype,"rotationAxis",void 0),t([e({type:Number,nonNullable:!0,json:{write:!0}})],d.prototype,"rotationAngle",void 0),t([e({type:[Number],nonNullable:!0,json:{write:!0}})],d.prototype,"scale",void 0),t([e()],d.prototype,"rotation",null),t([e()],d.prototype,"localMatrix",null),t([e()],d.prototype,"localMatrixInverse",null),d=t([s("esri.geometry.support.MeshTransform")],d);const A=m();export{d as default};
