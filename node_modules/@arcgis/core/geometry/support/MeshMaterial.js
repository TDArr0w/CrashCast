/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{__decorate as o}from"tslib";import r from"../../Color.js";import{ClonableMixin as e}from"../../core/Clonable.js";import{JSONSupport as t}from"../../core/JSONSupport.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import i from"./MeshTexture.js";import p from"./MeshTextureTransform.js";import{getMeshMaterialCloneContext as a,addMeshTextureCloneContext as m}from"./meshUtils/meshCloneUtils.js";let n=class extends(e(t)){constructor(o){super(o),this.color=null,this.colorTexture=null,this.colorTextureTransform=null,this.normalTexture=void 0,this.normalTextureTransform=void 0,this.alphaMode="auto",this.alphaCutoff=.5,this.doubleSided=!0}clone(o){const r=a(o),e=r?.materialMap?.get(this);if(e)return e;const t=super.clone(m(o));return r?.materialMap?.set(this,t),t}get memoryUsage(){return this.getMemoryUsage()}getMemoryUsage(){let o=0;return o+=null!=this.color?16:0,null!=this.colorTexture&&(o+=this.colorTexture.memoryUsage),o+=null!=this.colorTextureTransform?20:0,null!=this.normalTexture&&(o+=this.normalTexture.memoryUsage),o+=null!=this.normalTextureTransform?20:0,o}};o([s({type:r,json:{write:!0}})],n.prototype,"color",void 0),o([s({type:i,json:{write:!0}})],n.prototype,"colorTexture",void 0),o([s({type:p,json:{write:!0}})],n.prototype,"colorTextureTransform",void 0),o([s({type:i,json:{write:!0}})],n.prototype,"normalTexture",void 0),o([s({type:p,json:{write:!0}})],n.prototype,"normalTextureTransform",void 0),o([s({nonNullable:!0,json:{write:!0}})],n.prototype,"alphaMode",void 0),o([s({nonNullable:!0,json:{write:!0}})],n.prototype,"alphaCutoff",void 0),o([s({nonNullable:!0,json:{write:!0}})],n.prototype,"doubleSided",void 0),n=o([l("esri.geometry.support.MeshMaterial")],n);export{n as default};
