"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[5856],{35856:(t,e,s)=>{s.r(e),s.d(e,{SplatSortWorkerInput:()=>r,SplatSortWorkerOutput:()=>n,destroy:()=>h,sort:()=>f});class r{constructor(t,e,s,r=!1){this.distances=t,this.sortOrderIndices=e,this.numGaussians=s,this.preciseSort=r}}class n{constructor(t,e){this.distances=t,this.sortedOrderIndices=e}}let o=null,l=null;const i=10,a=20,u=.25;function c(t,e){const s=t.length,r=Math.max(i,Math.min(a,Math.round(Math.log2(s/u)))),n=1+(1<<r);!function(t,e){o?.length!==t&&(o=new Uint32Array(t)),l&&l.length===1+(1<<e)?l.fill(0):l=new Uint32Array(1+(1<<e))}(s,r);let c=t[0],f=t[0];for(let e=0;e<t.length;e++)c=Math.min(c,t[e]),f=Math.max(f,t[e]);const h=f-c;if(h<1e-6)for(let t=0;t<s;++t)o[t]=0,l[0]++;else{const e=(1<<r)/h;for(let r=0;r<s;r++){const s=(t[r]-c)*e>>>0;o[r]=s,l[s]++}}for(let t=1;t<n;t++)l[t]+=l[t-1];for(let t=0;t<s;t++){const s=o[t];e[--l[s]]=t}}async function f(t){const{distances:e,sortOrderIndices:s,preciseSort:r,numGaussians:o}=t,l=e.subarray(0,o),i=s.subarray(0,o);if(0===l.length||0===i.length)return{result:new n(e,s),transferList:[e.buffer,s.buffer]};if(r){const t=Array.from(i.keys());t.sort((t,e)=>l[t]-l[e]||t-e);const e=t.map(t=>i[t]);i.set(e)}else c(l,i);return{result:new n(e,s),transferList:[e.buffer,s.buffer]}}function h(){o=null,l=null}}}]);