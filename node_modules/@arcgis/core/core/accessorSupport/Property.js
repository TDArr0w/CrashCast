/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.34/esri/copyright.txt for details.
*/
import{ObservableBase as t}from"./ObservableBase.js";import{trackAccess as i,runTracked as s,trackExplicitDependencies as e,runUntracked as a}from"./tracking.js";import{Flags as o}from"./tracking/Flags.js";import{TrackingTarget as r}from"./tracking/TrackingTarget.js";class n extends t{constructor(t,i){super(),this.propertyName=t,this.metadata=i,this.trackingTarget=new r(this),this.flags=0,this.flags=o.Dirty|(i.nonNullable?o.NonNullable:0)|(i.hasOwnProperty("value")?o.HasDefaultValue:0)|(void 0===i.get?o.DepTrackingInitialized:0)|(void 0===i.dependsOn?o.AutoTracked:0)}destroy(){this.flags&o.Dirty&&this.onCommitted(),super.destroy(),this.trackingTarget.destroy()}getComputed(t){t.mutable&&i(this);const r=t.store,n=this.propertyName,g=this.flags,h=r.get(n);if(g&o.Computing)return h;if(~g&o.Dirty&&r.has(n))return h;this.flags|=o.Computing;const l=t.host;let d;g&o.AutoTracked?d=s(this.trackingTarget,this.metadata.get,l):(e(l,this),d=this.metadata.get.call(l)),this.flags|=o.DepTrackingInitialized,r.set(n,d,1);const m=r.get(n);return m===h?this.flags&=~o.Dirty:a(this.commit,this),this.flags&=~o.Computing,m}notifyChange(){this.onInvalidated(),this.onCommitted()}invalidate(){this.onInvalidated()}commit(){this.flags&=~o.Dirty,this.onCommitted()}onInvalidated(){~this.flags&o.Overridden&&(this.flags|=o.Dirty);const t=this._observers;if(t&&t.length>0)for(const i of t)i.onInvalidated()}onCommitted(){const t=this._observers;if(t&&t.length>0){const i=t.slice();for(const t of i)t.onCommitted()}}}export{n as Property};
